{"ast":null,"code":"\"use strict\";\n\nvar createError = require('http-errors');\n\nfunction _convertErrorName(errorId) {\n  errorId = errorId.charAt(0).toUpperCase() + errorId.slice(1);\n  return errorId.replace(/(\\_\\w)/g, function (m) {\n    return m[1].toUpperCase();\n  });\n}\n\n;\n\nfunction _parseError(error) {\n  if (error.errors) {\n    return error.errors[0];\n  }\n\n  if (error.error) {\n    return {\n      id: error.error,\n      message: error.error_description\n    };\n  }\n}\n\n;\n\nfunction handleHttpError(err, response, callback) {\n  if (!callback) {\n    throw new Error(\"no callback for http error handler- check method signature\");\n  }\n\n  if (err) {\n    callback(err, null);\n    return true;\n  }\n\n  if (!response) {\n    callback(createError('no response'), null);\n    return true;\n  }\n\n  if (response.statusCode !== 200 && response.statusCode !== 201 && response.statusCode !== 204) {\n    var error;\n\n    try {\n      var errorBody = _parseError(JSON.parse(response.body));\n\n      error = createError(response.statusCode, errorBody.message, {\n        name: _convertErrorName(errorBody.id)\n      });\n    } catch (ex) {\n      error = createError(response.statusCode, response.body);\n    }\n\n    callback(error, null);\n    return true;\n  }\n\n  return false;\n}\n\nfunction handleError(err, obj, callback) {\n  if (!callback) {\n    throw \"no callback - check method signature\";\n  }\n\n  if (err) {\n    callback(err, null);\n    return true;\n  }\n\n  if (obj.error) {\n    callback(createError(obj.error, {\n      name: 'APIError'\n    }), null);\n    return true;\n  }\n\n  if (obj.errors) {\n    callback(createError(obj, {\n      name: 'APIError'\n    }), null);\n    return true;\n  }\n\n  if (obj.success !== undefined && obj.success !== true) {\n    callback(createError(obj, {\n      name: 'APIError'\n    }), null);\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports.handleError = handleError;\nmodule.exports.handleHttpError = handleHttpError;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/errorHandler.js"],"names":["createError","require","_convertErrorName","errorId","charAt","toUpperCase","slice","replace","m","_parseError","error","errors","id","message","error_description","handleHttpError","err","response","callback","Error","statusCode","errorBody","JSON","parse","body","name","ex","handleError","obj","success","undefined","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar createError = require('http-errors');\n\nfunction _convertErrorName(errorId) {\n\n  errorId = errorId.charAt(0).toUpperCase() + errorId.slice(1);\n  return errorId.replace(/(\\_\\w)/g, function(m) {\n    return m[1].toUpperCase();\n  });\n};\n\nfunction _parseError(error) {\n\n  if (error.errors) {\n    return error.errors[0];\n  }\n\n  if (error.error) {\n    return {\n      id: error.error,\n      message: error.error_description\n    };\n  }\n};\n\nfunction handleHttpError(err, response, callback) {\n\n  if (!callback) {\n    throw new Error(\"no callback for http error handler- check method signature\");\n  }\n\n  if (err) {\n    callback(err, null);\n    return true;\n  }\n  if (!response) {\n    callback(createError('no response'), null);\n    return true;\n  }\n  if (response.statusCode !== 200 &&\n      response.statusCode !== 201 &&\n      response.statusCode !== 204) {\n    var error;\n    try {\n      var errorBody = _parseError(JSON.parse(response.body));\n      error = createError(response.statusCode,\n                          errorBody.message,\n                          {name: _convertErrorName(errorBody.id)});\n    } catch (ex) {\n      error = createError(response.statusCode, response.body);\n    }\n    callback(error, null);\n    return true;\n  }\n  return false;\n}\n\nfunction handleError(err, obj, callback) {\n\n  if (!callback) {throw \"no callback - check method signature\";}\n  if (err) {\n    callback(err, null);\n    return true;\n  }\n  if (obj.error) {\n    callback(createError(obj.error, {name: 'APIError'}), null);\n    return true;\n  }\n  if (obj.errors) {\n    callback(createError(obj, {name: 'APIError'}), null);\n    return true;\n  }\n  if (obj.success !== undefined && obj.success !== true) {\n    callback(createError(obj, {name: 'APIError'}), null);\n    return true;\n  }\n  return false;\n}\n\nmodule.exports.handleError     = handleError;\nmodule.exports.handleHttpError = handleHttpError;\n\n"]},"metadata":{},"sourceType":"script"}