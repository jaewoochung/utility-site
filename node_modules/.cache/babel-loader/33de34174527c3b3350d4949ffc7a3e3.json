{"ast":null,"code":"\"use strict\";\n\nvar BaseModel = require('./BaseModel'),\n    handleError = require('../errorHandler').handleError;\n\nfunction User(client, data) {\n  if (!(this instanceof User)) {\n    return new User(client, data);\n  }\n\n  BaseModel.call(this, client, data);\n}\n\nUser.prototype = Object.create(BaseModel.prototype);\n\nUser.prototype.update = function (args, callback) {\n  var self = this;\n\n  if (!self.client) {\n    throw \"no client\";\n  }\n\n  if (!self.id) {\n    callback(new Error(\"no user id\"), null);\n    return;\n  }\n\n  var path = 'user';\n\n  self.client._putHttp(path, args, function onPut(err, result) {\n    if (!handleError(err, result, callback)) {\n      callback(null, new User(self.client, result.data));\n    }\n  });\n};\n\nUser.prototype.showAuth = function (callback) {\n  var self = this;\n\n  if (!self.client) {\n    throw \"no client\";\n  }\n\n  if (!self.id) {\n    callback(new Error(\"no user id\"), null);\n    return;\n  }\n\n  var path = 'user/auth';\n\n  self.client._getHttp(path, null, function onGet(err, result) {\n    if (!handleError(err, result, callback)) {\n      callback(null, result.data);\n    }\n  });\n};\n\nmodule.exports = User;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/model/User.js"],"names":["BaseModel","require","handleError","User","client","data","call","prototype","Object","create","update","args","callback","self","id","Error","path","_putHttp","onPut","err","result","showAuth","_getHttp","onGet","module","exports"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAKC,OAAO,CAAC,aAAD,CAAzB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,WAD7C;;AAGA,SAASC,IAAT,CAAcC,MAAd,EAAsBC,IAAtB,EAA4B;AAC1B,MAAI,EAAE,gBAAgBF,IAAlB,CAAJ,EAA6B;AAC3B,WAAO,IAAIA,IAAJ,CAASC,MAAT,EAAiBC,IAAjB,CAAP;AACD;;AACDL,EAAAA,SAAS,CAACM,IAAV,CAAe,IAAf,EAAqBF,MAArB,EAA6BC,IAA7B;AACD;;AAEDF,IAAI,CAACI,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAcT,SAAS,CAACO,SAAxB,CAAjB;;AAEAJ,IAAI,CAACI,SAAL,CAAeG,MAAf,GAAwB,UAASC,IAAT,EAAeC,QAAf,EAAyB;AAC/C,MAAIC,IAAI,GAAG,IAAX;;AACA,MAAI,CAACA,IAAI,CAACT,MAAV,EAAkB;AAAC,UAAM,WAAN;AAAmB;;AACtC,MAAI,CAACS,IAAI,CAACC,EAAV,EAAc;AACZF,IAAAA,QAAQ,CAAC,IAAIG,KAAJ,CAAU,YAAV,CAAD,EAA0B,IAA1B,CAAR;AACA;AACD;;AAED,MAAIC,IAAI,GAAG,MAAX;;AAEAH,EAAAA,IAAI,CAACT,MAAL,CAAYa,QAAZ,CAAqBD,IAArB,EAA2BL,IAA3B,EAAiC,SAASO,KAAT,CAAeC,GAAf,EAAoBC,MAApB,EAA4B;AAC3D,QAAI,CAAClB,WAAW,CAACiB,GAAD,EAAMC,MAAN,EAAcR,QAAd,CAAhB,EAAyC;AACvCA,MAAAA,QAAQ,CAAC,IAAD,EAAO,IAAIT,IAAJ,CAASU,IAAI,CAACT,MAAd,EAAsBgB,MAAM,CAACf,IAA7B,CAAP,CAAR;AACD;AACF,GAJD;AAKD,CAfD;;AAiBAF,IAAI,CAACI,SAAL,CAAec,QAAf,GAA0B,UAAST,QAAT,EAAmB;AAC3C,MAAIC,IAAI,GAAG,IAAX;;AACA,MAAI,CAACA,IAAI,CAACT,MAAV,EAAkB;AAAC,UAAM,WAAN;AAAmB;;AACtC,MAAI,CAACS,IAAI,CAACC,EAAV,EAAc;AACZF,IAAAA,QAAQ,CAAC,IAAIG,KAAJ,CAAU,YAAV,CAAD,EAA0B,IAA1B,CAAR;AACA;AACD;;AAED,MAAIC,IAAI,GAAG,WAAX;;AAEAH,EAAAA,IAAI,CAACT,MAAL,CAAYkB,QAAZ,CAAqBN,IAArB,EAA2B,IAA3B,EAAiC,SAASO,KAAT,CAAeJ,GAAf,EAAoBC,MAApB,EAA4B;AAC3D,QAAI,CAAClB,WAAW,CAACiB,GAAD,EAAMC,MAAN,EAAcR,QAAd,CAAhB,EAAyC;AACvCA,MAAAA,QAAQ,CAAC,IAAD,EAAOQ,MAAM,CAACf,IAAd,CAAR;AACD;AACF,GAJD;AAKD,CAfD;;AAiBAmB,MAAM,CAACC,OAAP,GAAiBtB,IAAjB","sourcesContent":["\"use strict\";\nvar BaseModel   = require('./BaseModel'),\n    handleError = require('../errorHandler').handleError;\n\nfunction User(client, data) {\n  if (!(this instanceof User)) {\n    return new User(client, data);\n  }\n  BaseModel.call(this, client, data);\n}\n\nUser.prototype = Object.create(BaseModel.prototype);\n\nUser.prototype.update = function(args, callback) {\n  var self = this;\n  if (!self.client) {throw \"no client\";}\n  if (!self.id) {\n    callback(new Error(\"no user id\"), null);\n    return;\n  }\n\n  var path = 'user';\n\n  self.client._putHttp(path, args, function onPut(err, result) {\n    if (!handleError(err, result, callback)) {\n      callback(null, new User(self.client, result.data));\n    }\n  });\n};\n\nUser.prototype.showAuth = function(callback) {\n  var self = this;\n  if (!self.client) {throw \"no client\";}\n  if (!self.id) {\n    callback(new Error(\"no user id\"), null);\n    return;\n  }\n\n  var path = 'user/auth';\n\n  self.client._getHttp(path, null, function onGet(err, result) {\n    if (!handleError(err, result, callback)) {\n      callback(null, result.data);\n    }\n  });\n};\n\nmodule.exports = User;\n"]},"metadata":{},"sourceType":"script"}