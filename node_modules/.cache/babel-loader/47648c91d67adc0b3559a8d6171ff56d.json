{"ast":null,"code":"\"use strict\";\n\nvar Transfer = require('./Transfer'),\n    handleError = require('../errorHandler').handleError; //##CONSTRUCTOR\n//\n// _args `client`, `data`, and `account` required_\n//\n//```\n// var Sell = require('coinbase').model.Sell;\n// var mySell = new Sell(client, data, account);\n//```\n// - - -\n\n\nfunction Sell(client, data, account) {\n  if (!(this instanceof Sell)) {\n    return new Sell(client, data, account);\n  }\n\n  Transfer.call(this, client, data, account);\n}\n\nSell.prototype = Object.create(Transfer.prototype);\n\nSell.prototype.commit = function (callback) {\n  var opts = {\n    'colName': 'sells',\n    'ObjFunc': Sell\n  };\n\n  this._commit(opts, callback);\n};\n\nmodule.exports = Sell;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/model/Sell.js"],"names":["Transfer","require","handleError","Sell","client","data","account","call","prototype","Object","create","commit","callback","opts","_commit","module","exports"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAMC,OAAO,CAAC,YAAD,CAAzB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,WAD7C,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,IAAT,CAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqC;AACnC,MAAI,EAAE,gBAAgBH,IAAlB,CAAJ,EAA6B;AAC3B,WAAO,IAAIA,IAAJ,CAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,CAAP;AACD;;AACDN,EAAAA,QAAQ,CAACO,IAAT,CAAc,IAAd,EAAoBH,MAApB,EAA4BC,IAA5B,EAAkCC,OAAlC;AACD;;AAEDH,IAAI,CAACK,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAcV,QAAQ,CAACQ,SAAvB,CAAjB;;AAEAL,IAAI,CAACK,SAAL,CAAeG,MAAf,GAAwB,UAASC,QAAT,EAAmB;AAEzC,MAAIC,IAAI,GAAG;AACT,eAAY,OADH;AAET,eAAYV;AAFH,GAAX;;AAKA,OAAKW,OAAL,CAAaD,IAAb,EAAmBD,QAAnB;AACD,CARD;;AAUAG,MAAM,CAACC,OAAP,GAAiBb,IAAjB","sourcesContent":["\"use strict\";\nvar Transfer    = require('./Transfer'),\n    handleError = require('../errorHandler').handleError;\n\n//##CONSTRUCTOR\n//\n// _args `client`, `data`, and `account` required_\n//\n//```\n// var Sell = require('coinbase').model.Sell;\n// var mySell = new Sell(client, data, account);\n//```\n// - - -\nfunction Sell(client, data, account) {\n  if (!(this instanceof Sell)) {\n    return new Sell(client, data, account);\n  }\n  Transfer.call(this, client, data, account);\n}\n\nSell.prototype = Object.create(Transfer.prototype);\n\nSell.prototype.commit = function(callback) {\n\n  var opts = {\n    'colName' : 'sells',\n    'ObjFunc' : Sell\n  };\n\n  this._commit(opts, callback);\n};\n\nmodule.exports = Sell;\n"]},"metadata":{},"sourceType":"script"}