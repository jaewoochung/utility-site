{"ast":null,"code":"//\n// The AccountBase object has helper methods for the Account API\n//\n\"use strict\";\n\nvar BaseModel = require('./BaseModel'),\n    handleError = require('../errorHandler').handleError,\n    Transaction = require('./Transaction'),\n    _ = require('lodash'); // Constructor\n//\n// You must instantiate an 'Account' with the 'new' operator.\n// ```\n// new Acccount(c,d)\n// ```\n// 'client' and 'data' arguments are requried.\n//\n\n\nfunction AccountBase(client, data) {\n  if (!(this instanceof AccountBase)) {\n    return new AccountBase(client, data);\n  }\n\n  BaseModel.call(this, client, data);\n}\n\nAccountBase.prototype = Object.create(BaseModel.prototype); // INTERNAL API\n//\n// ```\n// opts = {\n//   'colName'  : colName,\n// };\n// ```\n//\n\nAccountBase.prototype._getAll = function (opts, callback, headers) {\n  var self = this;\n  var args = {};\n  var path;\n\n  if (this.hasField(opts, 'next_uri')) {\n    path = opts.next_uri.replace('/v2/', '');\n    args = null;\n  } else {\n    path = 'accounts/' + this.id + '/' + opts.colName;\n\n    if (this.hasField(opts, 'starting_after')) {\n      args.starting_after = opts.starting_after;\n    }\n\n    if (this.hasField(opts, 'ending_before')) {\n      args.ending_before = opts.ending_before;\n    }\n\n    if (this.hasField(opts, 'limit')) {\n      args.limit = opts.limit;\n    }\n\n    if (this.hasField(opts, 'order')) {\n      args.order = opts.order;\n    }\n  }\n\n  this.client._getHttp(path, args, function onGet(err, result) {\n    if (!handleError(err, result, callback)) {\n      if (result.data.length > 0) {\n        var ObjFunc = self.client._stringToClass(result.data[0].resource);\n      }\n\n      var objs = _.map(result.data, function onMap(obj) {\n        return new ObjFunc(self.client, obj, self);\n      });\n\n      callback(null, objs, result.pagination);\n    }\n  }, headers);\n}; // INTERNAL API\n//\n// ```\n// opts = {\n//   'colName': colName,\n//   'id': id\n// };\n// ```\n//\n\n\nAccountBase.prototype._getOne = function (opts, callback, headers) {\n  var self = this;\n  var path = 'accounts/' + this.id + '/' + opts.colName + '/' + opts.id;\n\n  this.client._getHttp(path, null, function onGet(err, obj) {\n    if (!handleError(err, obj, callback)) {\n      var ObjFunc = self.client._stringToClass(obj.data.resource);\n\n      callback(null, new ObjFunc(self.client, obj.data, self));\n    }\n  }, headers);\n}; // ```\n// opts = {\n//   'colName': colName,\n//   'params' : params\n// };\n// ```\n\n\nAccountBase.prototype._postOne = function (opts, callback, headers) {\n  var self = this;\n  var path = 'accounts/' + this.id + '/' + opts.colName;\n\n  this.client._postHttp(path, opts.params, function onPost(err, obj) {\n    if (!handleError(err, obj, callback)) {\n      var ObjFunc = self.client._stringToClass(obj.data.resource);\n\n      callback(null, new ObjFunc(self.client, obj.data, self));\n    }\n  }, headers);\n}; // INTERNAL API\n\n\nAccountBase.prototype._initTxn = function (args, callback, headers) {\n  var self = this;\n  var path = 'accounts/' + this.id + \"/transactions\";\n\n  this.client._postHttp(path, args, function onPost(err, obj) {\n    if (!handleError(err, obj, callback)) {\n      var txn = new Transaction(self.client, obj.data, self);\n      callback(null, txn);\n    }\n  }, headers);\n};\n\nmodule.exports = AccountBase;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/model/AccountBase.js"],"names":["BaseModel","require","handleError","Transaction","_","AccountBase","client","data","call","prototype","Object","create","_getAll","opts","callback","headers","self","args","path","hasField","next_uri","replace","id","colName","starting_after","ending_before","limit","order","_getHttp","onGet","err","result","length","ObjFunc","_stringToClass","resource","objs","map","onMap","obj","pagination","_getOne","_postOne","_postHttp","params","onPost","_initTxn","txn","module","exports"],"mappings":"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","sourcesContent":["//\n// The AccountBase object has helper methods for the Account API\n//\n\"use strict\";\nvar BaseModel   = require('./BaseModel'),\n    handleError = require('../errorHandler').handleError,\n    Transaction = require('./Transaction'),\n    _           = require('lodash');\n\n\n// Constructor\n//\n// You must instantiate an 'Account' with the 'new' operator.\n// ```\n// new Acccount(c,d)\n// ```\n// 'client' and 'data' arguments are requried.\n//\nfunction AccountBase(client, data) {\n  if (!(this instanceof AccountBase)) {\n    return new AccountBase(client, data);\n  }\n  BaseModel.call(this, client, data);\n}\n\nAccountBase.prototype = Object.create(BaseModel.prototype);\n\n// INTERNAL API\n//\n// ```\n// opts = {\n//   'colName'  : colName,\n// };\n// ```\n//\nAccountBase.prototype._getAll = function(opts, callback, headers) {\n  var self = this;\n  var args = {};\n  var path;\n  if (this.hasField(opts, 'next_uri')) {\n    path = opts.next_uri.replace('/v2/', '');\n    args = null;\n  } else {\n    path = 'accounts/' + this.id + '/' + opts.colName;\n    if (this.hasField(opts, 'starting_after')) {\n      args.starting_after = opts.starting_after;\n    }\n    if (this.hasField(opts, 'ending_before')) {\n      args.ending_before = opts.ending_before;\n    }\n    if (this.hasField(opts, 'limit')) {\n      args.limit = opts.limit;\n    }\n    if (this.hasField(opts, 'order')) {\n      args.order = opts.order;\n    }\n  }\n\n  this.client._getHttp(path, args, function onGet(err, result) {\n    if (!handleError(err, result, callback)) {\n      if (result.data.length > 0) {\n        var ObjFunc = self.client._stringToClass(result.data[0].resource);\n      }\n      var objs = _.map(result.data, function onMap(obj) {\n        return new ObjFunc(self.client, obj, self);\n      });\n      callback(null, objs, result.pagination);\n    }\n  }, headers);\n};\n\n// INTERNAL API\n//\n// ```\n// opts = {\n//   'colName': colName,\n//   'id': id\n// };\n// ```\n//\nAccountBase.prototype._getOne = function(opts, callback, headers) {\n  var self = this;\n  var path = 'accounts/' + this.id + '/' + opts.colName + '/' + opts.id;\n  this.client._getHttp(path, null, function onGet(err, obj) {\n    if (!handleError(err, obj, callback)) {\n      var ObjFunc = self.client._stringToClass(obj.data.resource);\n      callback(null, new ObjFunc(self.client, obj.data, self));\n    }\n  }, headers);\n};\n\n// ```\n// opts = {\n//   'colName': colName,\n//   'params' : params\n// };\n// ```\nAccountBase.prototype._postOne = function(opts, callback, headers) {\n  var self = this;\n  var path = 'accounts/' + this.id + '/' + opts.colName;\n  this.client._postHttp(path, opts.params, function onPost(err, obj) {\n    if (!handleError(err, obj, callback)) {\n      var ObjFunc = self.client._stringToClass(obj.data.resource);\n      callback(null, new ObjFunc(self.client, obj.data, self));\n    }\n  }, headers);\n};\n\n// INTERNAL API\nAccountBase.prototype._initTxn = function(args, callback, headers) {\n  var self = this;\n  var path = 'accounts/' + this.id + \"/transactions\";\n\n  this.client._postHttp(path, args, function onPost(err, obj) {\n      if (!handleError(err, obj, callback)) {\n        var txn = new Transaction(self.client, obj.data, self);\n        callback(null, txn);\n      }\n    }, headers);\n};\n\nmodule.exports = AccountBase;\n"]},"metadata":{},"sourceType":"script"}