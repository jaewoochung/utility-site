{"ast":null,"code":"var _jsxFileName = \"/Users/jaewoochung/Documents/github_repositories/utility-site/src/components/CoinPrices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Avatar, Grid, Card, CardHeader, CardContent, Typography, Box } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport millify from \"millify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoinPrices() {\n  _s();\n\n  const [coinPrices, setCoinPrices] = useState([]);\n  const TableHeadCoin = withStyles(theme => ({\n    root: {\n      backgroundColor: '#778899'\n    }\n  }))(TableHead);\n  const TableHeaderCell = withStyles(theme => ({\n    root: {\n      color: 'white'\n    }\n  }))(TableCell);\n  useEffect(() => {\n    axios.get('https://api.coinstats.app/public/v1/coins?skip=0&limit=10').then(response => {\n      setCoinPrices(response.data.coins);\n      console.log(response.data.coins);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      sx: {\n        ml: \"35%\",\n        m: 2\n      },\n      children: \"Top 10 Cryptocurrencies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: coinPrices.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 3,\n        xs: 4,\n        sx: {\n          m: 1.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            m: 1.25\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"p\",\n              children: [\"Price: \", millify(item.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"p\",\n              children: [\"Market Cap: \", millify(item.marketCap)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"p\",\n              children: [\"Daily Change: \", millify(item.priceChange1d), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CoinPrices, \"grozF+E6ZTD39lFvWF66UkNfYx0=\");\n\n_c = CoinPrices;\nexport default CoinPrices;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinPrices\");","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/utility-site/src/components/CoinPrices.js"],"names":["React","useState","useEffect","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Avatar","Grid","Card","CardHeader","CardContent","Typography","Box","withStyles","millify","CoinPrices","coinPrices","setCoinPrices","TableHeadCoin","theme","root","backgroundColor","TableHeaderCell","color","get","then","response","data","coins","console","log","ml","m","map","item","display","icon","name","price","marketCap","priceChange1d"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'\nimport { Avatar, Grid, Card, CardHeader, CardContent, Typography, Box } from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles'\nimport millify from \"millify\"\n\nfunction CoinPrices() {\n\tconst [coinPrices, setCoinPrices] = useState([])\n\n\tconst TableHeadCoin = withStyles(theme => ({\n\t\troot: {\n\t\t\tbackgroundColor: '#778899'\n\t\t}\n\t}))(TableHead);\n\n\tconst TableHeaderCell = withStyles(theme => ({\n\t\troot: {\n\t\t\tcolor: 'white'\n\t\t}\n\t}))(TableCell);\n\t\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get('https://api.coinstats.app/public/v1/coins?skip=0&limit=10')\n\t\t\t.then(response => {\n\t\t\t\tsetCoinPrices(response.data.coins)\n\t\t\t\tconsole.log(response.data.coins)\n\t\t\t})\n\t}, [])\n\t\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h1\" sx={{ ml:\"35%\", m: 2 }} >\n\t\t\t\tTop 10 Cryptocurrencies\n\t\t\t</Typography>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t{coinPrices.map((item) => (\n\t\t\t\t\t<Card elevation={3} xs={4} sx={{ m:1.5 }}>\n\t\t\t\t\t\t<Box sx={{ display: 'flex', m:1.25 }}>\n\t\t\t\t\t\t\t<Avatar src={item.icon}></Avatar>\n\t\t\t\t\t\t\t<Typography variant=\"h4\">{item.name}</Typography>\t\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box sx={{ display: 'block'}}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography variant=\"p\">Price: {millify(item.price)}</Typography>\t\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography variant=\"p\">Market Cap: {millify(item.marketCap)}</Typography>\t\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography variant=\"p\">Daily Change: {millify(item.priceChange1d)}%</Typography>\t\t\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Card>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</div>\n\t)\n}\n\nexport default CoinPrices\n"]},"metadata":{},"sourceType":"module"}