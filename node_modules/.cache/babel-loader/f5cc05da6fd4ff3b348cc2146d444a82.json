{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + $errs + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n\n    out += ' ' + it.validate($it) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + $nextValid + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    /* istanbul ignore else */\n\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + 'not' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: {} ';\n\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n      }\n\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n\n    var __err = out;\n    out = $$outStack.pop();\n\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + __err + ']); ';\n      } else {\n        out += ' validate.errors = [' + __err + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n\n    out += ' } else {  errors = ' + $errs + '; if (vErrors !== null) { if (' + $errs + ') vErrors.length = ' + $errs + '; else vErrors = null; } ';\n\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   ';\n    /* istanbul ignore else */\n\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + 'not' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: {} ';\n\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n      }\n\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n\n  return out;\n};","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/har-validator/node_modules/ajv/lib/dotjs/not.js"],"names":["module","exports","generate_not","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$errs","$it","copy","$nextValid","schemaHasRules","RULES","all","$wasComposite","compositeRule","createErrors","$allErrorsOption","validate","$$outStack","push","errorPath","toQuotedString","messages","verbose","__err","pop","async"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}