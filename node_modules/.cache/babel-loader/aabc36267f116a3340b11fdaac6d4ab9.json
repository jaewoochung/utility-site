{"ast":null,"code":"\"use strict\";\n\nvar assign = require('object-assign'); //\n// system super class with utils\n//\n\n\nfunction Base() {\n  if (!(this instanceof Base)) {\n    return new Base();\n  }\n}\n\nBase.prototype.hasField = function (obj, field) {\n  return obj && obj.hasOwnProperty(field) && obj[field];\n};\n\nBase.prototype.getProps = function () {\n  var tmp = {};\n  assign(tmp, this);\n  delete tmp.client;\n  delete tmp.account;\n  return tmp;\n};\n\nBase.prototype.dumpJSON = function () {\n  return JSON.stringify(this.getProps());\n};\n\nBase.prototype.toString = function () {\n  return this.dumpJSON();\n};\n\nmodule.exports = Base;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/Base.js"],"names":["assign","require","Base","prototype","hasField","obj","field","hasOwnProperty","getProps","tmp","client","account","dumpJSON","JSON","stringify","toString","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB,C,CAEA;AACA;AACA;;;AAEA,SAASC,IAAT,GAAgB;AACd,MAAI,EAAE,gBAAgBA,IAAlB,CAAJ,EAA6B;AAC3B,WAAO,IAAIA,IAAJ,EAAP;AACD;AACF;;AAEDA,IAAI,CAACC,SAAL,CAAeC,QAAf,GAA0B,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC7C,SAAQD,GAAG,IAAIA,GAAG,CAACE,cAAJ,CAAmBD,KAAnB,CAAP,IAAoCD,GAAG,CAACC,KAAD,CAA/C;AACD,CAFD;;AAIAJ,IAAI,CAACC,SAAL,CAAeK,QAAf,GAA0B,YAAW;AACnC,MAAIC,GAAG,GAAG,EAAV;AACAT,EAAAA,MAAM,CAACS,GAAD,EAAM,IAAN,CAAN;AACA,SAAOA,GAAG,CAACC,MAAX;AACA,SAAOD,GAAG,CAACE,OAAX;AACA,SAAOF,GAAP;AACD,CAND;;AAQAP,IAAI,CAACC,SAAL,CAAeS,QAAf,GAA0B,YAAW;AACnC,SAAOC,IAAI,CAACC,SAAL,CAAe,KAAKN,QAAL,EAAf,CAAP;AACD,CAFD;;AAIAN,IAAI,CAACC,SAAL,CAAeY,QAAf,GAA0B,YAAW;AACnC,SAAO,KAAKH,QAAL,EAAP;AACD,CAFD;;AAIAI,MAAM,CAACC,OAAP,GAAiBf,IAAjB","sourcesContent":["\"use strict\";\n\nvar assign = require('object-assign');\n\n//\n// system super class with utils\n//\n\nfunction Base() {\n  if (!(this instanceof Base)) {\n    return new Base();\n  }\n}\n\nBase.prototype.hasField = function(obj, field) {\n  return (obj && obj.hasOwnProperty(field) && obj[field]);\n};\n\nBase.prototype.getProps = function() {\n  var tmp = {};\n  assign(tmp, this);\n  delete tmp.client;\n  delete tmp.account;\n  return tmp;\n};\n\nBase.prototype.dumpJSON = function() {\n  return JSON.stringify(this.getProps());\n};\n\nBase.prototype.toString = function() {\n  return this.dumpJSON();\n};\n\nmodule.exports = Base;\n\n"]},"metadata":{},"sourceType":"script"}