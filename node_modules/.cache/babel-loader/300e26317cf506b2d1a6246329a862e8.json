{"ast":null,"code":"/**\n * @license\n * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;\n(function () {\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n  /** Used as the semantic version number. */\n\n  var VERSION = '3.1.0';\n  /** Used to compose bitmasks for wrapper metadata. */\n\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      REARG_FLAG = 128,\n      ARY_FLAG = 256;\n  /** Used as default options for `_.trunc`. */\n\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n  /** Used to detect when a function becomes hot. */\n\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n  /** Used to indicate the type of lazy iteratees. */\n\n  var LAZY_FILTER_FLAG = 0,\n      LAZY_MAP_FLAG = 1,\n      LAZY_WHILE_FLAG = 2;\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n\n  var FUNC_ERROR_TEXT = 'Expected a function';\n  /** Used as the internal argument placeholder. */\n\n  var PLACEHOLDER = '__lodash_placeholder__';\n  /** `Object#toString` result references. */\n\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n  /** Used to match empty string literals in compiled template source. */\n\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n  /** Used to match HTML entities and HTML characters. */\n\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n  /** Used to match template delimiters. */\n\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n  /**\n   * Used to match ES template delimiters.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components)\n   * for more details.\n   */\n\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n  /** Used to match `RegExp` flags from their coerced string values. */\n\n  var reFlags = /\\w*$/;\n  /** Used to detect named functions. */\n\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n  /** Used to detect hexadecimal string values. */\n\n  var reHexPrefix = /^0[xX]/;\n  /** Used to detect host constructors (Safari > 5). */\n\n  var reHostCtor = /^\\[object .+?Constructor\\]$/;\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n  /** Used to ensure capturing order of template delimiters. */\n\n  var reNoMatch = /($^)/;\n  /**\n   * Used to match `RegExp` special characters.\n   * See this [article on `RegExp` characters](http://www.regular-expressions.info/characters.html#special)\n   * for more details.\n   */\n\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n  /** Used to detect functions containing a `this` reference. */\n\n  var reThis = /\\bthis\\b/;\n  /** Used to match unescaped characters in compiled string literals. */\n\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n  /** Used to match words to create compound words. */\n\n  var reWords = function () {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n    return RegExp(upper + '{2,}(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }();\n  /** Used to detect and test for whitespace. */\n\n\n  var whitespace = // Basic whitespace characters.\n  ' \\t\\x0b\\f\\xa0\\ufeff' + // Line terminators.\n  '\\n\\r\\u2028\\u2029' + // Unicode category \"Zs\" space separators.\n  '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000';\n  /** Used to assign default `context` object properties. */\n\n  var contextProps = ['Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number', 'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document', 'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', 'window', 'WinRTError'];\n  /** Used to make template sourceURLs easier to identify. */\n\n  var templateCounter = -1;\n  /** Used to identify `toStringTag` values of typed arrays. */\n\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[stringTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[mapTag] = cloneableTags[setTag] = cloneableTags[weakMapTag] = false;\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\n  var deburredLetters = {\n    '\\xc0': 'A',\n    '\\xc1': 'A',\n    '\\xc2': 'A',\n    '\\xc3': 'A',\n    '\\xc4': 'A',\n    '\\xc5': 'A',\n    '\\xe0': 'a',\n    '\\xe1': 'a',\n    '\\xe2': 'a',\n    '\\xe3': 'a',\n    '\\xe4': 'a',\n    '\\xe5': 'a',\n    '\\xc7': 'C',\n    '\\xe7': 'c',\n    '\\xd0': 'D',\n    '\\xf0': 'd',\n    '\\xc8': 'E',\n    '\\xc9': 'E',\n    '\\xca': 'E',\n    '\\xcb': 'E',\n    '\\xe8': 'e',\n    '\\xe9': 'e',\n    '\\xea': 'e',\n    '\\xeb': 'e',\n    '\\xcC': 'I',\n    '\\xcd': 'I',\n    '\\xce': 'I',\n    '\\xcf': 'I',\n    '\\xeC': 'i',\n    '\\xed': 'i',\n    '\\xee': 'i',\n    '\\xef': 'i',\n    '\\xd1': 'N',\n    '\\xf1': 'n',\n    '\\xd2': 'O',\n    '\\xd3': 'O',\n    '\\xd4': 'O',\n    '\\xd5': 'O',\n    '\\xd6': 'O',\n    '\\xd8': 'O',\n    '\\xf2': 'o',\n    '\\xf3': 'o',\n    '\\xf4': 'o',\n    '\\xf5': 'o',\n    '\\xf6': 'o',\n    '\\xf8': 'o',\n    '\\xd9': 'U',\n    '\\xda': 'U',\n    '\\xdb': 'U',\n    '\\xdc': 'U',\n    '\\xf9': 'u',\n    '\\xfa': 'u',\n    '\\xfb': 'u',\n    '\\xfc': 'u',\n    '\\xdd': 'Y',\n    '\\xfd': 'y',\n    '\\xff': 'y',\n    '\\xc6': 'Ae',\n    '\\xe6': 'ae',\n    '\\xde': 'Th',\n    '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n  /** Used to map characters to HTML entities. */\n\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n  /** Used to map HTML entities to characters. */\n\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n  /** Used to determine if values are of the language type `Object`. */\n\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n  /** Used to escape characters for inclusion in compiled string literals. */\n\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it is the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n\n  var root = objectTypes[typeof window] && window !== (this && this.window) ? window : this;\n  /** Detect free variable `exports`. */\n\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n  /** Detect the popular CommonJS extension `module.exports`. */\n\n\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare to `other`.\n   * @param {*} other The value to compare to `value`.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsReflexive = value === value,\n          othIsReflexive = other === other;\n\n      if (value > other || !valIsReflexive || typeof value == 'undefined' && othIsReflexive) {\n        return 1;\n      }\n\n      if (value < other || !othIsReflexive || typeof other == 'undefined' && valIsReflexive) {\n        return -1;\n      }\n    }\n\n    return 0;\n  }\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n\n\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n\n    var index = (fromIndex || 0) - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * The base implementation of `_.sortBy` and `_.sortByAll` which uses `comparer`\n   * to define the sort order of `array` and replaces criteria objects with their\n   * corresponding values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n\n\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n    array.sort(comparer);\n\n    while (length--) {\n      array[length] = array[length].value;\n    }\n\n    return array;\n  }\n  /**\n   * Converts `value` to a string if it is not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n\n\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n\n    return value == null ? '' : value + '';\n  }\n  /**\n   * Used by `_.max` and `_.min` as the default callback for string values.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the code unit of the first character of the string.\n   */\n\n\n  function charAtCallback(string) {\n    return string.charCodeAt(0);\n  }\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n\n\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n\n\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n\n\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || object.index - other.index;\n  }\n  /**\n   * Used by `_.sortByAll` to compare multiple properties of each element\n   * in a collection and stable sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n\n\n  function compareMultipleAscending(object, other) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\n      if (result) {\n        return result;\n      }\n    } // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  }\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n\n\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n\n\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n\n\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   * If `fromRight` is provided elements of `array` are iterated from right to left.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} [fromIndex] The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n\n\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromRight ? fromIndex || length : (fromIndex || 0) - 1;\n\n    while (fromRight ? index-- : ++index < length) {\n      var other = array[index];\n\n      if (other !== other) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n\n\n  function isObjectLike(value) {\n    return value && typeof value == 'object' || false;\n  }\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n\n\n  function isSpace(charCode) {\n    return charCode <= 160 && charCode >= 9 && charCode <= 13 || charCode == 32 || charCode == 160 || charCode == 5760 || charCode == 6158 || charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279);\n  }\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n\n\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n\n\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n\n\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n\n\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n\n\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'add': function(a, b) { return a + b; } });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'sub': function(a, b) { return a - b; } });\n   *\n   * _.isFunction(_.add);\n   * // => true\n   * _.isFunction(_.sub);\n   * // => false\n   *\n   * lodash.isFunction(lodash.add);\n   * // => false\n   * lodash.isFunction(lodash.sub);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n\n\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n    /** Native constructor references. */\n\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n    /** Used for native method references. */\n\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype;\n    /** Used to detect DOM support. */\n\n    var document = (document = context.window) && document.document;\n    /** Used to resolve the decompiled source of functions. */\n\n    var fnToString = Function.prototype.toString;\n    /** Used to the length of n-tuples for `_.unzip`. */\n\n    var getLength = baseProperty('length');\n    /** Used to check objects for own properties. */\n\n    var hasOwnProperty = objectProto.hasOwnProperty;\n    /** Used to generate unique IDs. */\n\n    var idCounter = 0;\n    /**\n     * Used to resolve the `toStringTag` of values.\n     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * for more details.\n     */\n\n    var objToString = objectProto.toString;\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n\n    var oldDash = context._;\n    /** Used to detect if a method is native. */\n\n    var reNative = RegExp('^' + escapeRegExp(objToString).replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n    /** Native method references. */\n\n    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        push = arrayProto.push,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = isNative(Set = context.Set) && Set,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n        unshift = arrayProto.unshift,\n        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n    /** Used to clone array buffers. */\n\n    var Float64Array = function () {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = isNative(func = context.Float64Array) && func,\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch (e) {}\n\n      return result;\n    }();\n    /* Native method references for those with the same name as other `lodash` methods. */\n\n\n    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsFinite = context.isFinite,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n    /** Used as references for `-Infinity` and `Infinity`. */\n\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n    /** Used as references for the maximum length and index of an array. */\n\n    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n    /**\n     * Used as the maximum length of an array-like value.\n     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * for more details.\n     */\n\n    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n    /** Used to store function metadata. */\n\n    var metaMap = WeakMap && new WeakMap();\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable intuitive chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * The wrapper functions that support shortcut fusion are:\n     * `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `first`,\n     * `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`, `slice`,\n     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `where`\n     *\n     * The chainable wrapper functions are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `compact`, `concat`, `constant`, `countBy`,\n     * `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n     * `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `flatten`,\n     * `flattenDeep`, `flow`, `flowRight`, `forEach`, `forEachRight`, `forIn`,\n     * `forInRight`, `forOwn`, `forOwnRight`, `functions`, `groupBy`, `indexBy`,\n     * `initial`, `intersection`, `invert`, `invoke`, `keys`, `keysIn`, `map`,\n     * `mapValues`, `matches`, `memoize`, `merge`, `mixin`, `negate`, `noop`,\n     * `omit`, `once`, `pairs`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pluck`, `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`,\n     * `rearg`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `sortByAll`, `splice`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`,\n     * `where`, `without`, `wrap`, `xor`, `zip`, and `zipObject`\n     *\n     * The wrapper functions that are **not** chainable by default are:\n     * `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n     * `identity`, `includes`, `indexOf`, `isArguments`, `isArray`, `isBoolean`,\n     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`,\n     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`,\n     * `noConflict`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`,\n     * `random`, `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`,\n     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`,\n     * `startCase`, `startsWith`, `template`, `trim`, `trimLeft`, `trimRight`,\n     * `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper function `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, n) { return sum + n; });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) { return n * n; });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return new LodashWrapper(value.__wrapped__, value.__chain__, arrayCopy(value.__actions__));\n        }\n      }\n\n      return new LodashWrapper(value);\n    }\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n\n\n    function LodashWrapper(value, chainAll, actions) {\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n\n\n    var support = lodash.support = {};\n\n    (function (x) {\n      /**\n       * Detect if functions can be decompiled by `Function#toString`\n       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n       * the PlayStation 3; forced `false` for Windows 8 apps).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n      /**\n       * Detect if `Function#name` is supported (all but IE).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n\n      support.funcNames = typeof Function.name == 'string';\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch (e) {\n        support.dom = false;\n      }\n      /**\n       * Detect if `arguments` object indexes are non-enumerable.\n       *\n       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n       * checks for indexes that exceed their function's formal parameters with\n       * associated values of `0`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n\n\n      try {\n        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n      } catch (e) {\n        support.nonEnumArgs = true;\n      }\n    })(0, 0);\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n\n\n    lodash.templateSettings = {\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n\n    function LazyWrapper(value) {\n      this.actions = null;\n      this.dir = 1;\n      this.dropCount = 0;\n      this.filtered = false;\n      this.iteratees = null;\n      this.takeCount = POSITIVE_INFINITY;\n      this.views = null;\n      this.wrapped = value;\n    }\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n\n\n    function lazyClone() {\n      var actions = this.actions,\n          iteratees = this.iteratees,\n          views = this.views,\n          result = new LazyWrapper(this.wrapped);\n      result.actions = actions ? arrayCopy(actions) : null;\n      result.dir = this.dir;\n      result.dropCount = this.dropCount;\n      result.filtered = this.filtered;\n      result.iteratees = iteratees ? arrayCopy(iteratees) : null;\n      result.takeCount = this.takeCount;\n      result.views = views ? arrayCopy(views) : null;\n      return result;\n    }\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n\n\n    function lazyReverse() {\n      if (this.filtered) {\n        var result = new LazyWrapper(this);\n        result.dir = -1;\n        result.filtered = true;\n      } else {\n        result = this.clone();\n        result.dir *= -1;\n      }\n\n      return result;\n    }\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n\n\n    function lazyValue() {\n      var array = this.wrapped.value();\n\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.actions);\n      }\n\n      var dir = this.dir,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.views),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          dropCount = this.dropCount,\n          takeCount = nativeMin(length, this.takeCount - dropCount),\n          index = isRight ? end : start - 1,\n          iteratees = this.iteratees,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer: while (length-- && resIndex < takeCount) {\n        index += dir;\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              computed = iteratee(value, index, array),\n              type = data.type;\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n\n        if (dropCount) {\n          dropCount--;\n        } else {\n          result[resIndex++] = value;\n        }\n      }\n\n      return result;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n\n\n    function MapCache() {\n      this.__data__ = {};\n    }\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n\n\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n\n\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n    /**\n     * Adds `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n\n\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n\n      return this;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n\n\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n      this.data = {\n        'hash': nativeCreate(null),\n        'set': new Set()\n      };\n\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n\n\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = typeof value == 'string' || isObject(value) ? data.set.has(value) : data.hash[value];\n      return result ? 0 : -1;\n    }\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n\n\n    function cachePush(value) {\n      var data = this.data;\n\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n      array || (array = Array(length));\n\n      while (++index < length) {\n        array[index] = source[index];\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n\n\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n\n\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n\n\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.max` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     */\n\n\n    function arrayMax(array) {\n      var index = -1,\n          length = array.length,\n          result = NEGATIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value > result) {\n          result = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.min` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     */\n\n\n    function arrayMin(array) {\n      var index = -1,\n          length = array.length,\n          result = POSITIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value < result) {\n          result = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n\n      return accumulator;\n    }\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n\n      return accumulator;\n    }\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n\n\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n\n\n    function assignDefaults(objectValue, sourceValue) {\n      return typeof objectValue == 'undefined' ? sourceValue : objectValue;\n    }\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This method is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n\n\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return typeof objectValue == 'undefined' || !hasOwnProperty.call(object, key) ? sourceValue : objectValue;\n    }\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @returns {Object} Returns the destination object.\n     */\n\n\n    function baseAssign(object, source, customizer) {\n      var props = keys(source);\n\n      if (!customizer) {\n        return baseCopy(source, object, props);\n      }\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? result !== value : value === value) || typeof value == 'undefined' && !(key in object)) {\n          object[key] = result;\n        }\n      }\n\n      return object;\n    }\n    /**\n     * The base implementation of `_.at` without support for strings and individual\n     * key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} [props] The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n\n\n    function baseAt(collection, props) {\n      var index = -1,\n          length = collection.length,\n          isArr = isLength(length),\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while (++index < propsLength) {\n        var key = props[index];\n\n        if (isArr) {\n          key = parseFloat(key);\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = collection[key];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Copies the properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Array} props The property names to copy.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseCopy(source, object, props) {\n      if (!props) {\n        props = object;\n        object = {};\n      }\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n\n      return object;\n    }\n    /**\n     * The base implementation of `_.bindAll` without support for individual\n     * method name arguments.\n     *\n     * @private\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {string[]} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseBindAll(object, methodNames) {\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n\n      return object;\n    }\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n\n\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n\n      if (type == 'function') {\n        return typeof thisArg != 'undefined' && isBindable(func) ? bindCallback(func, thisArg, argCount) : func;\n      }\n\n      if (func == null) {\n        return identity;\n      } // Handle \"_.property\" and \"_.matches\" style callback shorthands.\n\n\n      return type == 'object' ? baseMatches(func) : baseProperty(func + '');\n    }\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n\n\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n\n      if (typeof result != 'undefined') {\n        return result;\n      }\n\n      if (!isObject(value)) {\n        return value;\n      }\n\n      var isArr = isArray(value);\n\n      if (isArr) {\n        result = initCloneArray(value);\n\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || isFunc && !object) {\n          result = initCloneObject(isFunc ? {} : value);\n\n          if (!isDeep) {\n            return baseCopy(value, result, keys(value));\n          }\n        } else {\n          return cloneableTags[tag] ? initCloneByTag(value, tag, isDeep) : object ? value : {};\n        }\n      } // Check for circular references and return corresponding clone.\n\n\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      var length = stackA.length;\n\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      } // Add the source value to the stack of traversed objects and associate it with its clone.\n\n\n      stackA.push(value);\n      stackB.push(result); // Recursively populate clone (susceptible to call stack limits).\n\n      (isArr ? arrayEach : baseForOwn)(value, function (subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    var baseCreate = function () {\n      function Object() {}\n\n      return function (prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object();\n          Object.prototype = null;\n        }\n\n        return result || context.Object();\n      };\n    }();\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The `arguments` object to slice and provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n\n\n    function baseDelay(func, wait, args, fromIndex) {\n      if (!isFunction(func)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return setTimeout(function () {\n        func.apply(undefined, baseSlice(args, fromIndex));\n      }, wait);\n    }\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n\n\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = isCommon && values.length >= 200 && createCache(values),\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n\n      outer: while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n\n          result.push(value);\n        } else if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n\n\n    function baseEach(collection, iteratee) {\n      var length = collection ? collection.length : 0;\n\n      if (!isLength(length)) {\n        return baseForOwn(collection, iteratee);\n      }\n\n      var index = -1,\n          iterable = toObject(collection);\n\n      while (++index < length) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n\n      return collection;\n    }\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n\n\n    function baseEachRight(collection, iteratee) {\n      var length = collection ? collection.length : 0;\n\n      if (!isLength(length)) {\n        return baseForOwnRight(collection, iteratee);\n      }\n\n      var iterable = toObject(collection);\n\n      while (length--) {\n        if (iteratee(iterable[length], length, iterable) === false) {\n          break;\n        }\n      }\n\n      return collection;\n    }\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n\n\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function (value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n\n\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function (value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n\n\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function (value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns the new flattened array.\n     */\n\n\n    function baseFlatten(array, isDeep, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n\n          var valIndex = -1,\n              valLength = value.length;\n          result.length += valLength;\n\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iterator functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseFor(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = toObject(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n\n      return object;\n    }\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseForRight(object, iteratee, keysFunc) {\n      var iterable = toObject(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[length];\n\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n\n      return object;\n    }\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n\n\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.invoke` which requires additional arguments\n     * to be provided as an array of arguments rather than individually.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {Array} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     */\n\n\n    function baseInvoke(collection, methodName, args) {\n      var index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n      baseEach(collection, function (value) {\n        var func = isFunc ? methodName : value != null && value[methodName];\n        result[++index] = func ? func.apply(value, args) : undefined;\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n\n\n    function baseIsEqual(value, other, customizer, isWhere, stackA, stackB) {\n      // Exit early for identical values.\n      if (value === other) {\n        // Treat `+0` vs. `-0` as not equal.\n        return value !== 0 || 1 / value == 1 / other;\n      }\n\n      var valType = typeof value,\n          othType = typeof other; // Exit early for unlike primitive values.\n\n      if (valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object' || value == null || other == null) {\n        // Return `false` unless both values are `NaN`.\n        return value !== value && other !== other;\n      }\n\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isWhere, stackA, stackB);\n    }\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n\n      var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (valWrapped || othWrapped) {\n        return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isWhere, stackA, stackB);\n      }\n\n      if (!isSameTag) {\n        return false;\n      } // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n\n\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      var length = stackA.length;\n\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      } // Add `object` and `other` to the stack of traversed objects.\n\n\n      stackA.push(object);\n      stackB.push(other);\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isWhere, stackA, stackB);\n      stackA.pop();\n      stackB.pop();\n      return result;\n    }\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Object} source The object to inspect.\n     * @param {Array} props The source property names to match.\n     * @param {Array} values The source values to match.\n     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n\n\n    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n      var length = props.length;\n\n      if (object == null) {\n        return !length;\n      }\n\n      var index = -1,\n          noCustomizer = !customizer;\n\n      while (++index < length) {\n        if (noCustomizer && strictCompareFlags[index] ? values[index] !== object[props[index]] : !hasOwnProperty.call(object, props[index])) {\n          return false;\n        }\n      }\n\n      index = -1;\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (noCustomizer && strictCompareFlags[index]) {\n          var result = hasOwnProperty.call(object, key);\n        } else {\n          var objValue = object[key],\n              srcValue = values[index];\n          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\n          if (typeof result == 'undefined') {\n            result = baseIsEqual(srcValue, objValue, customizer, true);\n          }\n        }\n\n        if (!result) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n\n\n    function baseMap(collection, iteratee) {\n      var result = [];\n      baseEach(collection, function (value, key, collection) {\n        result.push(iteratee(value, key, collection));\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.matches` which supports specifying whether\n     * `source` should be cloned.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function baseMatches(source) {\n      var props = keys(source),\n          length = props.length;\n\n      if (length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return function (object) {\n            return object != null && value === object[key] && hasOwnProperty.call(object, key);\n          };\n        }\n      }\n\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = source[props[length]];\n        values[length] = value;\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n\n      return function (object) {\n        return baseIsMatch(object, props, values, strictCompareFlags);\n      };\n    }\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns the destination object.\n     */\n\n\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n      (isSrcArr ? arrayEach : baseForOwn)(source, function (srcValue, key, source) {\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n\n        var value = object[key],\n            result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n            isCommon = typeof result == 'undefined';\n\n        if (isCommon) {\n          result = srcValue;\n        }\n\n        if ((isSrcArr || typeof result != 'undefined') && (isCommon || (result === result ? result !== value : value === value))) {\n          object[key] = result;\n        }\n      });\n      return object;\n    }\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = typeof result == 'undefined';\n\n      if (isCommon) {\n        result = srcValue;\n\n        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value) ? value : value ? arrayCopy(value) : [];\n        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value) ? toPlainObject(value) : isPlainObject(value) ? value : {};\n        } else {\n          isCommon = false;\n        }\n      } // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n\n\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? result !== value : value === value) {\n        object[key] = result;\n      }\n    }\n    /**\n     * The base implementation of `_.property` which does not coerce `key` to a string.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function baseProperty(key) {\n      return function (object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     */\n\n\n    function basePullAt(array, indexes) {\n      var length = indexes.length,\n          result = baseAt(array, indexes);\n      indexes.sort(baseCompareAscending);\n\n      while (length--) {\n        var index = parseFloat(indexes[length]);\n\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n\n\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands or `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function (value, index, collection) {\n        accumulator = initFromCollection ? (initFromCollection = false, value) : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n\n\n    var baseSetData = !metaMap ? identity : function (func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n      start = start == null ? 0 : +start || 0;\n\n      if (start < 0) {\n        start = -start > length ? 0 : length + start;\n      }\n\n      end = typeof end == 'undefined' || end > length ? length : +end || 0;\n\n      if (end < 0) {\n        end += length;\n      }\n\n      length = start > end ? 0 : end - start >>> 0;\n      start >>>= 0;\n      var result = Array(length);\n\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n\n\n    function baseSome(collection, predicate) {\n      var result;\n      baseEach(collection, function (value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n\n\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge && createCache(),\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n\n      outer: while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n\n          if (iteratee) {\n            seen.push(computed);\n          }\n\n          result.push(value);\n        } else if (indexOf(seen, computed) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n\n          result.push(value);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * returned by `keysFunc`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n\n\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved unwrapped value.\n     */\n\n\n    function baseWrapperValue(value, actions) {\n      var result = value;\n\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n\n      return result;\n    }\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest, instead\n     *  of the lowest, index at which a value should be inserted into `array`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n\n\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = low + high >>> 1,\n              computed = array[mid];\n\n          if (retHighest ? computed <= value : computed < value) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n\n        return high;\n      }\n\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest, instead\n     *  of the lowest, index at which a value should be inserted into `array`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n\n\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsUndef = typeof value == 'undefined';\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || typeof computed != 'undefined');\n        } else {\n          setLow = retHighest ? computed <= value : computed < value;\n        }\n\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n\n\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n\n      if (typeof thisArg == 'undefined') {\n        return func;\n      }\n\n      switch (argCount) {\n        case 1:\n          return function (value) {\n            return func.call(thisArg, value);\n          };\n\n        case 3:\n          return function (value, index, collection) {\n            return func.call(thisArg, value, index, collection);\n          };\n\n        case 4:\n          return function (accumulator, value, index, collection) {\n            return func.call(thisArg, accumulator, value, index, collection);\n          };\n\n        case 5:\n          return function (value, other, key, object, source) {\n            return func.call(thisArg, value, other, key, object, source);\n          };\n      }\n\n      return function () {\n        return func.apply(thisArg, arguments);\n      };\n    }\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n\n\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function (buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n\n\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n\n      return result;\n    }\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n\n\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n\n      var pad = argsIndex;\n\n      while (++rightIndex < rightLength) {\n        result[pad + rightIndex] = partials[rightIndex];\n      }\n\n      while (++holdersIndex < holdersLength) {\n        result[pad + holders[holdersIndex]] = args[argsIndex++];\n      }\n\n      return result;\n    }\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee. The `setter` sets the keys and values of the accumulator\n     * object. If `initializer` is provided initializes the accumulator object.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n\n\n    function createAggregator(setter, initializer) {\n      return function (collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function (value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n\n\n    function createAssigner(assigner) {\n      return function () {\n        var length = arguments.length,\n            object = arguments[0];\n\n        if (length < 2 || object == null) {\n          return object;\n        }\n\n        if (length > 3 && isIterateeCall(arguments[1], arguments[2], arguments[3])) {\n          length = 2;\n        } // Juggle arguments.\n\n\n        if (length > 3 && typeof arguments[length - 2] == 'function') {\n          var customizer = bindCallback(arguments[--length - 1], arguments[length--], 5);\n        } else if (length > 2 && typeof arguments[length - 1] == 'function') {\n          customizer = arguments[--length];\n        }\n\n        var index = 0;\n\n        while (++index < length) {\n          var source = arguments[index];\n\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n\n        return object;\n      };\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n\n\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        return (this instanceof wrapper ? Ctor : func).apply(thisArg, arguments);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n\n\n    var createCache = !(nativeCreate && Set) ? constant(null) : function (values) {\n      return new SetCache(values);\n    };\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n\n    function createCompounder(callback) {\n      return function (string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createCtorWrapper(Ctor) {\n      return function () {\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, arguments); // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n    /**\n     * Creates a function that gets the extremum value of a collection.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to get the extremum value from an array.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n     *  extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n\n\n    function createExtremum(arrayFunc, isMin) {\n      return function (collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n\n        var func = getCallback(),\n            noIteratee = iteratee == null;\n\n        if (!(func === baseCallback && noIteratee)) {\n          noIteratee = false;\n          iteratee = func(iteratee, thisArg, 3);\n        }\n\n        if (noIteratee) {\n          var isArr = isArray(collection);\n\n          if (!isArr && isString(collection)) {\n            iteratee = charAtCallback;\n          } else {\n            return arrayFunc(isArr ? collection : toIterable(collection));\n          }\n        }\n\n        return extremumBy(collection, iteratee, isMin);\n      };\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n      var Ctor = !isBindKey && createCtorWrapper(func),\n          key = func;\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n          length -= argsHolders.length;\n\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n            bitmask |= isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG;\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n\n            var result = createHybridWrapper(func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity);\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n\n        var thisBinding = isBind ? thisArg : this;\n\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n\n        return (this instanceof wrapper ? Ctor || createCtorWrapper(func) : func).apply(thisBinding, args);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates the pad required for `string` based on the given padding length.\n     * The `chars` string may be truncated if the number of padding characters\n     * exceeds the padding length.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n\n\n    function createPad(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : chars + '';\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n\n\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n\n        return (this instanceof wrapper ? Ctor : func).apply(isBind ? thisArg : this, args);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var length = partials ? partials.length : 0;\n\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n        partials = holders = null;\n      }\n\n      var data = !isBindKey && getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data && data !== true) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n\n      newData[9] = arity == null ? isBindKey ? 0 : func.length : nativeMax(arity - length, 0) || 0;\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(null, newData);\n      } else {\n        result = createHybridWrapper.apply(null, newData);\n      }\n\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n\n\n    function equalArrays(array, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length,\n          result = true;\n\n      if (arrLength != othLength && !(isWhere && othLength > arrLength)) {\n        return false;\n      } // Deep compare the contents, ignoring non-numeric properties.\n\n\n      while (result && ++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n        result = undefined;\n\n        if (customizer) {\n          result = isWhere ? customizer(othValue, arrValue, index) : customizer(arrValue, othValue, index);\n        }\n\n        if (typeof result == 'undefined') {\n          // Recursively compare arrays (susceptible to call stack limits).\n          if (isWhere) {\n            var othIndex = othLength;\n\n            while (othIndex--) {\n              othValue = other[othIndex];\n              result = arrValue && arrValue === othValue || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n\n              if (result) {\n                break;\n              }\n            }\n          } else {\n            result = arrValue && arrValue === othValue || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n          }\n        }\n      }\n\n      return !!result;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return object != +object ? other != +other // But, treat `-0` vs. `+0` as not equal.\n          : object == 0 ? 1 / object == 1 / other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == other + '';\n      }\n\n      return false;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalObjects(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isWhere) {\n        return false;\n      }\n\n      var hasCtor,\n          index = -1;\n\n      while (++index < objLength) {\n        var key = objProps[index],\n            result = hasOwnProperty.call(other, key);\n\n        if (result) {\n          var objValue = object[key],\n              othValue = other[key];\n          result = undefined;\n\n          if (customizer) {\n            result = isWhere ? customizer(othValue, objValue, key) : customizer(objValue, othValue, key);\n          }\n\n          if (typeof result == 'undefined') {\n            // Recursively compare objects (susceptible to call stack limits).\n            result = objValue && objValue === othValue || equalFunc(objValue, othValue, customizer, isWhere, stackA, stackB);\n          }\n        }\n\n        if (!result) {\n          return false;\n        }\n\n        hasCtor || (hasCtor = key == 'constructor');\n      }\n\n      if (!hasCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments; (value, index, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n     *  maximum, extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n\n\n    function extremumBy(collection, iteratee, isMin) {\n      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n          computed = exValue,\n          result = computed;\n      baseEach(collection, function (value, index, collection) {\n        var current = iteratee(value, index, collection);\n\n        if ((isMin ? current < computed : current > computed) || current === exValue && current === result) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n\n\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n\n\n    var getData = !metaMap ? noop : function (func) {\n      return metaMap.get(func);\n    };\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n\n\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':\n            start += size;\n            break;\n\n          case 'dropRight':\n            end -= size;\n            break;\n\n          case 'take':\n            end = nativeMin(end, start + size);\n            break;\n\n          case 'takeRight':\n            start = nativeMax(start, end - size);\n            break;\n        }\n      }\n\n      return {\n        'start': start,\n        'end': end\n      };\n    }\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n\n\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length); // Add array properties assigned by `RegExp#exec`.\n\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n\n      return result;\n    }\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n\n\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n\n      return new Ctor();\n    }\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n\n\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag:\n        case float64Tag:\n        case int8Tag:\n        case int16Tag:\n        case int32Tag:\n        case uint8Tag:\n        case uint8ClampedTag:\n        case uint16Tag:\n        case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n\n      return result;\n    }\n    /**\n     * Checks if `func` is eligible for `this` binding.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is eligible, else `false`.\n     */\n\n\n    function isBindable(func) {\n      var support = lodash.support,\n          result = !(support.funcNames ? func.name : support.funcDecomp);\n\n      if (!result) {\n        var source = fnToString.call(func);\n\n        if (!support.funcNames) {\n          result = !reFuncName.test(source);\n        }\n\n        if (!result) {\n          // Check if `func` references the `this` keyword and store the result.\n          result = reThis.test(source) || isNative(func);\n          baseSetData(func, result);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n\n\n    function isIndex(value, length) {\n      value = +value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n\n\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n\n      var type = typeof index;\n\n      if (type == 'number') {\n        var length = object.length,\n            prereq = isLength(length) && isIndex(index, length);\n      } else {\n        prereq = type == 'string' && index in object;\n      }\n\n      return prereq && object[index] === value;\n    }\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on ES `ToLength`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n     * for more details.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n\n\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n\n\n    function isStrictComparable(value) {\n      return value === value && (value === 0 ? 1 / value > 0 : !isObject(value));\n    }\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n\n\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask;\n      var arityFlags = ARY_FLAG | REARG_FLAG,\n          bindFlags = BIND_FLAG | BIND_KEY_FLAG,\n          comboFlags = arityFlags | bindFlags | CURRY_BOUND_FLAG | CURRY_RIGHT_FLAG;\n      var isAry = bitmask & ARY_FLAG && !(srcBitmask & ARY_FLAG),\n          isRearg = bitmask & REARG_FLAG && !(srcBitmask & REARG_FLAG),\n          argPos = (isRearg ? data : source)[7],\n          ary = (isAry ? data : source)[8];\n      var isCommon = !(bitmask >= REARG_FLAG && srcBitmask > bindFlags) && !(bitmask > bindFlags && srcBitmask >= REARG_FLAG);\n      var isCombo = newBitmask >= arityFlags && newBitmask <= comboFlags && (bitmask < REARG_FLAG || (isRearg || isAry) && argPos.length <= ary); // Exit early if metadata can't be merged.\n\n      if (!(isCommon || isCombo)) {\n        return data;\n      } // Use source `thisArg` if available.\n\n\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2]; // Set when currying a bound function.\n\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      } // Compose partial arguments.\n\n\n      var value = source[3];\n\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      } // Compose partial right arguments.\n\n\n      value = source[5];\n\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      } // Use source `argPos` if available.\n\n\n      value = source[7];\n\n      if (value) {\n        data[7] = arrayCopy(value);\n      } // Use source `ary` if it's smaller.\n\n\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      } // Use source `arity` if one is not provided.\n\n\n      if (data[9] == null) {\n        data[9] = source[9];\n      } // Use source `func` and merge bitmasks.\n\n\n      data[0] = source[0];\n      data[1] = newBitmask;\n      return data;\n    }\n    /**\n     * A specialized version of `_.pick` that picks `object` properties specified\n     * by the `props` array.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    function pickByArray(object, props) {\n      object = toObject(object);\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.pick` that picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function (value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n\n      return array;\n    }\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n\n\n    var setData = function () {\n      var count = 0,\n          lastCalled = 0;\n      return function (key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n        lastCalled = stamp;\n\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n\n        return baseSetData(key, value);\n      };\n    }();\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n\n\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support; // Exit early for non `Object` objects.\n\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) || !hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor))) {\n        return false;\n      } // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n\n\n      var result; // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n\n      baseForIn(value, function (subValue, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     */\n\n\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length,\n          support = lodash.support;\n      var allowIndexes = length && isLength(length) && (isArray(object) || support.nonEnumArgs && isArguments(object));\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n\n        if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Converts `value` to an array-like object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n\n\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n\n      if (!isLength(value.length)) {\n        return values(value);\n      }\n\n      return isObject(value) ? value : Object(value);\n    }\n    /**\n     * Converts `value` to an object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n\n\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {numer} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n\n\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, index += size);\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n\n\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array excluding all values of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [5, 2, 10]);\n     * // => [1, 3]\n     */\n\n\n    function difference() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var value = arguments[index];\n\n        if (isArray(value) || isArguments(value)) {\n          break;\n        }\n      }\n\n      return baseDifference(value, baseFlatten(arguments, false, true, ++index));\n    }\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n\n\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n\n\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per element.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) { return n > 1; });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'status': 'busy', 'active': false },\n     *   { 'user': 'fred',    'status': 'busy', 'active': true },\n     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'status': 'away' }), 'user');\n     * // => ['barney', 'fred']\n     */\n\n\n    function dropRightWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (length-- && predicate(array[length], length, array)) {}\n\n      return baseSlice(array, 0, length + 1);\n    }\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per element.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) { return n < 3; });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'status': 'busy', 'active': true },\n     *   { 'user': 'fred',    'status': 'busy', 'active': false },\n     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.dropWhile(users, { 'status': 'busy' }), 'user');\n     * // => ['pebbles']\n     */\n\n\n    function dropWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      var index = -1;\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (++index < length && predicate(array[index], index, array)) {}\n\n      return baseSlice(array, index);\n    }\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for, instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.findIndex(users, function(chr) { return chr.age < 40; });\n     * // => 0\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.findIndex(users, { 'age': 1 });\n     * // => 2\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 1\n     */\n\n\n    function findIndex(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return index;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) { return chr.age < 40; });\n     * // => 2\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.findLastIndex(users, { 'age': 40 });\n     * // => 1\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n\n\n    function findLastIndex(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (length--) {\n        if (predicate(array[length], length, array)) {\n          return length;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n\n\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, 4];\n     */\n\n\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     */\n\n\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n     * it is used as the offset from the end of `array`. If `array` is sorted\n     * providing `true` for `fromIndex` performs a faster binary search.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * // performing a binary search\n     * _.indexOf([4, 4, 5, 5, 6, 6], 5, true);\n     * // => 2\n     */\n\n\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return -1;\n      }\n\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex || 0;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n        return (value === value ? value === other : other !== other) ? index : -1;\n      }\n\n      return baseIndexOf(array, value, fromIndex);\n    }\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n\n\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n    /**\n     * Creates an array of unique values in all provided arrays using `SameValueZero`\n     * for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n\n\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = [],\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf;\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(isCommon && value.length >= 120 && createCache(argsIndex && value));\n        }\n      }\n\n      argsLength = args.length;\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [],\n          seen = caches[0];\n\n      outer: while (++index < length) {\n        value = array[index];\n\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value)) < 0) {\n          argsIndex = argsLength;\n\n          while (--argsIndex) {\n            var cache = caches[argsIndex];\n\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n\n          if (seen) {\n            seen.push(value);\n          }\n\n          result.push(value);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n\n\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([4, 4, 5, 5, 6, 6], 5, true);\n     * // => 3\n     */\n\n\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return -1;\n      }\n\n      var index = length;\n\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        return (value === value ? value === other : other !== other) ? index : -1;\n      }\n\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * Removes all provided values from `array` using `SameValueZero` for equality\n     * comparisons.\n     *\n     * **Notes:**\n     *  - Unlike `_.without`, this method mutates `array`.\n     *  - `SameValueZero` comparisons are like strict equality comparisons, e.g. `===`,\n     *    except that `NaN` matches `NaN`. See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     *    for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n\n\n    function pull() {\n      var array = arguments[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = arguments.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = arguments[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n\n      return array;\n    }\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n\n\n    function pullAt(array) {\n      return basePullAt(array || [], baseFlatten(arguments, false, false, 1));\n    }\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) { return n % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n\n\n    function remove(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (predicate(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n\n\n    function rest(array) {\n      return drop(array, 1);\n    }\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This function is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n\n\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n\n      return baseSlice(array, start, end);\n    }\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5, 6, 6], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n\n\n    function sortedIndex(array, value, iteratee, thisArg) {\n      var func = getCallback(iteratee);\n      return func === baseCallback && iteratee == null ? binaryIndex(array, value) : binaryIndexBy(array, value, func(iteratee, thisArg, 1));\n    }\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5, 6, 6], 5);\n     * // => 4\n     */\n\n\n    function sortedLastIndex(array, value, iteratee, thisArg) {\n      var func = getCallback(iteratee);\n      return func === baseCallback && iteratee == null ? binaryIndex(array, value, true) : binaryIndexBy(array, value, func(iteratee, thisArg, 1), true);\n    }\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n\n\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n\n\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per element.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) { return n > 1; });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'status': 'busy', 'active': false },\n     *   { 'user': 'fred',    'status': 'busy', 'active': true },\n     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'status': 'away' }), 'user');\n     * // => ['pebbles']\n     */\n\n\n    function takeRightWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (length-- && predicate(array[length], length, array)) {}\n\n      return baseSlice(array, length + 1);\n    }\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per element.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) { return n < 3; });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'status': 'busy', 'active': true },\n     *   { 'user': 'fred',    'status': 'busy', 'active': false },\n     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => ['barney']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.takeWhile(users, { 'status': 'busy' }), 'user');\n     * // => ['barney', 'fred']\n     */\n\n\n    function takeWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      var index = -1;\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (++index < length && predicate(array[index], index, array)) {}\n\n      return baseSlice(array, 0, index);\n    }\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n\n\n    function union() {\n      return baseUniq(baseFlatten(arguments, false, true));\n    }\n    /**\n     * Creates a duplicate-value-free version of an array using `SameValueZero`\n     * for equality comparisons. Providing `true` for `isSorted` performs a faster\n     * search algorithm for sorted arrays. If an iteratee function is provided it\n     * is invoked for each value in the array to generate the criterion by which\n     * uniqueness is computed. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     *  If a property name or object is provided it is used to create a \"_.property\"\n     *  or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1]);\n     * // => [1, 2]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) { return this.floor(n); }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n\n\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      } // Juggle arguments.\n\n\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n\n      var func = getCallback();\n\n      if (!(func === baseCallback && iteratee == null)) {\n        iteratee = func(iteratee, thisArg, 3);\n      }\n\n      return isSorted && getIndexOf() == baseIndexOf ? sortedUniq(array, iteratee) : baseUniq(array, iteratee);\n    }\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-`_.zip`\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n\n\n    function unzip(array) {\n      var index = -1,\n          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array excluding all provided values using `SameValueZero` for\n     * equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n\n\n    function without(array) {\n      return baseDifference(array, baseSlice(arguments, 1));\n    }\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Symmetric_difference) for\n     * more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n\n\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n\n        if (isArray(array) || isArguments(array)) {\n          var result = result ? baseDifference(result, array).concat(baseDifference(array, result)) : array;\n        }\n      }\n\n      return result ? baseUniq(result) : [];\n    }\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n\n\n    function zip() {\n      var length = arguments.length,\n          array = Array(length);\n\n      while (length--) {\n        array[length] = arguments[length];\n      }\n\n      return unzip(array);\n    }\n    /**\n     * Creates an object composed from arrays of property names and values. Provide\n     * either a single two dimensional array, e.g. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of property names and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n\n\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n\n      return result;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` object.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) { return chr.user + ' is ' + chr.age; })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n\n\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n\n\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .last()\n     *  .thru(function(value) { return [value]; })\n     *  .value();\n     * // => [3]\n     */\n\n\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {*} Returns the `lodash` object.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n\n\n    function wrapperChain() {\n      return chain(this);\n    }\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` object.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n\n\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n\n        return new LodashWrapper(value.reverse());\n      }\n\n      return this.thru(function (value) {\n        return value.reverse();\n      });\n    }\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n\n\n    function wrapperToString() {\n      return this.value() + '';\n    }\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n\n\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n\n\n    function at(collection) {\n      var length = collection ? collection.length : 0;\n\n      if (isLength(length)) {\n        collection = toIterable(collection);\n      }\n\n      return baseAt(collection, baseFlatten(arguments, false, false, 1));\n    }\n    /**\n     * Checks if `value` is in `collection` using `SameValueZero` for equality\n     * comparisons. If `fromIndex` is negative, it is used as the offset from\n     * the end of `collection`.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n\n\n    function includes(collection, target, fromIndex) {\n      var length = collection ? collection.length : 0;\n\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n\n      if (!length) {\n        return false;\n      }\n\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex || 0;\n      } else {\n        fromIndex = 0;\n      }\n\n      return typeof collection == 'string' || !isArray(collection) && isString(collection) ? fromIndex < length && collection.indexOf(target, fromIndex) > -1 : getIndexOf(collection, target, fromIndex) > -1;\n    }\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) { return Math.floor(n); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) { return this.floor(n); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n\n\n    var countBy = createAggregator(function (result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : result[key] = 1;\n    });\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.every(users, 'age');\n     * // => true\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.every(users, { 'age': 36 });\n     * // => false\n     */\n\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n\n      return func(collection, predicate);\n    }\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4], function(n) { return n % 2 == 0; });\n     * // => [2, 4]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['fred']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36 }), 'user');\n     * // => ['barney']\n     */\n\n\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) { return chr.age < 40; }), 'user');\n     * // => 'barney'\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.result(_.find(users, { 'age': 1 }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'fred'\n     */\n\n\n    function find(collection, predicate, thisArg) {\n      if (isArray(collection)) {\n        var index = findIndex(collection, predicate, thisArg);\n        return index > -1 ? collection[index] : undefined;\n      }\n\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(collection, predicate, baseEach);\n    }\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) { return n % 2 == 1; });\n     * // => 3\n     */\n\n\n    function findLast(collection, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(collection, predicate, baseEachRight);\n    }\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'status': 'busy' },\n     *   { 'user': 'fred',   'age': 40, 'status': 'busy' }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'status': 'busy' }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40 }), 'user');\n     * // => 'fred'\n     */\n\n\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Iterator functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(n) { console.log(n); }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(n, key) { console.log(n, key); });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n\n\n    function forEach(collection, iteratee, thisArg) {\n      return typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection) ? arrayEach(collection, iteratee) : baseEach(collection, bindCallback(iteratee, thisArg, 3));\n    }\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(n) { console.log(n); }).join(',');\n     * // => logs each value from right to left and returns the array\n     */\n\n\n    function forEachRight(collection, iteratee, thisArg) {\n      return typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection) ? arrayEachRight(collection, iteratee) : baseEachRight(collection, bindCallback(iteratee, thisArg, 3));\n    }\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) { return Math.floor(n); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) { return this.floor(n); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n\n\n    var groupBy = createAggregator(function (result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) { return String.fromCharCode(object.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) { return this.fromCharCode(object.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n\n    var indexBy = createAggregator(function (result, value, key) {\n      result[key] = value;\n    });\n    /**\n     * Invokes the method named by `methodName` on each element in `collection`,\n     * returning an array of the results of each invoked method. Any additional\n     * arguments are provided to each invoked method. If `methodName` is a function\n     * it is invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n\n    function invoke(collection, methodName) {\n      return baseInvoke(collection, methodName, baseSlice(arguments, 2));\n    }\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * _.map([1, 2, 3], function(n) { return n * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(n) { return n * 3; });\n     * // => [3, 6, 9] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n\n\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     *  If a property name or object is provided it is used to create a \"_.property\"\n     *  or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) { return chr.age; });\n     * // => { 'user': 'fred', 'age': 40 };\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 };\n     */\n\n\n    var max = createExtremum(arrayMax);\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     *  If a property name or object is provided it is used to create a \"_.property\"\n     *  or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) { return chr.age; });\n     * // => { 'user': 'barney', 'age': 36 };\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 };\n     */\n\n    var min = createExtremum(arrayMin, true);\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) { return n % 2; });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) { return this.floor(n) % 2; }, Math);\n     * // => [[1, 3], [2]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.map(_.partition(users, { 'age': 1 }), function(array) { return _.pluck(array, 'user'); });\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.map(_.partition(users, 'active'), function(array) { return _.pluck(array, 'user'); });\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n\n    var partition = createAggregator(function (result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function () {\n      return [[], []];\n    });\n    /**\n     * Gets the value of `key` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} key The key of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n\n    function pluck(collection, key) {\n      return map(collection, baseProperty(key + ''));\n    }\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg`and invoked with four arguments;\n     * (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, n) { return sum + n; });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 } (iteration order is not guaranteed)\n     */\n\n\n    function reduce(collection, iteratee, accumulator, thisArg) {\n      var func = isArray(collection) ? arrayReduce : baseReduce;\n      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEach);\n    }\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     * _.reduceRight(array, function(flattened, other) { return flattened.concat(other); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n\n\n    function reduceRight(collection, iteratee, accumulator, thisArg) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce;\n      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEachRight);\n    }\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4], function(n) { return n % 2 == 0; });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.reject(users, { 'age': 36 }), 'user');\n     * // => ['fred']\n     */\n\n\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function (value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n\n\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n\n      var result = shuffle(collection);\n      result.length = nativeMin(n < 0 ? 0 : +n || 0, result.length);\n      return result;\n    }\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See [Wikipedia](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n\n\n    function shuffle(collection) {\n      collection = toIterable(collection);\n      var index = -1,\n          length = collection.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var rand = baseRandom(0, index);\n\n        if (index != rand) {\n          result[index] = result[rand];\n        }\n\n        result[rand] = collection[index];\n      }\n\n      return result;\n    }\n    /**\n     * Gets the size of `collection` by returning `collection.length` for\n     * array-like values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n\n\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.some(users, { 'age': 1 });\n     * // => false\n     */\n\n\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n\n      return func(collection, predicate);\n    }\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity] The function\n     *  invoked per iteration. If a property name or an object is provided it is\n     *  used to create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) { return Math.sin(n); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) { return this.sin(n); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n\n\n    function sortBy(collection, iteratee, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n\n      iteratee = getCallback(iteratee, thisArg, 3);\n      baseEach(collection, function (value, key, collection) {\n        result[++index] = {\n          'criteria': iteratee(value, key, collection),\n          'index': index,\n          'value': value\n        };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n    /**\n     * This method is like `_.sortBy` except that it sorts by property names\n     * instead of an iteratee function.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(string|string[])} props The property names to sort by,\n     *  specified as individual property names or arrays of property names.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 26 },\n     *   { 'user': 'fred',   'age': 30 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n\n\n    function sortByAll(collection) {\n      var args = arguments;\n\n      if (args.length > 3 && isIterateeCall(args[1], args[2], args[3])) {\n        args = [collection, args[1]];\n      }\n\n      var index = -1,\n          length = collection ? collection.length : 0,\n          props = baseFlatten(args, false, false, 1),\n          result = isLength(length) ? Array(length) : [];\n      baseEach(collection, function (value, key, collection) {\n        var length = props.length,\n            criteria = Array(length);\n\n        while (length--) {\n          criteria[length] = value == null ? undefined : value[props[length]];\n        }\n\n        result[++index] = {\n          'criteria': criteria,\n          'index': index,\n          'value': value\n        };\n      });\n      return baseSortBy(result, compareMultipleAscending);\n    }\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'status': 'busy', 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'status': 'busy', 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36 }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     *\n     * _.pluck(_.where(users, { 'status': 'busy' }), 'user');\n     * // => ['barney', 'fred']\n     */\n\n\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) { console.log(_.now() - stamp); }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n\n\n    var now = nativeNow || function () {\n      return new Date().getTime();\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n\n\n    function after(n, func) {\n      if (!isFunction(func)) {\n        if (isFunction(n)) {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function () {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n\n\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n\n      n = func && n == null ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n\n\n    function before(n, func) {\n      var result;\n\n      if (!isFunction(func)) {\n        if (isFunction(n)) {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n\n      return function () {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        } else {\n          func = null;\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the `length`\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n\n\n    function bind(func, thisArg) {\n      var bitmask = BIND_FLAG;\n\n      if (arguments.length > 2) {\n        var partials = baseSlice(arguments, 2),\n            holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    }\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the `length` property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n\n\n    function bindAll(object) {\n      return baseBindAll(object, arguments.length > 1 ? baseFlatten(arguments, false, false, 1) : functions(object));\n    }\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n\n\n    function bindKey(object, key) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\n      if (arguments.length > 2) {\n        var partials = baseSlice(arguments, 2),\n            holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n\n      return createWrapper(key, bitmask, object, partials, holders);\n    }\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n\n\n    function curry(func, arity, guard) {\n      if (guard && isIterateeCall(func, arity, guard)) {\n        arity = null;\n      }\n\n      var result = createWrapper(func, CURRY_FLAG, null, null, null, null, null, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n\n\n    function curryRight(func, arity, guard) {\n      if (guard && isIterateeCall(func, arity, guard)) {\n        arity = null;\n      }\n\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, null, null, null, null, null, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n    /**\n     * Creates a function that delays invoking `func` until after `wait` milliseconds\n     * have elapsed since the last time it was invoked. The created function comes\n     * with a `cancel` method to cancel delayed invocations. Provide an options\n     * object to indicate that `func` should be invoked on the leading and/or\n     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n     * function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n\n\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      wait = wait < 0 ? 0 : wait;\n\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n\n        if (trailing || maxWait !== wait) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          } else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        } else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n\n        return result;\n      }\n\n      debounced.cancel = cancel;\n      return debounced;\n    }\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n\n\n    function defer(func) {\n      return baseDelay(func, 1, arguments, 1);\n    }\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n\n\n    function delay(func, wait) {\n      return baseDelay(func, wait, arguments, 2);\n    }\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function add(x, y) {\n     *   return x + y;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n\n\n    function flow() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      if (!length) {\n        return function () {};\n      }\n\n      if (!arrayEvery(funcs, isFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return function () {\n        var index = 0,\n            result = funcs[index].apply(this, arguments);\n\n        while (++index < length) {\n          result = funcs[index].call(this, result);\n        }\n\n        return result;\n      };\n    }\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function add(x, y) {\n     *   return x + y;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n\n\n    function flowRight() {\n      var funcs = arguments,\n          fromIndex = funcs.length - 1;\n\n      if (fromIndex < 0) {\n        return function () {};\n      }\n\n      if (!arrayEvery(funcs, isFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return function () {\n        var index = fromIndex,\n            result = funcs[index].apply(this, arguments);\n\n        while (index--) {\n          result = funcs[index].call(this, result);\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the ES `Map` method interface\n     * of `get`, `has`, and `set`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n\n\n    function memoize(func, resolver) {\n      if (!isFunction(func) || resolver && !isFunction(resolver)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var memoized = function () {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : arguments[0];\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n\n        var result = func.apply(this, arguments);\n        cache.set(key, result);\n        return result;\n      };\n\n      memoized.cache = new memoize.Cache();\n      return memoized;\n    }\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n\n\n    function negate(predicate) {\n      if (!isFunction(predicate)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return function () {\n        return !predicate.apply(this, arguments);\n      };\n    }\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n\n\n    function once(func) {\n      return before(func, 2);\n    }\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n\n\n    function partial(func) {\n      var partials = baseSlice(arguments, 1),\n          holders = replaceHolders(partials, partial.placeholder);\n      return createWrapper(func, PARTIAL_FLAG, null, partials, holders);\n    }\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n\n\n    function partialRight(func) {\n      var partials = baseSlice(arguments, 1),\n          holders = replaceHolders(partials, partialRight.placeholder);\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, null, partials, holders);\n    }\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) { return n * 3; }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n\n\n    function rearg(func) {\n      var indexes = baseFlatten(arguments, false, false, 1);\n      return createWrapper(func, REARG_FLAG, null, null, null, indexes);\n    }\n    /**\n     * Creates a function that only invokes `func` at most once per every `wait`\n     * milliseconds. The created function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the throttled function return the result of the last\n     * `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * var throttled =  _.throttle(renewToken, 300000, { 'trailing': false })\n     * jQuery('.interactive').on('click', throttled);\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n\n\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n\n\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the structured clone algorithm.\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var body = _.clone(document.body, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(false) : undefined;\n     * });\n     *\n     * body === document.body\n     * // => false\n     * body.nodeName\n     * // => BODY\n     * body.childNodes.length;\n     * // => 0\n     */\n\n\n    function clone(value, isDeep, customizer, thisArg) {\n      // Juggle arguments.\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = customizer;\n        customizer = isIterateeCall(value, isDeep, thisArg) ? null : isDeep;\n        isDeep = false;\n      }\n\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, isDeep, customizer);\n    }\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the structured clone algorithm.\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * body === document.body\n     * // => false\n     * body.nodeName\n     * // => BODY\n     * body.childNodes.length;\n     * // => 20\n     */\n\n\n    function cloneDeep(value, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, true, customizer);\n    }\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })();\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n\n\n    function isArguments(value) {\n      var length = isObjectLike(value) ? value.length : undefined;\n      return isLength(length) && objToString.call(value) == argsTag || false;\n    }\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     */\n\n\n    var isArray = nativeIsArray || function (value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag || false;\n    };\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n\n\n    function isBoolean(value) {\n      return value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag || false;\n    }\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n\n\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag || false;\n    }\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n\n\n    function isElement(value) {\n      return value && value.nodeType === 1 && isObjectLike(value) && objToString.call(value).indexOf('Element') > -1 || false;\n    } // Fallback for environments without DOM support.\n\n\n    if (!support.dom) {\n      isElement = function (value) {\n        return value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value) || false;\n      };\n    }\n    /**\n     * Checks if a value is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n\n\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n\n      var length = value.length;\n\n      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) || isObjectLike(value) && isFunction(value.splice))) {\n        return !length;\n      }\n\n      return !keys(value).length;\n    }\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments; (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n\n\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n\n      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n        return value === other;\n      }\n\n      var result = customizer ? customizer(value, other) : undefined;\n      return typeof result == 'undefined' ? baseIsEqual(value, other, customizer) : !!result;\n    }\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n\n\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag || false;\n    }\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on ES `Number.isFinite`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n\n\n    var isFinite = nativeNumIsFinite || function (value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n\n\n    function isFunction(value) {\n      // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n      // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n      return typeof value == 'function' || false;\n    } // Fallback for environments that return incorrect `typeof` operator results.\n\n\n    if (isFunction(/x/) || Uint8Array && !isFunction(Uint8Array)) {\n      isFunction = function (value) {\n        // The use of `Object#toString` avoids issues with the `typeof` operator\n        // in older versions of Chrome and Safari which return 'function' for regexes\n        // and Safari 8 equivalents which return 'object' for typed array constructors.\n        return objToString.call(value) == funcTag;\n      };\n    }\n    /**\n     * Checks if `value` is the language type of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * **Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n\n\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return type == 'function' || value && type == 'object' || false;\n    }\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments; (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} source The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n\n\n    function isMatch(object, source, customizer, thisArg) {\n      var props = keys(source),\n          length = props.length;\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n\n      if (!customizer && length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return object != null && value === object[key] && hasOwnProperty.call(object, key);\n        }\n      }\n\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = values[length] = source[props[length]];\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n\n      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n    }\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as native `isNaN` which returns `true`\n     * for `undefined` and other non-numeric values. See the [ES5 spec](https://es5.github.io/#x15.1.2.4)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n\n\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n\n\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n\n      if (objToString.call(value) == funcTag) {\n        return reNative.test(fnToString.call(value));\n      }\n\n      return isObjectLike(value) && reHostCtor.test(value) || false;\n    }\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n\n\n    function isNull(value) {\n      return value === null;\n    }\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n\n\n    function isNumber(value) {\n      return typeof value == 'number' || isObjectLike(value) && objToString.call(value) == numberTag || false;\n    }\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n\n\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function (value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n      return objProto ? value == objProto || getPrototypeOf(value) == objProto : shimIsPlainObject(value);\n    };\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n\n    function isRegExp(value) {\n      return isObjectLike(value) && objToString.call(value) == regexpTag || false;\n    }\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n\n\n    function isString(value) {\n      return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag || false;\n    }\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n\n\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && typedArrayTags[objToString.call(value)] || false;\n    }\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n\n\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3);\n     * // => [2, 3]\n     */\n\n\n    function toArray(value) {\n      var length = value ? value.length : 0;\n\n      if (!isLength(length)) {\n        return values(value);\n      }\n\n      if (!length) {\n        return [];\n      }\n\n      return arrayCopy(value);\n    }\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n\n\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments;\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return typeof value == 'undefined' ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n\n    var assign = createAssigner(baseAssign);\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n\n      return properties ? baseCopy(properties, result, keys(properties)) : result;\n    }\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property are ignored.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n\n    function defaults(object) {\n      if (object == null) {\n        return object;\n      }\n\n      var args = arrayCopy(arguments);\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    }\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element `predicate` returns truthy for, instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) { return chr.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.findKey(users, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n\n\n    function findKey(object, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(object, predicate, baseForOwn, true);\n    }\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) { return chr.age < 40; });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.findLastKey(users, { 'age': 36 });\n     * // => 'barney'\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n\n\n    function findLastKey(object, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(object, predicate, baseForOwnRight, true);\n    }\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments; (value, key, object). Iterator functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n\n\n    function forIn(object, iteratee, thisArg) {\n      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n        iteratee = bindCallback(iteratee, thisArg, 3);\n      }\n\n      return baseFor(object, iteratee, keysIn);\n    }\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n\n\n    function forInRight(object, iteratee, thisArg) {\n      iteratee = bindCallback(iteratee, thisArg, 3);\n      return baseForRight(object, iteratee, keysIn);\n    }\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments; (value, key, object). Iterator functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(n, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (iteration order is not guaranteed)\n     */\n\n\n    function forOwn(object, iteratee, thisArg) {\n      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n        iteratee = bindCallback(iteratee, thisArg, 3);\n      }\n\n      return baseForOwn(object, iteratee);\n    }\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(n, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n\n\n    function forOwnRight(object, iteratee, thisArg) {\n      iteratee = bindCallback(iteratee, thisArg, 3);\n      return baseForRight(object, iteratee, keys);\n    }\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', ...]\n     */\n\n\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n    /**\n     * Checks if `key` exists as a direct property of `object` instead of an\n     * inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n\n\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     *\n     * // without `multiValue`\n     * _.invert({ 'first': 'fred', 'second': 'barney', 'third': 'fred' });\n     * // => { 'fred': 'third', 'barney': 'second' }\n     *\n     * // with `multiValue`\n     * _.invert({ 'first': 'fred', 'second': 'barney', 'third': 'fred' }, true);\n     * // => { 'fred': ['first', 'third'], 'barney': ['second'] }\n     */\n\n\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        } else {\n          result[value] = key;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n\n\n    var keys = !nativeKeys ? shimKeys : function (object) {\n      if (object) {\n        var Ctor = object.constructor,\n            length = object.length;\n      }\n\n      if (typeof Ctor == 'function' && Ctor.prototype === object || typeof object != 'function' && length && isLength(length)) {\n        return shimKeys(object);\n      }\n\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n\n      var length = object.length;\n      length = length && isLength(length) && (isArray(object) || support.nonEnumArgs && isArguments(object)) && length || 0;\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype == object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = index + '';\n      }\n\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `iteratee` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(n) { return n * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n\n\n    function mapValues(object, iteratee, thisArg) {\n      var result = {};\n      iteratee = getCallback(iteratee, thisArg, 3);\n      baseForOwn(object, function (value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments; (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n\n\n    var merge = createAssigner(baseMerge);\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If `predicate` is provided it is invoked for each property\n     * of `object` omitting the properties `predicate` returns truthy for. The\n     * predicate is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n\n    function omit(object, predicate, thisArg) {\n      if (object == null) {\n        return {};\n      }\n\n      if (typeof predicate != 'function') {\n        var props = arrayMap(baseFlatten(arguments, false, false, 1), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n\n      predicate = bindCallback(predicate, thisArg, 3);\n      return pickByCallback(object, function (value, key, object) {\n        return !predicate(value, key, object);\n      });\n    }\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n\n\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n\n      return result;\n    }\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n\n\n    function pick(object, predicate, thisArg) {\n      if (object == null) {\n        return {};\n      }\n\n      return typeof predicate == 'function' ? pickByCallback(object, bindCallback(predicate, thisArg, 3)) : pickByArray(object, baseFlatten(arguments, false, false, 1));\n    }\n    /**\n     * Resolves the value of property `key` on `object`. If the value of `key` is\n     * a function it is invoked with the `this` binding of `object` and its result\n     * is returned, else the property value is returned. If the property value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the property value\n     *  resolves to `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': _.constant(40) };\n     *\n     * _.result(object, 'user');\n     * // => 'fred'\n     *\n     * _.result(object, 'age');\n     * // => 40\n     *\n     * _.result(object, 'status', 'busy');\n     * // => 'busy'\n     *\n     * _.result(object, 'status', _.constant('busy'));\n     * // => 'busy'\n     */\n\n\n    function result(object, key, defaultValue) {\n      var value = object == null ? undefined : object[key];\n\n      if (typeof value == 'undefined') {\n        value = defaultValue;\n      }\n\n      return isFunction(value) ? value.call(object) : value;\n    }\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments; (accumulator, value, key, object). Iterator functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6], function(result, n) {\n     *   n *= n;\n     *   if (n % 2) {\n     *     return result.push(n) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n\n\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor() : [];\n          } else {\n            accumulator = baseCreate(typeof Ctor == 'function' && Ctor.prototype);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n\n      (isArr ? arrayEach : baseForOwn)(object, function (value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n\n\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n\n\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n\n\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        } else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n\n      min = +min || 0;\n\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))), max);\n      }\n\n      return baseRandom(min, max);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to camel case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/CamelCase) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n\n\n    var camelCase = createCompounder(function (result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? word.charAt(0).toUpperCase() + word.slice(1) : word);\n    });\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    /**\n     * Deburrs `string` by converting latin-1 supplementary letters to basic latin letters.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n\n\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter);\n    }\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n\n\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = target + '';\n      var length = string.length;\n      position = (typeof position == 'undefined' ? length : nativeMin(position < 0 ? 0 : +position || 0, length)) - target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and '`', in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#102](https://html5sec.org/#102),\n     * [#108](https://html5sec.org/#108), and [#133](https://html5sec.org/#133) of\n     * the [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always quote attribute values to reduce\n     * XSS vectors. See [Ryan Grove's article](http://wonko.com/post/html-escaping)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n\n\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;\n    }\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"^\", \"$\", \".\", \"|\", \"?\", \"*\",\n     * \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n\n\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return string && reHasRegExpChars.test(string) ? string.replace(reRegExpChars, '\\\\$&') : string;\n    }\n    /**\n     * Converts `string` to kebab case (a.k.a. spinal case).\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles) for\n     * more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n\n\n    var kebabCase = createCompounder(function (result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n    /**\n     * Pads `string` on the left and right sides if it is shorter then the given\n     * padding length. The `chars` string may be truncated if the number of padding\n     * characters can't be evenly divided by the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n      var strLength = string.length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n      chars = createPad('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n    /**\n     * Pads `string` on the left side if it is shorter then the given padding\n     * length. The `chars` string may be truncated if the number of padding\n     * characters exceeds the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n\n\n    function padLeft(string, length, chars) {\n      string = baseToString(string);\n      return string && createPad(string, length, chars) + string;\n    }\n    /**\n     * Pads `string` on the right side if it is shorter then the given padding\n     * length. The `chars` string may be truncated if the number of padding\n     * characters exceeds the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n\n\n    function padRight(string, length, chars) {\n      string = baseToString(string);\n      return string && string + createPad(string, length, chars);\n    }\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the ES5 implementation of `parseInt`.\n     * See the [ES5 spec](https://es5.github.io/#E) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n\n\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n\n      return nativeParseInt(string, radix);\n    } // Fallback for environments with pre-ES5 implementations.\n\n\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function (string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n\n\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      } // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\n\n      do {\n        if (n % 2) {\n          result += string;\n        }\n\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n    /**\n     * Converts `string` to snake case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Snake_case) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n\n\n    var snakeCase = createCompounder(function (result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n    /**\n     * Converts `string` to start case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n\n    var startCase = createCompounder(function (result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null ? 0 : nativeMin(position < 0 ? 0 : +position || 0, string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes sourceURLs for easier debugging.\n     * See the [HTML5 Rocks article on sourcemaps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for more details.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '';\n     *   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n\n\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n\n      string = baseToString(string);\n      options = baseAssign(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n      var imports = baseAssign(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\"; // Compile the regexp to match each delimiter.\n\n      var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g'); // Use a sourceURL for easier debugging.\n\n      var sourceURL = '//# sourceURL=' + ('sourceURL' in options ? options.sourceURL : 'lodash.templateSources[' + ++templateCounter + ']') + '\\n';\n      string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue); // Escape characters that can't be included in string literals.\n\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar); // Replace delimiters with snippets.\n\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n\n        index = offset + match.length; // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n\n        return match;\n      });\n      source += \"';\\n\"; // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n\n      var variable = options.variable;\n\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      } // Cleanup code by stripping empty strings.\n\n\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;'); // Frame code as the function body.\n\n      source = 'function(' + (variable || 'obj') + ') {\\n' + (variable ? '' : 'obj || (obj = {});\\n') + \"var __t, __p = ''\" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\\n' + \"function print() { __p += __j.call(arguments, '') }\\n\" : ';\\n') + source + 'return __p\\n}';\n      var result = attempt(function () {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      }); // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n\n      result.source = source;\n\n      if (isError(result)) {\n        throw result;\n      }\n\n      return result;\n    }\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar]\n     */\n\n\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n\n      chars = chars + '';\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n\n\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n\n      return string.slice(charsLeftIndex(string, chars + ''));\n    }\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n\n\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n\n      return string.slice(0, charsRightIndex(string, chars + '') + 1);\n    }\n    /**\n     * Truncates `string` if it is longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', { 'length': 24, 'separator': ' ' });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', { 'length': 24, 'separator': /,? +/ });\n     * //=> 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', { 'omission': ' [...]' });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n\n\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? +options.length || 0 : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n\n      string = baseToString(string);\n\n      if (length >= string.length) {\n        return string;\n      }\n\n      var end = length - omission.length;\n\n      if (end < 1) {\n        return omission;\n      }\n\n      var result = string.slice(0, end);\n\n      if (separator == null) {\n        return result + omission;\n      }\n\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n\n          separator.lastIndex = 0;\n\n          while (match = separator.exec(substring)) {\n            newEnd = match.index;\n          }\n\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n\n      return result + omission;\n    }\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n\n\n    function unescape(string) {\n      string = baseToString(string);\n      return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;\n    }\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n\n\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught\n     * error object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function() {\n     *   return document.querySelectorAll(selector);\n     * });\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n\n\n    function attempt(func) {\n      try {\n        return func();\n      } catch (e) {\n        return isError(e) ? e : Error(e);\n      }\n    }\n    /**\n     * Creates a function bound to an optional `thisArg`. If `func` is a property\n     * name the created callback returns the property value for a given element.\n     * If `func` is an object the created callback returns `true` for elements\n     * that contain the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n\n\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n\n      return isObjectLike(func) ? matches(func) : baseCallback(func, thisArg);\n    }\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n\n\n    function constant(value) {\n      return function () {\n        return value;\n      };\n    }\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n\n\n    function identity(value) {\n      return value;\n    }\n    /**\n     * Creates a function which performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * var matchesAge = _.matches({ 'age': 36 });\n     *\n     * _.filter(users, matchesAge);\n     * // => [{ 'user': 'barney', 'age': 36 }]\n     *\n     * _.find(users, matchesAge);\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=this] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n\n\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj && keys(source),\n            methodNames = props && props.length && baseFunctions(source, props);\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n        object[methodName] = func;\n\n        if (isFunc) {\n          object.prototype[methodName] = function (func) {\n            return function () {\n              var chainAll = this.__chain__;\n\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__);\n                (result.__actions__ = arrayCopy(this.__actions__)).push({\n                  'func': func,\n                  'args': arguments,\n                  'thisArg': object\n                });\n                result.__chain__ = chainAll;\n                return result;\n              }\n\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func);\n        }\n      }\n\n      return object;\n    }\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n\n\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n\n\n    function noop() {// No operation performed.\n    }\n    /**\n     * Creates a function which returns the property value of `key` on a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * var getName = _.property('user');\n     *\n     * _.map(users, getName);\n     * // => ['fred', barney']\n     *\n     * _.pluck(_.sortBy(users, getName), 'user');\n     * // => ['barney', 'fred']\n     */\n\n\n    function property(key) {\n      return baseProperty(key + '');\n    }\n    /**\n     * The inverse of `_.property`; this method creates a function which returns\n     * the property value of a given key on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to inspect.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40, 'active': true };\n     * _.map(['active', 'user'], _.propertyOf(object));\n     * // => [true, 'fred']\n     *\n     * var object = { 'a': 3, 'b': 1, 'c': 2 };\n     * _.sortBy(['a', 'b', 'c'], _.propertyOf(object));\n     * // => ['b', 'c', 'a']\n     */\n\n\n    function propertyOf(object) {\n      return function (key) {\n        return object == null ? undefined : object[key];\n      };\n    }\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `start` is less than `end` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n\n\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n\n      start = +start || 0;\n      step = step == null ? 1 : +step || 0;\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      } // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\n\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n\n      return result;\n    }\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n\n\n    function times(n, iteratee, thisArg) {\n      n = +n; // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n      iteratee = bindCallback(iteratee, thisArg, 1);\n\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n\n\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n    /*------------------------------------------------------------------------*/\n    // Ensure `new LodashWrapper` is an instance of `lodash`.\n\n\n    LodashWrapper.prototype = lodash.prototype; // Add functions to the `Map` cache.\n\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet; // Add functions to the `Set` cache.\n\n    SetCache.prototype.push = cachePush; // Assign cache to `_.memoize`.\n\n    memoize.Cache = MapCache; // Add functions that return wrapped values when chaining.\n\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject; // Add aliases.\n\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq; // Add functions to `lodash.prototype`.\n\n    mixin(lodash, lodash);\n    /*------------------------------------------------------------------------*/\n    // Add functions that return unwrapped values when chaining.\n\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words; // Add aliases.\n\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n    mixin(lodash, function () {\n      var source = {};\n      baseForOwn(lodash, function (func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n    /*------------------------------------------------------------------------*/\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function (n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n\n      return this.thru(function (value) {\n        return sample(value, n);\n      });\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n\n\n    lodash.VERSION = VERSION; // Assign default placeholders.\n\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {\n      lodash[methodName].placeholder = lodash;\n    }); // Add `LazyWrapper` methods that accept an `iteratee` value.\n\n    arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {\n      var isFilter = index == LAZY_FILTER_FLAG;\n\n      LazyWrapper.prototype[methodName] = function (iteratee, thisArg) {\n        var result = this.clone(),\n            filtered = result.filtered,\n            iteratees = result.iteratees || (result.iteratees = []);\n        result.filtered = filtered || isFilter || index == LAZY_WHILE_FLAG && result.dir < 0;\n        iteratees.push({\n          'iteratee': getCallback(iteratee, thisArg, 3),\n          'type': index\n        });\n        return result;\n      };\n    }); // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\n    arrayEach(['drop', 'take'], function (methodName, index) {\n      var countName = methodName + 'Count',\n          whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function (n) {\n        n = n == null ? 1 : nativeMax(+n || 0, 0);\n        var result = this.clone();\n\n        if (result.filtered) {\n          var value = result[countName];\n          result[countName] = index ? nativeMin(value, n) : value + n;\n        } else {\n          var views = result.views || (result.views = []);\n          views.push({\n            'size': n,\n            'type': methodName + (result.dir < 0 ? 'Right' : '')\n          });\n        }\n\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function (n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function (predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    }); // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\n    arrayEach(['first', 'last'], function (methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function () {\n        return this[takeName](1).value()[0];\n      };\n    }); // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\n    arrayEach(['initial', 'rest'], function (methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function () {\n        return this[dropName](1);\n      };\n    }); // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\n    arrayEach(['pluck', 'where'], function (methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : baseProperty;\n\n      LazyWrapper.prototype[methodName] = function (value) {\n        return this[operationName](createCallback(index ? value : value + ''));\n      };\n    });\n\n    LazyWrapper.prototype.dropWhile = function (iteratee, thisArg) {\n      var done,\n          lastIndex,\n          isRight = this.dir < 0;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return this.filter(function (value, index, array) {\n        done = done && (isRight ? index < lastIndex : index > lastIndex);\n        lastIndex = index;\n        return done || (done = !iteratee(value, index, array));\n      });\n    };\n\n    LazyWrapper.prototype.reject = function (iteratee, thisArg) {\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return this.filter(function (value, index, array) {\n        return !iteratee(value, index, array);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function (start, end) {\n      start = start == null ? 0 : +start || 0;\n      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n      if (typeof end != 'undefined') {\n        end = +end || 0;\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n\n      return result;\n    }; // Add `LazyWrapper` methods to `lodash.prototype`.\n\n\n    baseForOwn(LazyWrapper.prototype, function (func, methodName) {\n      var lodashFunc = lodash[methodName],\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function () {\n        var value = this.__wrapped__,\n            args = arguments,\n            chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy ? func.call(value) : lodashFunc.call(lodash, this.value());\n        }\n\n        var interceptor = function (value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n\n        if (isLazy || isArray(value)) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.actions)) {\n            var actions = result.actions || (result.actions = []);\n            actions.push({\n              'func': thru,\n              'args': [interceptor],\n              'thisArg': lodash\n            });\n          }\n\n          return new LodashWrapper(result, chainAll);\n        }\n\n        return this.thru(interceptor);\n      };\n    }); // Add `Array.prototype` functions to `lodash.prototype`.\n\n    arrayEach(['concat', 'join', 'pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function () {\n        var args = arguments;\n\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n\n        return this[chainName](function (value) {\n          return func.apply(value, args);\n        });\n      };\n    }); // Add functions to the lazy wrapper.\n\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue; // Add chaining functions to the lodash wrapper.\n\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue; // Add function aliases to the lodash wrapper.\n\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n    return lodash;\n  }\n  /*--------------------------------------------------------------------------*/\n  // Export lodash.\n\n\n  var _ = runInContext(); // Some AMD build optimizers like r.js check for condition patterns like the following:\n\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _; // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n\n    define(function () {\n      return _;\n    });\n  } // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    } // Export for Narwhal or Rhino -require.\n    else {\n      freeExports._ = _;\n    }\n  } else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}).call(this);","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/node_modules/lodash/index.js"],"names":["undefined","VERSION","BIND_FLAG","BIND_KEY_FLAG","CURRY_BOUND_FLAG","CURRY_FLAG","CURRY_RIGHT_FLAG","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","REARG_FLAG","ARY_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","FUNC_ERROR_TEXT","PLACEHOLDER","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reEsTemplate","reFlags","reFuncName","reHexPrefix","reHostCtor","reLatin1","reNoMatch","reRegExpChars","reHasRegExpChars","reThis","reUnescapedString","reWords","upper","lower","whitespace","contextProps","templateCounter","typedArrayTags","cloneableTags","debounceOptions","deburredLetters","htmlEscapes","htmlUnescapes","objectTypes","stringEscapes","root","window","freeExports","exports","nodeType","freeModule","module","freeGlobal","global","self","moduleExports","baseCompareAscending","value","other","valIsReflexive","othIsReflexive","baseIndexOf","array","fromIndex","indexOfNaN","index","length","baseSortBy","comparer","sort","baseToString","charAtCallback","string","charCodeAt","charsLeftIndex","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultipleAscending","objCriteria","othCriteria","result","deburrLetter","letter","escapeHtmlChar","chr","escapeStringChar","fromRight","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","trimmedRightIndex","unescapeHtmlChar","runInContext","context","_","defaults","Object","pick","Array","Date","Error","Function","Math","Number","String","TypeError","arrayProto","prototype","objectProto","document","fnToString","toString","getLength","baseProperty","hasOwnProperty","idCounter","objToString","oldDash","reNative","escapeRegExp","replace","ArrayBuffer","isNative","bufferSlice","slice","ceil","clearTimeout","floor","getPrototypeOf","push","propertyIsEnumerable","Set","setTimeout","splice","Uint8Array","unshift","WeakMap","Float64Array","func","e","nativeIsArray","isArray","nativeCreate","create","nativeIsFinite","isFinite","nativeKeys","keys","nativeMax","max","nativeMin","min","nativeNow","now","nativeNumIsFinite","nativeParseInt","parseInt","nativeRandom","random","NEGATIVE_INFINITY","POSITIVE_INFINITY","MAX_ARRAY_LENGTH","pow","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","MAX_SAFE_INTEGER","metaMap","lodash","LodashWrapper","call","__wrapped__","__chain__","arrayCopy","__actions__","chainAll","actions","support","x","funcDecomp","WinRTError","test","funcNames","name","dom","createDocumentFragment","nonEnumArgs","arguments","templateSettings","LazyWrapper","dir","dropCount","filtered","iteratees","takeCount","views","wrapped","lazyClone","lazyReverse","clone","lazyValue","baseWrapperValue","isRight","view","getView","start","end","iterLength","outer","iterIndex","data","type","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","cacheIndexOf","cache","isObject","set","hash","cachePush","add","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","arrayMap","arrayMax","arrayMin","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","assignDefaults","objectValue","sourceValue","assignOwnDefaults","baseAssign","customizer","props","baseCopy","baseAt","collection","isArr","isLength","propsLength","parseFloat","isIndex","baseBindAll","methodNames","createWrapper","baseCallback","thisArg","argCount","isBindable","bindCallback","identity","baseMatches","baseClone","isDeep","stackA","stackB","initCloneArray","tag","isFunc","initCloneObject","initCloneByTag","baseForOwn","subValue","baseCreate","baseDelay","wait","args","isFunction","apply","baseSlice","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEach","iterable","toObject","baseEachRight","baseForOwnRight","baseEvery","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseFor","keysFunc","baseForRight","baseForIn","keysIn","baseFunctions","baseInvoke","methodName","baseIsEqual","isWhere","valType","othType","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","valWrapped","othWrapped","equalArrays","equalObjects","pop","baseIsMatch","strictCompareFlags","noCustomizer","objValue","srcValue","baseMap","isStrictComparable","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","basePullAt","indexes","previous","baseRandom","baseReduce","initFromCollection","baseSetData","baseSome","baseUniq","isLarge","seenIndex","baseValues","action","binaryIndex","retHighest","low","high","mid","binaryIndexBy","valIsNaN","valIsUndef","isReflexive","setLow","bufferClone","buffer","constant","byteLength","floatLength","offset","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","pad","createAggregator","setter","initializer","getCallback","createAssigner","assigner","isIterateeCall","createBindWrapper","Ctor","createCtorWrapper","wrapper","createCompounder","callback","words","deburr","thisBinding","createExtremum","arrayFunc","isMin","noIteratee","isString","toIterable","extremumBy","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isCurry","isCurryBound","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","reorder","createPad","strLength","padLength","repeat","createPartialWrapper","getData","newData","mergeData","setData","arrLength","othLength","arrValue","othValue","othIndex","message","objProps","objLength","othProps","hasCtor","objCtor","constructor","othCtor","exValue","current","noop","get","target","transforms","size","input","byteOffset","exec","lastIndex","prereq","srcBitmask","newBitmask","arityFlags","bindFlags","comboFlags","isRearg","isCombo","pickByArray","pickByCallback","oldArray","count","lastCalled","stamp","remaining","shimIsPlainObject","shimKeys","allowIndexes","chunk","guard","compact","difference","drop","n","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","first","flatten","flattenDeep","initial","intersection","caches","last","lastIndexOf","pull","pullAt","remove","rest","sortedIndex","sortedLastIndex","take","takeRight","takeRightWhile","takeWhile","union","uniq","isSorted","unzip","without","xor","concat","zip","zipObject","chain","tap","interceptor","thru","wrapperChain","wrapperReverse","reverse","wrapperToString","wrapperValue","at","includes","countBy","every","filter","find","findLast","findWhere","forEach","forEachRight","groupBy","indexBy","invoke","map","partition","pluck","reduce","reduceRight","reject","sample","shuffle","rand","some","sortBy","sortByAll","where","getTime","after","temp","before","bind","bindAll","functions","bindKey","curry","curryRight","debounce","options","maxTimeoutId","timeoutId","trailingCall","maxWait","trailing","leading","cancel","delayed","isCalled","maxDelayed","debounced","leadingCall","defer","delay","flow","funcs","flowRight","memoize","resolver","memoized","Cache","negate","once","partial","partialRight","rearg","throttle","wrap","cloneDeep","isBoolean","isDate","isElement","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","isNull","valueOf","objProto","isRegExp","isUndefined","toArray","assign","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","invert","multiValue","isProto","skipIndexes","mapValues","merge","omit","pairs","defaultValue","transform","valuesIn","floating","noMin","noMax","camelCase","word","toLowerCase","toUpperCase","capitalize","endsWith","position","escape","kebabCase","padLeft","padRight","radix","trim","snakeCase","startCase","startsWith","template","otherOptions","settings","imports","importsKeys","importsValues","isEscaping","isEvaluating","interpolate","reDelimiters","evaluate","sourceURL","match","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","trimLeft","trimRight","trunc","omission","separator","search","newEnd","substring","unescape","pattern","matches","mixin","isObj","noConflict","property","propertyOf","range","step","times","uniqueId","prefix","id","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","detect","foldl","foldr","head","include","inject","isFilter","countName","whileName","takeName","dropName","operationName","createCallback","done","lodashFunc","retUnwrapped","isHybrid","isLazy","onlyLazy","otherArgs","chainName","toJSON","define","amd"],"mappings":"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ACD,aAAO,EAAE1K,KAAF,GAAUC,MAAjB,EAAyB;AACvB,YAAImK,GAAG,GAAGiC,KAAK,CAACrM,KAAD,CAAf;;AACA,YAAI0K,MAAJ,EAAY;AACVtJ,UAAAA,MAAM,CAACgJ,GAAD,CAAN,GAAcM,MAAM,CAAC1K,KAAD,CAApB;AACD,SAFD,MAEO,IAAIoK,GAAJ,EAAS;AACdhJ,UAAAA,MAAM,CAACgJ,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBA,GAAG,CAAC,CAAD,CAApB;AACD;AACF;;AACD,aAAOhJ,MAAP;AACD;AAED;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASmc,KAAT,CAAe/d,KAAf,EAAsB;AACpB,UAAI4B,MAAM,GAAGiG,MAAM,CAAC7H,KAAD,CAAnB;AACA4B,MAAAA,MAAM,CAACqG,SAAP,GAAmB,IAAnB;AACA,aAAOrG,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASoc,GAAT,CAAahe,KAAb,EAAoBie,WAApB,EAAiCvQ,OAAjC,EAA0C;AACxCuQ,MAAAA,WAAW,CAAClW,IAAZ,CAAiB2F,OAAjB,EAA0B1N,KAA1B;AACA,aAAOA,KAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASke,IAAT,CAAcle,KAAd,EAAqBie,WAArB,EAAkCvQ,OAAlC,EAA2C;AACzC,aAAOuQ,WAAW,CAAClW,IAAZ,CAAiB2F,OAAjB,EAA0B1N,KAA1B,CAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASgT,IAAT,CAAc7R,UAAd,EAA0BnB,SAA1B,EAAqC6B,OAArC,EAA8C;AAC5C,UAAIzH,OAAO,CAAC+G,UAAD,CAAX,EAAyB;AACvB,YAAIxM,KAAK,GAAG0b,SAAS,CAAClP,UAAD,EAAanB,SAAb,EAAwB6B,OAAxB,CAArB;AACA,eAAOlN,KAAK,GAAG,CAAC,CAAT,GAAawM,UAAU,CAACxM,KAAD,CAAvB,GAAiCpG,SAAxC;AACD;;AACDyR,MAAAA,SAAS,GAAGgK,WAAW,CAAChK,SAAD,EAAY6B,OAAZ,EAAqB,CAArB,CAAvB;AACA,aAAOqC,QAAQ,CAAC/C,UAAD,EAAanB,SAAb,EAAwB2D,QAAxB,CAAf;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASsP,QAAT,CAAkB9R,UAAlB,EAA8BnB,SAA9B,EAAyC6B,OAAzC,EAAkD;AAChD7B,MAAAA,SAAS,GAAGgK,WAAW,CAAChK,SAAD,EAAY6B,OAAZ,EAAqB,CAArB,CAAvB;AACA,aAAOqC,QAAQ,CAAC/C,UAAD,EAAanB,SAAb,EAAwB8D,aAAxB,CAAf;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASoP,SAAT,CAAmB/R,UAAnB,EAA+B1P,MAA/B,EAAuC;AACrC,aAAOuhB,IAAI,CAAC7R,UAAD,EAAae,WAAW,CAACzQ,MAAD,CAAxB,CAAX;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS0hB,OAAT,CAAiBhS,UAAjB,EAA6BtK,QAA7B,EAAuCgL,OAAvC,EAAgD;AAC9C,aAAQ,OAAOhL,QAAP,IAAmB,UAAnB,IAAiC,OAAOgL,OAAP,IAAkB,WAAnD,IAAkEzH,OAAO,CAAC+G,UAAD,CAA1E,GACHtB,SAAS,CAACsB,UAAD,EAAatK,QAAb,CADN,GAEH8M,QAAQ,CAACxC,UAAD,EAAaa,YAAY,CAACnL,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAzB,CAFZ;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASuR,YAAT,CAAsBjS,UAAtB,EAAkCtK,QAAlC,EAA4CgL,OAA5C,EAAqD;AACnD,aAAQ,OAAOhL,QAAP,IAAmB,UAAnB,IAAiC,OAAOgL,OAAP,IAAkB,WAAnD,IAAkEzH,OAAO,CAAC+G,UAAD,CAA1E,GACHrB,cAAc,CAACqB,UAAD,EAAatK,QAAb,CADX,GAEHiN,aAAa,CAAC3C,UAAD,EAAaa,YAAY,CAACnL,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAzB,CAFjB;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAIwR,OAAO,GAAGxJ,gBAAgB,CAAC,UAAS9T,MAAT,EAAiB5B,KAAjB,EAAwB4K,GAAxB,EAA6B;AAC1D,UAAItG,cAAc,CAACyD,IAAf,CAAoBnG,MAApB,EAA4BgJ,GAA5B,CAAJ,EAAsC;AACpChJ,QAAAA,MAAM,CAACgJ,GAAD,CAAN,CAAYvF,IAAZ,CAAiBrF,KAAjB;AACD,OAFD,MAEO;AACL4B,QAAAA,MAAM,CAACgJ,GAAD,CAAN,GAAc,CAAC5K,KAAD,CAAd;AACD;AACF,KAN6B,CAA9B;AAQA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAImf,OAAO,GAAGzJ,gBAAgB,CAAC,UAAS9T,MAAT,EAAiB5B,KAAjB,EAAwB4K,GAAxB,EAA6B;AAC1DhJ,MAAAA,MAAM,CAACgJ,GAAD,CAAN,GAAc5K,KAAd;AACD,KAF6B,CAA9B;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,aAASof,MAAT,CAAgBpS,UAAhB,EAA4B8D,UAA5B,EAAwC;AACtC,aAAOD,UAAU,CAAC7D,UAAD,EAAa8D,UAAb,EAAyB7B,SAAS,CAACjG,SAAD,EAAY,CAAZ,CAAlC,CAAjB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASqW,GAAT,CAAarS,UAAb,EAAyBtK,QAAzB,EAAmCgL,OAAnC,EAA4C;AAC1C,UAAI5H,IAAI,GAAGG,OAAO,CAAC+G,UAAD,CAAP,GAAsBjB,QAAtB,GAAiCyG,OAA5C;AACA9P,MAAAA,QAAQ,GAAGmT,WAAW,CAACnT,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAtB;AACA,aAAO5H,IAAI,CAACkH,UAAD,EAAatK,QAAb,CAAX;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAI+D,GAAG,GAAGiQ,cAAc,CAAC1K,QAAD,CAAxB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAIrF,GAAG,GAAG+P,cAAc,CAACzK,QAAD,EAAW,IAAX,CAAxB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAIqT,SAAS,GAAG5J,gBAAgB,CAAC,UAAS9T,MAAT,EAAiB5B,KAAjB,EAAwB4K,GAAxB,EAA6B;AAC5DhJ,MAAAA,MAAM,CAACgJ,GAAG,GAAG,CAAH,GAAO,CAAX,CAAN,CAAoBvF,IAApB,CAAyBrF,KAAzB;AACD,KAF+B,EAE7B,YAAW;AAAE,aAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AAAkB,KAFF,CAAhC;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,aAASuf,KAAT,CAAevS,UAAf,EAA2BpC,GAA3B,EAAgC;AAC9B,aAAOyU,GAAG,CAACrS,UAAD,EAAa3I,YAAY,CAACuG,GAAG,GAAG,EAAP,CAAzB,CAAV;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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UAAAA,MAAM,CAACpB,KAAD,CAAN,GAAgBoB,MAAM,CAACie,IAAD,CAAtB;AACD;;AACDje,QAAAA,MAAM,CAACie,IAAD,CAAN,GAAe7S,UAAU,CAACxM,KAAD,CAAzB;AACD;;AACD,aAAOoB,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASsY,IAAT,CAAclN,UAAd,EAA0B;AACxB,UAAIvM,MAAM,GAAGuM,UAAU,GAAGA,UAAU,CAACvM,MAAd,GAAuB,CAA9C;AACA,aAAOyM,QAAQ,CAACzM,MAAD,CAAR,GAAmBA,MAAnB,GAA4B8F,IAAI,CAACyG,UAAD,CAAJ,CAAiBvM,MAApD;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASqf,IAAT,CAAc9S,UAAd,EAA0BnB,SAA1B,EAAqC6B,OAArC,EAA8C;AAC5C,UAAI5H,IAAI,GAAGG,OAAO,CAAC+G,UAAD,CAAP,GAAsBV,SAAtB,GAAkCiH,QAA7C;;AACA,UAAI,OAAO1H,SAAP,IAAoB,UAApB,IAAkC,OAAO6B,OAAP,IAAkB,WAAxD,EAAqE;AACnE7B,QAAAA,SAAS,GAAGgK,WAAW,CAAChK,SAAD,EAAY6B,OAAZ,EAAqB,CAArB,CAAvB;AACD;;AACD,aAAO5H,IAAI,CAACkH,UAAD,EAAanB,SAAb,CAAX;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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,UAAP,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD8c,KAAjD,CAA1B;AACA3V,MAAAA,MAAM,CAACW,WAAP,GAAqBme,KAAK,CAACne,WAA3B;AACA,aAAOX,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS+e,UAAT,CAAoB7a,IAApB,EAA0ByR,KAA1B,EAAiCmE,KAAjC,EAAwC;AACtC,UAAIA,KAAK,IAAI1F,cAAc,CAAClQ,IAAD,EAAOyR,KAAP,EAAcmE,KAAd,CAA3B,EAAiD;AAC/CnE,QAAAA,KAAK,GAAG,IAAR;AACD;;AACD,UAAI3V,MAAM,GAAG4L,aAAa,CAAC1H,IAAD,EAAOpL,gBAAP,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD6c,KAAvD,CAA1B;AACA3V,MAAAA,MAAM,CAACW,WAAP,GAAqBoe,UAAU,CAACpe,WAAhC;AACA,aAAOX,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASgf,QAAT,CAAkB9a,IAAlB,EAAwB+I,IAAxB,EAA8BgS,OAA9B,EAAuC;AACrC,UAAI/R,IAAJ;AAAA,UACIgS,YADJ;AAAA,UAEIlf,MAFJ;AAAA,UAGIwZ,KAHJ;AAAA,UAII1N,OAJJ;A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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAIyK,QAAQ,GAAGS,iBAAiB,IAAI,UAAS9G,KAAT,EAAgB;AAClD,aAAO,OAAOA,KAAP,IAAgB,QAAhB,IAA4BoG,cAAc,CAACpG,KAAD,CAAjD;AACD,KAFD;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS+O,UAAT,CAAoB/O,KAApB,EAA2B;AACzB;AACA;AACA,aAAO,OAAOA,KAAP,IAAgB,UAAhB,IAA8B,KAArC;AACD,KA58N4B,CA68N7B;;;AACA,QAAI+O,UAAU,CAAC,GAAD,CAAV,IAAoBrJ,UAAU,IAAI,CAACqJ,UAAU,CAACrJ,UAAD,CAAjD,EAAgE;AAC9DqJ,MAAAA,UAAU,GAAG,UAAS/O,KAAT,EAAgB;AAC3B;AACA;AACA;AACA,eAAOwE,WAAW,CAACuD,IAAZ,CAAiB/H,KAAjB,KAA2BnE,OAAlC;AACD,OALD;AAMD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASwP,QAAT,CAAkBrL,KAAlB,EAAyB;AACvB;AACA;AACA,UAAIwK,IAAI,GAAG,OAAOxK,KAAlB;AACA,aAAOwK,IAAI,IAAI,UAAR,IAAuBxK,KAAK,IAAIwK,IAAI,IAAI,QAAxC,IAAqD,KAA5D;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASyY,OAAT,CAAiB1hB,MAAjB,EAAyBjE,MAAzB,EAAiCsP,UAAjC,EAA6Cc,OAA7C,EAAsD;AACpD,UAAI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CD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASuB,QAAT,CAAkB5B,MAAlB,EAA0B;AACxB,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,eAAOA,MAAP;AACD;;AACD,UAAIuN,IAAI,GAAG5G,SAAS,CAACc,SAAD,CAApB;AACA8F,MAAAA,IAAI,CAACzJ,IAAL,CAAUkH,cAAV;AACA,aAAOmX,MAAM,CAAC1U,KAAP,CAAa5U,SAAb,EAAwB0U,IAAxB,CAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS8U,OAAT,CAAiBriB,MAAjB,EAAyBsK,SAAzB,EAAoC6B,OAApC,EAA6C;AAC3C7B,MAAAA,SAAS,GAAGgK,WAAW,CAAChK,SAAD,EAAY6B,OAAZ,EAAqB,CAArB,CAAvB;AACA,aAAOqC,QAAQ,CAACxO,MAAD,EAASsK,SAAT,EAAoB4C,UAApB,EAAgC,IAAhC,CAAf;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASoV,WAAT,CAAqBtiB,MAArB,EAA6BsK,SAA7B,EAAwC6B,OAAxC,EAAiD;AAC/C7B,MAAAA,SAAS,GAAGgK,WAAW,CAAChK,SAAD,EAAY6B,OAAZ,EAAqB,CAArB,CAAvB;AACA,aAAOqC,QAAQ,CAACxO,MAAD,EAASsK,SAAT,EAAoB+D,eAApB,EAAqC,IAArC,CAAf;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASkU,KAAT,CAAeviB,MAAf,EAAuBmB,QAAvB,EAAiCgL,OAAjC,EAA0C;AACxC,UAAI,OAAOhL,QAAP,IAAmB,UAAnB,IAAiC,OAAOgL,OAAP,IAAkB,WAAvD,EAAoE;AAClEhL,QAAAA,QAAQ,GAAGmL,YAAY,CAACnL,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAvB;AACD;;AACD,aAAO6C,OAAO,CAAChP,MAAD,EAASmB,QAAT,EAAmBiO,MAAnB,CAAd;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASoT,UAAT,CAAoBxiB,MAApB,EAA4BmB,QAA5B,EAAsCgL,OAAtC,EAA+C;AAC7ChL,MAAAA,QAAQ,GAAGmL,YAAY,CAACnL,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAvB;AACA,aAAO+C,YAAY,CAAClP,MAAD,EAASmB,QAAT,EAAmBiO,MAAnB,CAAnB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASqT,MAAT,CAAgBziB,MAAhB,EAAwBmB,QAAxB,EAAkCgL,OAAlC,EAA2C;AACzC,UAAI,OAAOhL,QAAP,IAAmB,UAAnB,IAAiC,OAAOgL,OAAP,IAAkB,WAAvD,EAAoE;AAClEhL,QAAAA,QAAQ,GAAGmL,YAAY,CAACnL,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAvB;AACD;;AACD,aAAOe,UAAU,CAAClN,MAAD,EAASmB,QAAT,CAAjB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASuhB,WAAT,CAAqB1iB,MAArB,EAA6BmB,QAA7B,EAAuCgL,OAAvC,EAAgD;AAC9ChL,MAAAA,QAAQ,GAAGmL,YAAY,CAACnL,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAvB;AACA,aAAO+C,YAAY,CAAClP,MAAD,EAASmB,QAAT,EAAmB6D,IAAnB,CAAnB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASia,SAAT,CAAmBjf,MAAnB,EAA2B;AACzB,aAAOqP,aAAa,CAACrP,MAAD,EAASoP,MAAM,CAACpP,MAAD,CAAf,CAApB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASsJ,GAAT,CAAatJ,MAAb,EAAqBqJ,GAArB,EAA0B;AACxB,aAAOrJ,MAAM,GAAG+C,cAAc,CAACyD,IAAf,CAAoBxG,MAApB,EAA4BqJ,GAA5B,CAAH,GAAsC,KAAnD;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASsZ,MAAT,CAAgB3iB,MAAhB,EAAwB4iB,UAAxB,EAAoCzI,KAApC,EAA2C;AACzC,UAAIA,KAAK,IAAI1F,cAAc,CAACzU,MAAD,EAAS4iB,UAAT,EAAqBzI,KAArB,CAA3B,EAAwD;AACtDyI,QAAAA,UAAU,GAAG,IAAb;AACD;;AACD,UAAI3jB,KAAK,GAAG,CAAC,CAAb;AAAA,UACIqM,KAAK,GAAGtG,IAAI,CAAChF,MAAD,CADhB;AAAA,UAEId,MAAM,GAAGoM,KAAK,CAACpM,MAFnB;AAAA,UAGImB,MAAM,GAAG,EAHb;;AAKA,aAAO,EAAEpB,KAAF,GAAUC,MAAjB,EAAyB;AACvB,YAAImK,GAAG,GAAGiC,KAAK,CAACrM,KAAD,CAAf;AAAA,YACIR,KAAK,GAAGuB,MAAM,CAACqJ,GAAD,CADlB;;AAGA,YAAIuZ,UAAJ,EAAgB;AACd,cAAI7f,cAAc,CAACyD,IAAf,CAAoBnG,MAApB,EAA4B5B,KAA5B,CAAJ,EAAwC;AACtC4B,YAAAA,MAAM,CAAC5B,KAAD,CAAN,CAAcqF,IAAd,CAAmBuF,GAAnB;AACD,WAFD,MAEO;AACLhJ,YAAAA,MAAM,CAAC5B,KAAD,CAAN,GAAgB,CAAC4K,GAAD,CAAhB;AACD;AACF,SAND,MAOK;AACHhJ,UAAAA,MAAM,CAAC5B,KAAD,CAAN,GAAgB4K,GAAhB;AACD;AACF;;AACD,aAAOhJ,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAI2E,IAAI,GAAG,CAACD,UAAD,GAAciV,QAAd,GAAyB,UAASha,MAAT,EAAiB;AACnD,UAAIA,MAAJ,EAAY;AACV,YAAI2U,IAAI,GAAG3U,MAAM,CAACmY,WAAlB;AAAA,YACIjZ,MAAM,GAAGc,MAAM,CAACd,MADpB;AAED;;AACD,UAAK,OAAOyV,IAAP,IAAe,UAAf,IAA6BA,IAAI,CAACnS,SAAL,KAAmBxC,MAAjD,IACA,OAAOA,MAAP,IAAiB,UAAjB,IAAgCd,MAAM,IAAIyM,QAAQ,CAACzM,MAAD,CADtD,EACkE;AAChE,eAAO8a,QAAQ,CAACha,MAAD,CAAf;AACD;;AACD,aAAO8J,QAAQ,CAAC9J,MAAD,CAAR,GAAmB+E,UAAU,CAAC/E,MAAD,CAA7B,GAAwC,EAA/C;AACD,KAVD;AAYA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,aAASoP,MAAT,CAAgBpP,MAAhB,EAAwB;AACtB,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,eAAO,EAAP;AACD;;AACD,UAAI,CAAC8J,QAAQ,CAAC9J,MAAD,CAAb,EAAuB;AACrBA,QAAAA,MAAM,GAAG6B,MAAM,CAAC7B,MAAD,CAAf;AACD;;AACD,UAAId,MAAM,GAAGc,MAAM,CAACd,MAApB;AACAA,MAAAA,MAAM,GAAIA,MAAM,IAAIyM,QAAQ,CAACzM,MAAD,CAAlB,KACPwF,OAAO,CAAC1E,MAAD,CAAP,IAAoB+G,OAAO,CAACS,WAAR,IAAuBqH,WAAW,CAAC7O,MAAD,CAD/C,KAC6Dd,MAD9D,IACyE,CADlF;AAGA,UAAIyV,IAAI,GAAG3U,MAAM,CAACmY,WAAlB;AAAA,UACIlZ,KAAK,GAAG,CAAC,CADb;AAAA,UAEI4jB,OAAO,GAAG,OAAOlO,IAAP,IAAe,UAAf,IAA6BA,IAAI,CAACnS,SAAL,IAAkBxC,MAF7D;AAAA,UAGIK,MAAM,GAAG0B,KAAK,CAAC7C,MAAD,CAHlB;AAAA,UAII4jB,WAAW,GAAG5jB,MAAM,GAAG,CAJ3B;;AAMA,aAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvBmB,QAAAA,MAAM,CAACpB,KAAD,CAAN,GAAiBA,KAAK,GAAG,EAAzB;AACD;;AACD,WAAK,IAAIoK,GAAT,IAAgBrJ,MAAhB,EAAwB;AACtB,YAAI,EAAE8iB,WAAW,IAAIhX,OAAO,CAACzC,GAAD,EAAMnK,MAAN,CAAxB,KACA,EAAEmK,GAAG,IAAI,aAAP,KAAyBwZ,OAAO,IAAI,CAAC9f,cAAc,CAACyD,IAAf,CAAoBxG,MAApB,EAA4BqJ,GAA5B,CAArC,CAAF,CADJ,EAC+E;AAC7EhJ,UAAAA,MAAM,CAACyD,IAAP,CAAYuF,GAAZ;AACD;AACF;;AACD,aAAOhJ,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS0iB,SAAT,CAAmB/iB,MAAnB,EAA2BmB,QAA3B,EAAqCgL,OAArC,EAA8C;AAC5C,UAAI9L,MAAM,GAAG,EAAb;AACAc,MAAAA,QAAQ,GAAGmT,WAAW,CAACnT,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAtB;AAEAe,MAAAA,UAAU,CAAClN,MAAD,EAAS,UAASvB,KAAT,EAAgB4K,GAAhB,EAAqBrJ,MAArB,EAA6B;AAC9CK,QAAAA,MAAM,CAACgJ,GAAD,CAAN,GAAclI,QAAQ,CAAC1C,KAAD,EAAQ4K,GAAR,EAAarJ,MAAb,CAAtB;AACD,OAFS,CAAV;AAGA,aAAOK,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAI2iB,KAAK,GAAGzO,cAAc,CAACpD,SAAD,CAA1B;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,aAAS8R,IAAT,CAAcjjB,MAAd,EAAsBsK,SAAtB,EAAiC6B,OAAjC,EAA0C;AACxC,UAAInM,MAAM,IAAI,IAAd,EAAoB;AAClB,eAAO,EAAP;AACD;;AACD,UAAI,OAAOsK,SAAP,IAAoB,UAAxB,EAAoC;AAClC,YAAIgB,KAAK,GAAGd,QAAQ,CAACmE,WAAW,CAAClH,SAAD,EAAY,KAAZ,EAAmB,KAAnB,EAA0B,CAA1B,CAAZ,EAA0CpF,MAA1C,CAApB;AACA,eAAOmX,WAAW,CAACxZ,MAAD,EAAS2N,cAAc,CAACyB,MAAM,CAACpP,MAAD,CAAP,EAAiBsL,KAAjB,CAAvB,CAAlB;AACD;;AACDhB,MAAAA,SAAS,GAAGgC,YAAY,CAAChC,SAAD,EAAY6B,OAAZ,EAAqB,CAArB,CAAxB;AACA,aAAOsN,cAAc,CAACzZ,MAAD,EAAS,UAASvB,KAAT,EAAgB4K,GAAhB,EAAqBrJ,MAArB,EAA6B;AACzD,eAAO,CAACsK,SAAS,CAAC7L,KAAD,EAAQ4K,GAAR,EAAarJ,MAAb,CAAjB;AACD,OAFoB,CAArB;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASkjB,KAAT,CAAeljB,MAAf,EAAuB;AACrB,UAAIf,KAAK,GAAG,CAAC,CAAb;AAAA,UACIqM,KAAK,GAAGtG,IAAI,CAAChF,MAAD,CADhB;AAAA,UAEId,MAAM,GAAGoM,KAAK,CAACpM,MAFnB;AAAA,UAGImB,MAAM,GAAG0B,KAAK,CAAC7C,MAAD,CAHlB;;AAKA,aAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,YAAImK,GAAG,GAAGiC,KAAK,CAACrM,KAAD,CAAf;AACAoB,QAAAA,MAAM,CAACpB,KAAD,CAAN,GAAgB,CAACoK,GAAD,EAAMrJ,MAAM,CAACqJ,GAAD,CAAZ,CAAhB;AACD;;AACD,aAAOhJ,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASyB,IAAT,CAAc9B,MAAd,EAAsBsK,SAAtB,EAAiC6B,OAAjC,EAA0C;AACxC,UAAInM,MAAM,IAAI,IAAd,EAAoB;AAClB,eAAO,EAAP;AACD;;AACD,aAAO,OAAOsK,SAAP,IAAoB,UAApB,GACHmP,cAAc,CAACzZ,MAAD,EAASsM,YAAY,CAAChC,SAAD,EAAY6B,OAAZ,EAAqB,CAArB,CAArB,CADX,GAEHqN,WAAW,CAACxZ,MAAD,EAAS2O,WAAW,CAAClH,SAAD,EAAY,KAAZ,EAAmB,KAAnB,EAA0B,CAA1B,CAApB,CAFf;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASpH,MAAT,CAAgBL,MAAhB,EAAwBqJ,GAAxB,EAA6B8Z,YAA7B,EAA2C;AACzC,UAAI1kB,KAAK,GAAGuB,MAAM,IAAI,IAAV,GAAiBnH,SAAjB,GAA6BmH,MAAM,CAACqJ,GAAD,CAA/C;;AACA,UAAI,OAAO5K,KAAP,IAAgB,WAApB,EAAiC;AAC/BA,QAAAA,KAAK,GAAG0kB,YAAR;AACD;;AACD,aAAO3V,UAAU,CAAC/O,KAAD,CAAV,GAAoBA,KAAK,CAAC+H,IAAN,CAAWxG,MAAX,CAApB,GAAyCvB,KAAhD;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS2kB,SAAT,CAAmBpjB,MAAnB,EAA2BmB,QAA3B,EAAqCyJ,WAArC,EAAkDuB,OAAlD,EAA2D;AACzD,UAAIT,KAAK,GAAGhH,OAAO,CAAC1E,MAAD,CAAP,IAAmBkQ,YAAY,CAAClQ,MAAD,CAA3C;AACAmB,MAAAA,QAAQ,GAAGmT,WAAW,CAACnT,QAAD,EAAWgL,OAAX,EAAoB,CAApB,CAAtB;;AAEA,UAAIvB,WAAW,IAAI,IAAnB,EAAyB;AACvB,YAAIc,KAAK,IAAI5B,QAAQ,CAAC9J,MAAD,CAArB,EAA+B;AAC7B,cAAI2U,IAAI,GAAG3U,MAAM,CAACmY,WAAlB;;AACA,cAAIzM,KAAJ,EAAW;AACTd,YAAAA,WAAW,GAAGlG,OAAO,CAAC1E,MAAD,CAAP,GAAkB,IAAI2U,IAAJ,EAAlB,GAA6B,EAA3C;AACD,WAFD,MAEO;AACL/J,YAAAA,WAAW,GAAGwC,UAAU,CAAC,OAAOuH,IAAP,IAAe,UAAf,IAA6BA,IAAI,CAACnS,SAAnC,CAAxB;AACD;AACF,SAPD,MAOO;AACLoI,UAAAA,WAAW,GAAG,EAAd;AACD;AACF;;AACD,OAACc,KAAK,GAAGvB,SAAH,GAAe+C,UAArB,EAAiClN,MAAjC,EAAyC,UAASvB,KAAT,EAAgBQ,KAAhB,EAAuBe,MAAvB,EAA+B;AACtE,eAAOmB,QAAQ,CAACyJ,WAAD,EAAcnM,KAAd,EAAqBQ,KAArB,EAA4Be,MAA5B,CAAf;AACD,OAFD;AAGA,aAAO4K,WAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASjB,MAAT,CAAgB3J,MAAhB,EAAwB;AACtB,aAAOoS,UAAU,CAACpS,MAAD,EAASgF,IAAI,CAAChF,MAAD,CAAb,CAAjB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASqjB,QAAT,CAAkBrjB,MAAlB,EAA0B;AACxB,aAAOoS,UAAU,CAACpS,MAAD,EAASoP,MAAM,CAACpP,MAAD,CAAf,CAAjB;AACD;AAED;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS2F,MAAT,CAAgBP,GAAhB,EAAqBF,GAArB,EAA0Boe,QAA1B,EAAoC;AAClC,UAAIA,QAAQ,IAAI7O,cAAc,CAACrP,GAAD,EAAMF,GAAN,EAAWoe,QAAX,CAA9B,EAAoD;AAClDpe,QAAAA,GAAG,GAAGoe,QAAQ,GAAG,IAAjB;AACD;;AACD,UAAIC,KAAK,GAAGne,GAAG,IAAI,IAAnB;AAAA,UACIoe,KAAK,GAAGte,GAAG,IAAI,IADnB;;AAGA,UAAIoe,QAAQ,IAAI,IAAhB,EAAsB;AACpB,YAAIE,KAAK,IAAI,OAAOpe,GAAP,IAAc,SAA3B,EAAsC;AACpCke,UAAAA,QAAQ,GAAGle,GAAX;AACAA,UAAAA,GAAG,GAAG,CAAN;AACD,SAHD,MAIK,IAAI,OAAOF,GAAP,IAAc,SAAlB,EAA6B;AAChCoe,UAAAA,QAAQ,GAAGpe,GAAX;AACAse,UAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AACD,UAAID,KAAK,IAAIC,KAAb,EAAoB;AAClBte,QAAAA,GAAG,GAAG,CAAN;AACAse,QAAAA,KAAK,GAAG,KAAR;AACD;;AACDpe,MAAAA,GAAG,GAAG,CAACA,GAAD,IAAQ,CAAd;;AACA,UAAIoe,KAAJ,EAAW;AACTte,QAAAA,GAAG,GAAGE,GAAN;AACAA,QAAAA,GAAG,GAAG,CAAN;AACD,OAHD,MAGO;AACLF,QAAAA,GAAG,GAAG,CAACA,GAAD,IAAQ,CAAd;AACD;;AACD,UAAIoe,QAAQ,IAAIle,GAAG,GAAG,CAAlB,IAAuBF,GAAG,GAAG,CAAjC,EAAoC;AAClC,YAAIoZ,IAAI,GAAG5Y,YAAY,EAAvB;AACA,eAAOP,SAAS,CAACC,GAAG,GAAIkZ,IAAI,IAAIpZ,GAAG,GAAGE,GAAN,GAAYyG,UAAU,CAAC,SAAS,CAACyS,IAAI,GAAG,EAAR,EAAYpf,MAAZ,GAAqB,CAA9B,CAAD,CAA1B,CAAZ,EAA4EgG,GAA5E,CAAhB;AACD;;AACD,aAAO0M,UAAU,CAACxM,GAAD,EAAMF,GAAN,CAAjB;AACD;AAED;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAIue,SAAS,GAAG3O,gBAAgB,CAAC,UAASzU,MAAT,EAAiBqjB,IAAjB,EAAuBzkB,KAAvB,EAA8B;AAC7DykB,MAAAA,IAAI,GAAGA,IAAI,CAACC,WAAL,EAAP;AACA,aAAOtjB,MAAM,IAAIpB,KAAK,GAAIykB,IAAI,CAAC7jB,MAAL,CAAY,CAAZ,EAAe+jB,WAAf,KAA+BF,IAAI,CAACjgB,KAAL,CAAW,CAAX,CAAnC,GAAoDigB,IAA7D,CAAb;AACD,KAH+B,CAAhC;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,aAASG,UAAT,CAAoBrkB,MAApB,EAA4B;AAC1BA,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA,aAAOA,MAAM,IAAKA,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiB+jB,WAAjB,KAAiCpkB,MAAM,CAACiE,KAAP,CAAa,CAAb,CAAnD;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASwR,MAAT,CAAgBzV,MAAhB,EAAwB;AACtBA,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA,aAAOA,MAAM,IAAIA,MAAM,CAAC6D,OAAP,CAAe5G,QAAf,EAAyB6D,YAAzB,CAAjB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASwjB,QAAT,CAAkBtkB,MAAlB,EAA0BiZ,MAA1B,EAAkCsL,QAAlC,EAA4C;AAC1CvkB,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACAiZ,MAAAA,MAAM,GAAIA,MAAM,GAAG,EAAnB;AAEA,UAAIvZ,MAAM,GAAGM,MAAM,CAACN,MAApB;AACA6kB,MAAAA,QAAQ,GAAG,CAAC,OAAOA,QAAP,IAAmB,WAAnB,GAAiC7kB,MAAjC,GAA0CiG,SAAS,CAAC4e,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAoB,CAACA,QAAD,IAAa,CAAlC,EAAsC7kB,MAAtC,CAApD,IAAqGuZ,MAAM,CAACvZ,MAAvH;AACA,aAAO6kB,QAAQ,IAAI,CAAZ,IAAiBvkB,MAAM,CAACI,OAAP,CAAe6Y,MAAf,EAAuBsL,QAAvB,KAAoCA,QAA5D;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASC,MAAT,CAAgBxkB,MAAhB,EAAwB;AACtB;AACAA,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA,aAAQA,MAAM,IAAIxD,kBAAkB,CAACmL,IAAnB,CAAwB3H,MAAxB,CAAX,GACHA,MAAM,CAAC6D,OAAP,CAAezH,eAAf,EAAgC4E,cAAhC,CADG,GAEHhB,MAFJ;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS4D,YAAT,CAAsB5D,MAAtB,EAA8B;AAC5BA,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA,aAAQA,MAAM,IAAI5C,gBAAgB,CAACuK,IAAjB,CAAsB3H,MAAtB,CAAX,GACHA,MAAM,CAAC6D,OAAP,CAAe1G,aAAf,EAA8B,MAA9B,CADG,GAEH6C,MAFJ;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAIykB,SAAS,GAAGnP,gBAAgB,CAAC,UAASzU,MAAT,EAAiBqjB,IAAjB,EAAuBzkB,KAAvB,EAA8B;AAC7D,aAAOoB,MAAM,IAAIpB,KAAK,GAAG,GAAH,GAAS,EAAlB,CAAN,GAA8BykB,IAAI,CAACC,WAAL,EAArC;AACD,KAF+B,CAAhC;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,aAASzP,GAAT,CAAa1U,MAAb,EAAqBN,MAArB,EAA6BS,KAA7B,EAAoC;AAClCH,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACAN,MAAAA,MAAM,GAAG,CAACA,MAAV;AAEA,UAAI8X,SAAS,GAAGxX,MAAM,CAACN,MAAvB;;AACA,UAAI8X,SAAS,IAAI9X,MAAb,IAAuB,CAAC2F,cAAc,CAAC3F,MAAD,CAA1C,EAAoD;AAClD,eAAOM,MAAP;AACD;;AACD,UAAIkT,GAAG,GAAG,CAACxT,MAAM,GAAG8X,SAAV,IAAuB,CAAjC;AAAA,UACInD,UAAU,GAAGjQ,KAAK,CAAC8O,GAAD,CADtB;AAAA,UAEIuB,WAAW,GAAGvQ,IAAI,CAACgP,GAAD,CAFtB;AAIA/S,MAAAA,KAAK,GAAGoX,SAAS,CAAC,EAAD,EAAK9C,WAAL,EAAkBtU,KAAlB,CAAjB;AACA,aAAOA,KAAK,CAAC8D,KAAN,CAAY,CAAZ,EAAeoQ,UAAf,IAA6BrU,MAA7B,GAAsCG,KAA7C;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASukB,OAAT,CAAiB1kB,MAAjB,EAAyBN,MAAzB,EAAiCS,KAAjC,EAAwC;AACtCH,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA,aAAOA,MAAM,IAAKuX,SAAS,CAACvX,MAAD,EAASN,MAAT,EAAiBS,KAAjB,CAAT,GAAmCH,MAArD;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS2kB,QAAT,CAAkB3kB,MAAlB,EAA0BN,MAA1B,EAAkCS,KAAlC,EAAyC;AACvCH,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA,aAAOA,MAAM,IAAKA,MAAM,GAAGuX,SAAS,CAACvX,MAAD,EAASN,MAAT,EAAiBS,KAAjB,CAApC;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS8F,QAAT,CAAkBjG,MAAlB,EAA0B4kB,KAA1B,EAAiCjK,KAAjC,EAAwC;AACtC,UAAIA,KAAK,IAAI1F,cAAc,CAACjV,MAAD,EAAS4kB,KAAT,EAAgBjK,KAAhB,CAA3B,EAAmD;AACjDiK,QAAAA,KAAK,GAAG,CAAR;AACD;;AACD,aAAO5e,cAAc,CAAChG,MAAD,EAAS4kB,KAAT,CAArB;AACD,KAh/Q4B,CAi/Q7B;;;AACA,QAAI5e,cAAc,CAACtI,UAAU,GAAG,IAAd,CAAd,IAAqC,CAAzC,EAA4C;AAC1CuI,MAAAA,QAAQ,GAAG,UAASjG,MAAT,EAAiB4kB,KAAjB,EAAwBjK,KAAxB,EAA+B;AACxC;AACA;AACA;AACA,YAAIA,KAAK,GAAG1F,cAAc,CAACjV,MAAD,EAAS4kB,KAAT,EAAgBjK,KAAhB,CAAjB,GAA0CiK,KAAK,IAAI,IAA5D,EAAkE;AAChEA,UAAAA,KAAK,GAAG,CAAR;AACD,SAFD,MAEO,IAAIA,KAAJ,EAAW;AAChBA,UAAAA,KAAK,GAAG,CAACA,KAAT;AACD;;AACD5kB,QAAAA,MAAM,GAAG6kB,IAAI,CAAC7kB,MAAD,CAAb;AACA,eAAOgG,cAAc,CAAChG,MAAD,EAAS4kB,KAAK,KAAK7nB,WAAW,CAAC4K,IAAZ,CAAiB3H,MAAjB,IAA2B,EAA3B,GAAgC,EAArC,CAAd,CAArB;AACD,OAXD;AAYD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS0X,MAAT,CAAgB1X,MAAhB,EAAwB+a,CAAxB,EAA2B;AACzB,UAAIla,MAAM,GAAG,EAAb;AACAb,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA+a,MAAAA,CAAC,GAAG,CAACA,CAAL;;AACA,UAAIA,CAAC,GAAG,CAAJ,IAAS,CAAC/a,MAAV,IAAoB,CAACqF,cAAc,CAAC0V,CAAD,CAAvC,EAA4C;AAC1C,eAAOla,MAAP;AACD,OANwB,CAOzB;AACA;;;AACA,SAAG;AACD,YAAIka,CAAC,GAAG,CAAR,EAAW;AACTla,UAAAA,MAAM,IAAIb,MAAV;AACD;;AACD+a,QAAAA,CAAC,GAAG3W,KAAK,CAAC2W,CAAC,GAAG,CAAL,CAAT;AACA/a,QAAAA,MAAM,IAAIA,MAAV;AACD,OAND,QAMS+a,CANT;;AAQA,aAAOla,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAIikB,SAAS,GAAGxP,gBAAgB,CAAC,UAASzU,MAAT,EAAiBqjB,IAAjB,EAAuBzkB,KAAvB,EAA8B;AAC7D,aAAOoB,MAAM,IAAIpB,KAAK,GAAG,GAAH,GAAS,EAAlB,CAAN,GAA8BykB,IAAI,CAACC,WAAL,EAArC;AACD,KAF+B,CAAhC;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAIY,SAAS,GAAGzP,gBAAgB,CAAC,UAASzU,MAAT,EAAiBqjB,IAAjB,EAAuBzkB,KAAvB,EAA8B;AAC7D,aAAOoB,MAAM,IAAIpB,KAAK,GAAG,GAAH,GAAS,EAAlB,CAAN,IAA+BykB,IAAI,CAAC7jB,MAAL,CAAY,CAAZ,EAAe+jB,WAAf,KAA+BF,IAAI,CAACjgB,KAAL,CAAW,CAAX,CAA9D,CAAP;AACD,KAF+B,CAAhC;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,aAAS+gB,UAAT,CAAoBhlB,MAApB,EAA4BiZ,MAA5B,EAAoCsL,QAApC,EAA8C;AAC5CvkB,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACAukB,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,IAAZ,GAAmB,CAAnB,GAAuB5e,SAAS,CAAC4e,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAoB,CAACA,QAAD,IAAa,CAAlC,EAAsCvkB,MAAM,CAACN,MAA7C,CAA3C;AACA,aAAOM,MAAM,CAAC4b,WAAP,CAAmB3C,MAAnB,EAA2BsL,QAA3B,KAAwCA,QAA/C;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASU,QAAT,CAAkBjlB,MAAlB,EAA0B8f,OAA1B,EAAmCoF,YAAnC,EAAiD;AAC/C;AACA;AACA,UAAIC,QAAQ,GAAGre,MAAM,CAACoB,gBAAtB;;AAEA,UAAIgd,YAAY,IAAIjQ,cAAc,CAACjV,MAAD,EAAS8f,OAAT,EAAkBoF,YAAlB,CAAlC,EAAmE;AACjEpF,QAAAA,OAAO,GAAGoF,YAAY,GAAG,IAAzB;AACD;;AACDllB,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA8f,MAAAA,OAAO,GAAGlU,UAAU,CAACA,UAAU,CAAC,EAAD,EAAKsZ,YAAY,IAAIpF,OAArB,CAAX,EAA0CqF,QAA1C,EAAoDxZ,iBAApD,CAApB;AAEA,UAAIyZ,OAAO,GAAGxZ,UAAU,CAACA,UAAU,CAAC,EAAD,EAAKkU,OAAO,CAACsF,OAAb,CAAX,EAAkCD,QAAQ,CAACC,OAA3C,EAAoDzZ,iBAApD,CAAxB;AAAA,UACI0Z,WAAW,GAAG7f,IAAI,CAAC4f,OAAD,CADtB;AAAA,UAEIE,aAAa,GAAG1S,UAAU,CAACwS,OAAD,EAAUC,WAAV,CAF9B;AAIA,UAAIE,UAAJ;AAAA,UACIC,YADJ;AAAA,UAEI/lB,KAAK,GAAG,CAFZ;AAAA,UAGIgmB,WAAW,GAAG3F,OAAO,CAAC2F,WAAR,IAAuBvoB,SAHzC;AAAA,UAIIX,MAAM,GAAG,UAJb,CAf+C,CAqB/C;;AACA,UAAImpB,YAAY,GAAGppB,MAAM,CACvB,CAACwjB,OAAO,CAAC0E,MAAR,IAAkBtnB,SAAnB,EAA8BX,MAA9B,GAAuC,GAAvC,GACAkpB,WAAW,CAAClpB,MADZ,GACqB,GADrB,GAEA,CAACkpB,WAAW,KAAK9oB,aAAhB,GAAgCC,YAAhC,GAA+CM,SAAhD,EAA2DX,MAF3D,GAEoE,GAFpE,GAGA,CAACujB,OAAO,CAAC6F,QAAR,IAAoBzoB,SAArB,EAAgCX,MAHhC,GAGyC,IAJlB,EAKvB,GALuB,CAAzB,CAtB+C,CA6B/C;;AACA,UAAIqpB,SAAS,GAAG,oBACb,eAAe9F,OAAf,GACGA,OAAO,CAAC8F,SADX,GAEI,4BAA6B,EAAEhoB,eAA/B,GAAkD,GAHzC,IAIV,IAJN;AAMAoC,MAAAA,MAAM,CAAC6D,OAAP,CAAe6hB,YAAf,EAA6B,UAASG,KAAT,EAAgBC,WAAhB,EAA6BC,gBAA7B,EAA+CC,eAA/C,EAAgEC,aAAhE,EAA+EpS,MAA/E,EAAuF;AAClHkS,QAAAA,gBAAgB,KAAKA,gBAAgB,GAAGC,eAAxB,CAAhB,CADkH,CAGlH;;AACAzpB,QAAAA,MAAM,IAAIyD,MAAM,CAACiE,KAAP,CAAaxE,KAAb,EAAoBoU,MAApB,EAA4BhQ,OAA5B,CAAoCvG,iBAApC,EAAuD4D,gBAAvD,CAAV,CAJkH,CAMlH;;AACA,YAAI4kB,WAAJ,EAAiB;AACfP,UAAAA,UAAU,GAAG,IAAb;AACAhpB,UAAAA,MAAM,IAAI,cAAcupB,WAAd,GAA4B,QAAtC;AACD;;AACD,YAAIG,aAAJ,EAAmB;AACjBT,UAAAA,YAAY,GAAG,IAAf;AACAjpB,UAAAA,MAAM,IAAI,SAAS0pB,aAAT,GAAyB,aAAnC;AACD;;AACD,YAAIF,gBAAJ,EAAsB;AACpBxpB,UAAAA,MAAM,IAAI,mBAAmBwpB,gBAAnB,GAAsC,6BAAhD;AACD;;AACDtmB,QAAAA,KAAK,GAAGoU,MAAM,GAAGgS,KAAK,CAACnmB,MAAvB,CAlBkH,CAoBlH;AACA;;AACA,eAAOmmB,KAAP;AACD,OAvBD;AAyBAtpB,MAAAA,MAAM,IAAI,MAAV,CA7D+C,CA+D/C;AACA;;AACA,UAAI2pB,QAAQ,GAAGpG,OAAO,CAACoG,QAAvB;;AACA,UAAI,CAACA,QAAL,EAAe;AACb3pB,QAAAA,MAAM,GAAG,mBAAmBA,MAAnB,GAA4B,OAArC;AACD,OApE8C,CAqE/C;;;AACAA,MAAAA,MAAM,GAAG,CAACipB,YAAY,GAAGjpB,MAAM,CAACsH,OAAP,CAAe7H,oBAAf,EAAqC,EAArC,CAAH,GAA8CO,MAA3D,EACNsH,OADM,CACE5H,mBADF,EACuB,IADvB,EAEN4H,OAFM,CAEE3H,qBAFF,EAEyB,KAFzB,CAAT,CAtE+C,CA0E/C;;AACAK,MAAAA,MAAM,GAAG,eAAe2pB,QAAQ,IAAI,KAA3B,IAAoC,OAApC,IACNA,QAAQ,GACL,EADK,GAEL,sBAHG,IAKP,mBALO,IAMNX,UAAU,GACN,kBADM,GAEN,EARE,KAUNC,YAAY,GACT,oCACA,uDAFS,GAGT,KAbG,IAePjpB,MAfO,GAgBP,eAhBF;AAkBA,UAAIsE,MAAM,GAAGslB,OAAO,CAAC,YAAW;AAC9B,eAAOzjB,QAAQ,CAAC2iB,WAAD,EAAcO,SAAS,GAAG,SAAZ,GAAwBrpB,MAAtC,CAAR,CAAsD0R,KAAtD,CAA4D5U,SAA5D,EAAuEisB,aAAvE,CAAP;AACD,OAFmB,CAApB,CA7F+C,CAiG/C;AACA;;AACAzkB,MAAAA,MAAM,CAACtE,MAAP,GAAgBA,MAAhB;;AACA,UAAI0lB,OAAO,CAACphB,MAAD,CAAX,EAAqB;AACnB,cAAMA,MAAN;AACD;;AACD,aAAOA,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASgkB,IAAT,CAAc7kB,MAAd,EAAsBG,KAAtB,EAA6Bwa,KAA7B,EAAoC;AAClC,UAAI1b,KAAK,GAAGe,MAAZ;AACAA,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eAAOA,MAAP;AACD;;AACD,UAAI2a,KAAK,GAAG1F,cAAc,CAAChW,KAAD,EAAQkB,KAAR,EAAewa,KAAf,CAAjB,GAAyCxa,KAAK,IAAI,IAA3D,EAAiE;AAC/D,eAAOH,MAAM,CAACiE,KAAP,CAAanC,gBAAgB,CAAC9B,MAAD,CAA7B,EAAuC+B,iBAAiB,CAAC/B,MAAD,CAAjB,GAA4B,CAAnE,CAAP;AACD;;AACDG,MAAAA,KAAK,GAAIA,KAAK,GAAG,EAAjB;AACA,aAAOH,MAAM,CAACiE,KAAP,CAAa/D,cAAc,CAACF,MAAD,EAASG,KAAT,CAA3B,EAA4CG,eAAe,CAACN,MAAD,EAASG,KAAT,CAAf,GAAiC,CAA7E,CAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASimB,QAAT,CAAkBpmB,MAAlB,EAA0BG,KAA1B,EAAiCwa,KAAjC,EAAwC;AACtC,UAAI1b,KAAK,GAAGe,MAAZ;AACAA,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eAAOA,MAAP;AACD;;AACD,UAAI2a,KAAK,GAAG1F,cAAc,CAAChW,KAAD,EAAQkB,KAAR,EAAewa,KAAf,CAAjB,GAAyCxa,KAAK,IAAI,IAA3D,EAAiE;AAC/D,eAAOH,MAAM,CAACiE,KAAP,CAAanC,gBAAgB,CAAC9B,MAAD,CAA7B,CAAP;AACD;;AACD,aAAOA,MAAM,CAACiE,KAAP,CAAa/D,cAAc,CAACF,MAAD,EAAUG,KAAK,GAAG,EAAlB,CAA3B,CAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASkmB,SAAT,CAAmBrmB,MAAnB,EAA2BG,KAA3B,EAAkCwa,KAAlC,EAAyC;AACvC,UAAI1b,KAAK,GAAGe,MAAZ;AACAA,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eAAOA,MAAP;AACD;;AACD,UAAI2a,KAAK,GAAG1F,cAAc,CAAChW,KAAD,EAAQkB,KAAR,EAAewa,KAAf,CAAjB,GAAyCxa,KAAK,IAAI,IAA3D,EAAiE;AAC/D,eAAOH,MAAM,CAACiE,KAAP,CAAa,CAAb,EAAgBlC,iBAAiB,CAAC/B,MAAD,CAAjB,GAA4B,CAA5C,CAAP;AACD;;AACD,aAAOA,MAAM,CAACiE,KAAP,CAAa,CAAb,EAAgB3D,eAAe,CAACN,MAAD,EAAUG,KAAK,GAAG,EAAlB,CAAf,GAAwC,CAAxD,CAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASmmB,KAAT,CAAetmB,MAAf,EAAuB8f,OAAvB,EAAgCnF,KAAhC,EAAuC;AACrC,UAAIA,KAAK,IAAI1F,cAAc,CAACjV,MAAD,EAAS8f,OAAT,EAAkBnF,KAAlB,CAA3B,EAAqD;AACnDmF,QAAAA,OAAO,GAAG,IAAV;AACD;;AACD,UAAIpgB,MAAM,GAAG1F,oBAAb;AAAA,UACIusB,QAAQ,GAAGtsB,sBADf;;AAGA,UAAI6lB,OAAO,IAAI,IAAf,EAAqB;AACnB,YAAIxV,QAAQ,CAACwV,OAAD,CAAZ,EAAuB;AACrB,cAAI0G,SAAS,GAAG,eAAe1G,OAAf,GAAyBA,OAAO,CAAC0G,SAAjC,GAA6CA,SAA7D;AACA9mB,UAAAA,MAAM,GAAG,YAAYogB,OAAZ,GAAsB,CAACA,OAAO,CAACpgB,MAAT,IAAmB,CAAzC,GAA6CA,MAAtD;AACA6mB,UAAAA,QAAQ,GAAG,cAAczG,OAAd,GAAwBhgB,YAAY,CAACggB,OAAO,CAACyG,QAAT,CAApC,GAAyDA,QAApE;AACD,SAJD,MAIO;AACL7mB,UAAAA,MAAM,GAAG,CAACogB,OAAD,IAAY,CAArB;AACD;AACF;;AACD9f,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;;AACA,UAAIN,MAAM,IAAIM,MAAM,CAACN,MAArB,EAA6B;AAC3B,eAAOM,MAAP;AACD;;AACD,UAAIoJ,GAAG,GAAG1J,MAAM,GAAG6mB,QAAQ,CAAC7mB,MAA5B;;AACA,UAAI0J,GAAG,GAAG,CAAV,EAAa;AACX,eAAOmd,QAAP;AACD;;AACD,UAAI1lB,MAAM,GAAGb,MAAM,CAACiE,KAAP,CAAa,CAAb,EAAgBmF,GAAhB,CAAb;;AACA,UAAIod,SAAS,IAAI,IAAjB,EAAuB;AACrB,eAAO3lB,MAAM,GAAG0lB,QAAhB;AACD;;AACD,UAAI/D,QAAQ,CAACgE,SAAD,CAAZ,EAAyB;AACvB,YAAIxmB,MAAM,CAACiE,KAAP,CAAamF,GAAb,EAAkBqd,MAAlB,CAAyBD,SAAzB,CAAJ,EAAyC;AACvC,cAAIX,KAAJ;AAAA,cACIa,MADJ;AAAA,cAEIC,SAAS,GAAG3mB,MAAM,CAACiE,KAAP,CAAa,CAAb,EAAgBmF,GAAhB,CAFhB;;AAIA,cAAI,CAACod,SAAS,CAAC3nB,MAAf,EAAuB;AACrB2nB,YAAAA,SAAS,GAAGlqB,MAAM,CAACkqB,SAAS,CAACjqB,MAAX,EAAmB,CAACM,OAAO,CAACyc,IAAR,CAAakN,SAAb,KAA2B,EAA5B,IAAkC,GAArD,CAAlB;AACD;;AACDA,UAAAA,SAAS,CAACjN,SAAV,GAAsB,CAAtB;;AACA,iBAAQsM,KAAK,GAAGW,SAAS,CAAClN,IAAV,CAAeqN,SAAf,CAAhB,EAA4C;AAC1CD,YAAAA,MAAM,GAAGb,KAAK,CAACpmB,KAAf;AACD;;AACDoB,UAAAA,MAAM,GAAGA,MAAM,CAACoD,KAAP,CAAa,CAAb,EAAgByiB,MAAM,IAAI,IAAV,GAAiBtd,GAAjB,GAAuBsd,MAAvC,CAAT;AACD;AACF,OAfD,MAeO,IAAI1mB,MAAM,CAACI,OAAP,CAAeomB,SAAf,EAA0Bpd,GAA1B,KAAkCA,GAAtC,EAA2C;AAChD,YAAI3J,KAAK,GAAGoB,MAAM,CAAC+a,WAAP,CAAmB4K,SAAnB,CAAZ;;AACA,YAAI/mB,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdoB,UAAAA,MAAM,GAAGA,MAAM,CAACoD,KAAP,CAAa,CAAb,EAAgBxE,KAAhB,CAAT;AACD;AACF;;AACD,aAAOoB,MAAM,GAAG0lB,QAAhB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASK,QAAT,CAAkB5mB,MAAlB,EAA0B;AACxBA,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA,aAAQA,MAAM,IAAI3D,gBAAgB,CAACsL,IAAjB,CAAsB3H,MAAtB,CAAX,GACHA,MAAM,CAAC6D,OAAP,CAAe1H,aAAf,EAA8B6F,gBAA9B,CADG,GAEHhC,MAFJ;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASwV,KAAT,CAAexV,MAAf,EAAuB6mB,OAAvB,EAAgClM,KAAhC,EAAuC;AACrC,UAAIA,KAAK,IAAI1F,cAAc,CAACjV,MAAD,EAAS6mB,OAAT,EAAkBlM,KAAlB,CAA3B,EAAqD;AACnDkM,QAAAA,OAAO,GAAG,IAAV;AACD;;AACD7mB,MAAAA,MAAM,GAAGF,YAAY,CAACE,MAAD,CAArB;AACA,aAAOA,MAAM,CAAC6lB,KAAP,CAAagB,OAAO,IAAItpB,OAAxB,KAAoC,EAA3C;AACD;AAED;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS4oB,OAAT,CAAiBphB,IAAjB,EAAuB;AACrB,UAAI;AACF,eAAOA,IAAI,EAAX;AACD,OAFD,CAEE,OAAMC,CAAN,EAAS;AACT,eAAOid,OAAO,CAACjd,CAAD,CAAP,GAAaA,CAAb,GAAiBvC,KAAK,CAACuC,CAAD,CAA7B;AACD;AACF;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASuQ,QAAT,CAAkBxQ,IAAlB,EAAwB4H,OAAxB,EAAiCgO,KAAjC,EAAwC;AACtC,UAAIA,KAAK,IAAI1F,cAAc,CAAClQ,IAAD,EAAO4H,OAAP,EAAgBgO,KAAhB,CAA3B,EAAmD;AACjDhO,QAAAA,OAAO,GAAG,IAAV;AACD;;AACD,aAAOvL,YAAY,CAAC2D,IAAD,CAAZ,GACH+hB,OAAO,CAAC/hB,IAAD,CADJ,GAEH2H,YAAY,CAAC3H,IAAD,EAAO4H,OAAP,CAFhB;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS+G,QAAT,CAAkBzU,KAAlB,EAAyB;AACvB,aAAO,YAAW;AAChB,eAAOA,KAAP;AACD,OAFD;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS8N,QAAT,CAAkB9N,KAAlB,EAAyB;AACvB,aAAOA,KAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAAS6nB,OAAT,CAAiBvqB,MAAjB,EAAyB;AACvB,aAAOyQ,WAAW,CAACC,SAAS,CAAC1Q,MAAD,EAAS,IAAT,CAAV,CAAlB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASwqB,KAAT,CAAevmB,MAAf,EAAuBjE,MAAvB,EAA+BujB,OAA/B,EAAwC;AACtC,UAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB,YAAIkH,KAAK,GAAG1c,QAAQ,CAAC/N,MAAD,CAApB;AAAA,YACIuP,KAAK,GAAGkb,KAAK,IAAIxhB,IAAI,CAACjJ,MAAD,CADzB;AAAA,YAEIiQ,WAAW,GAAGV,KAAK,IAAIA,KAAK,CAACpM,MAAf,IAAyBmQ,aAAa,CAACtT,MAAD,EAASuP,KAAT,CAFxD;;AAIA,YAAI,EAAEU,WAAW,GAAGA,WAAW,CAAC9M,MAAf,GAAwBsnB,KAArC,CAAJ,EAAiD;AAC/Cxa,UAAAA,WAAW,GAAG,KAAd;AACAsT,UAAAA,OAAO,GAAGvjB,MAAV;AACAA,UAAAA,MAAM,GAAGiE,MAAT;AACAA,UAAAA,MAAM,GAAG,IAAT;AACD;AACF;;AACD,UAAI,CAACgM,WAAL,EAAkB;AAChBA,QAAAA,WAAW,GAAGqD,aAAa,CAACtT,MAAD,EAASiJ,IAAI,CAACjJ,MAAD,CAAb,CAA3B;AACD;;AACD,UAAIygB,KAAK,GAAG,IAAZ;AAAA,UACIvd,KAAK,GAAG,CAAC,CADb;AAAA,UAEI8N,MAAM,GAAGS,UAAU,CAACxN,MAAD,CAFvB;AAAA,UAGId,MAAM,GAAG8M,WAAW,CAAC9M,MAHzB;;AAKA,UAAIogB,OAAO,KAAK,KAAhB,EAAuB;AACrB9C,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO,IAAI1S,QAAQ,CAACwV,OAAD,CAAR,IAAqB,WAAWA,OAApC,EAA6C;AAClD9C,QAAAA,KAAK,GAAG8C,OAAO,CAAC9C,KAAhB;AACD;;AACD,aAAO,EAAEvd,KAAF,GAAUC,MAAjB,EAAyB;AACvB,YAAIqQ,UAAU,GAAGvD,WAAW,CAAC/M,KAAD,CAA5B;AAAA,YACIsF,IAAI,GAAGxI,MAAM,CAACwT,UAAD,CADjB;AAGAvP,QAAAA,MAAM,CAACuP,UAAD,CAAN,GAAqBhL,IAArB;;AACA,YAAIwI,MAAJ,EAAY;AACV/M,UAAAA,MAAM,CAACwC,SAAP,CAAiB+M,UAAjB,IAAgC,UAAShL,IAAT,EAAe;AAC7C,mBAAO,YAAW;AAChB,kBAAIsC,QAAQ,GAAG,KAAKH,SAApB;;AACA,kBAAI8V,KAAK,IAAI3V,QAAb,EAAuB;AACrB,oBAAIxG,MAAM,GAAGL,MAAM,CAAC,KAAKyG,WAAN,CAAnB;AACA,iBAACpG,MAAM,CAACuG,WAAP,GAAqBD,SAAS,CAAC,KAAKC,WAAN,CAA/B,EAAmD9C,IAAnD,CAAwD;AAAE,0BAAQS,IAAV;AAAgB,0BAAQkD,SAAxB;AAAmC,6BAAWzH;AAA9C,iBAAxD;AACAK,gBAAAA,MAAM,CAACqG,SAAP,GAAmBG,QAAnB;AACA,uBAAOxG,MAAP;AACD;;AACD,kBAAIkN,IAAI,GAAG,CAAC,KAAK9O,KAAL,EAAD,CAAX;AACAqF,cAAAA,IAAI,CAAC2J,KAAL,CAAWF,IAAX,EAAiB9F,SAAjB;AACA,qBAAOlD,IAAI,CAACkJ,KAAL,CAAWzN,MAAX,EAAmBuN,IAAnB,CAAP;AACD,aAXD;AAYD,WAb+B,CAa9BhJ,IAb8B,CAAhC;AAcD;AACF;;AACD,aAAOvE,MAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASymB,UAAT,GAAsB;AACpB/kB,MAAAA,OAAO,CAACC,CAAR,GAAYuB,OAAZ;AACA,aAAO,IAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASqV,IAAT,GAAgB,CACd;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASmO,QAAT,CAAkBrd,GAAlB,EAAuB;AACrB,aAAOvG,YAAY,CAACuG,GAAG,GAAG,EAAP,CAAnB;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASsd,UAAT,CAAoB3mB,MAApB,EAA4B;AAC1B,aAAO,UAASqJ,GAAT,EAAc;AACnB,eAAOrJ,MAAM,IAAI,IAAV,GAAiBnH,SAAjB,GAA6BmH,MAAM,CAACqJ,GAAD,CAA1C;AACD,OAFD;AAGD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,aAASud,KAAT,CAAeje,KAAf,EAAsBC,GAAtB,EAA2Bie,IAA3B,EAAiC;AAC/B,UAAIA,IAAI,IAAIpS,c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","sourcesContent":["/**\n * @license\n * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.1.0';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      REARG_FLAG = 128,\n      ARY_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 0,\n      LAZY_MAP_FLAG = 1,\n      LAZY_WHILE_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /**\n   * Used to match ES template delimiters.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components)\n   * for more details.\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect named functions. */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /**\n   * Used to match `RegExp` special characters.\n   * See this [article on `RegExp` characters](http://www.regular-expressions.info/characters.html#special)\n   * for more details.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to detect functions containing a `this` reference. */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '{2,}(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    'window', 'WinRTError'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it is the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = (objectTypes[typeof window] && window !== (this && this.window)) ? window : this;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare to `other`.\n   * @param {*} other The value to compare to `value`.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsReflexive = value === value,\n          othIsReflexive = other === other;\n\n      if (value > other || !valIsReflexive || (typeof value == 'undefined' && othIsReflexive)) {\n        return 1;\n      }\n      if (value < other || !othIsReflexive || (typeof other == 'undefined' && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = (fromIndex || 0) - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` and `_.sortByAll` which uses `comparer`\n   * to define the sort order of `array` and replaces criteria objects with their\n   * corresponding values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * Converts `value` to a string if it is not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback for string values.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the code unit of the first character of the string.\n   */\n  function charAtCallback(string) {\n    return string.charCodeAt(0);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByAll` to compare multiple properties of each element\n   * in a collection and stable sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultipleAscending(object, other) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        return result;\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   * If `fromRight` is provided elements of `array` are iterated from right to left.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} [fromIndex] The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromRight ? (fromIndex || length) : ((fromIndex || 0) - 1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return (value && typeof value == 'object') || false;\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'add': function(a, b) { return a + b; } });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'sub': function(a, b) { return a - b; } });\n   *\n   * _.isFunction(_.add);\n   * // => true\n   * _.isFunction(_.sub);\n   * // => false\n   *\n   * lodash.isFunction(lodash.add);\n   * // => false\n   * lodash.isFunction(lodash.sub);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) && document.document;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to the length of n-tuples for `_.unzip`. */\n    var getLength = baseProperty('length');\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the `toStringTag` of values.\n     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * for more details.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reNative = RegExp('^' +\n      escapeRegExp(objToString)\n      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        push = arrayProto.push,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = isNative(Set = context.Set) && Set,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n        unshift = arrayProto.unshift,\n        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = isNative(func = context.Float64Array) && func,\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsFinite = context.isFinite,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the maximum length of an array-like value.\n     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * for more details.\n     */\n    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable intuitive chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * The wrapper functions that support shortcut fusion are:\n     * `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `first`,\n     * `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`, `slice`,\n     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `where`\n     *\n     * The chainable wrapper functions are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `compact`, `concat`, `constant`, `countBy`,\n     * `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n     * `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`, `flatten`,\n     * `flattenDeep`, `flow`, `flowRight`, `forEach`, `forEachRight`, `forIn`,\n     * `forInRight`, `forOwn`, `forOwnRight`, `functions`, `groupBy`, `indexBy`,\n     * `initial`, `intersection`, `invert`, `invoke`, `keys`, `keysIn`, `map`,\n     * `mapValues`, `matches`, `memoize`, `merge`, `mixin`, `negate`, `noop`,\n     * `omit`, `once`, `pairs`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pluck`, `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`,\n     * `rearg`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `sortByAll`, `splice`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`,\n     * `where`, `without`, `wrap`, `xor`, `zip`, and `zipObject`\n     *\n     * The wrapper functions that are **not** chainable by default are:\n     * `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n     * `identity`, `includes`, `indexOf`, `isArguments`, `isArray`, `isBoolean`,\n     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`,\n     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`,\n     * `noConflict`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`,\n     * `random`, `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`,\n     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`,\n     * `startCase`, `startsWith`, `template`, `trim`, `trimLeft`, `trimRight`,\n     * `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper function `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, n) { return sum + n; });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) { return n * n; });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return new LodashWrapper(value.__wrapped__, value.__chain__, arrayCopy(value.__actions__));\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n\n      /**\n       * Detect if functions can be decompiled by `Function#toString`\n       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n       * the PlayStation 3; forced `false` for Windows 8 apps).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n      /**\n       * Detect if `Function#name` is supported (all but IE).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcNames = typeof Function.name == 'string';\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n\n      /**\n       * Detect if `arguments` object indexes are non-enumerable.\n       *\n       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n       * checks for indexes that exceed their function's formal parameters with\n       * associated values of `0`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n      } catch(e) {\n        support.nonEnumArgs = true;\n      }\n    }(0, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.actions = null;\n      this.dir = 1;\n      this.dropCount = 0;\n      this.filtered = false;\n      this.iteratees = null;\n      this.takeCount = POSITIVE_INFINITY;\n      this.views = null;\n      this.wrapped = value;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.actions,\n          iteratees = this.iteratees,\n          views = this.views,\n          result = new LazyWrapper(this.wrapped);\n\n      result.actions = actions ? arrayCopy(actions) : null;\n      result.dir = this.dir;\n      result.dropCount = this.dropCount;\n      result.filtered = this.filtered;\n      result.iteratees = iteratees ? arrayCopy(iteratees) : null;\n      result.takeCount = this.takeCount;\n      result.views = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.filtered) {\n        var result = new LazyWrapper(this);\n        result.dir = -1;\n        result.filtered = true;\n      } else {\n        result = this.clone();\n        result.dir *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.wrapped.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.actions);\n      }\n      var dir = this.dir,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.views),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          dropCount = this.dropCount,\n          takeCount = nativeMin(length, this.takeCount - dropCount),\n          index = isRight ? end : start - 1,\n          iteratees = this.iteratees,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              computed = iteratee(value, index, array),\n              type = data.type;\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        if (dropCount) {\n          dropCount--;\n        } else {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Adds `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.max` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     */\n    function arrayMax(array) {\n      var index = -1,\n          length = array.length,\n          result = NEGATIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.min` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     */\n    function arrayMin(array) {\n      var index = -1,\n          length = array.length,\n          result = POSITIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return typeof objectValue == 'undefined' ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This method is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (typeof objectValue == 'undefined' || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @returns {Object} Returns the destination object.\n     */\n    function baseAssign(object, source, customizer) {\n      var props = keys(source);\n      if (!customizer) {\n        return baseCopy(source, object, props);\n      }\n      var index = -1,\n          length = props.length\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? result !== value : value === value) ||\n            (typeof value == 'undefined' && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.at` without support for strings and individual\n     * key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} [props] The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          length = collection.length,\n          isArr = isLength(length),\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          key = parseFloat(key);\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Array} props The property names to copy.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, object, props) {\n      if (!props) {\n        props = object;\n        object = {};\n      }\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.bindAll` without support for individual\n     * method name arguments.\n     *\n     * @private\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {string[]} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     */\n    function baseBindAll(object, methodNames) {\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return (typeof thisArg != 'undefined' && isBindable(func))\n          ? bindCallback(func, thisArg, argCount)\n          : func;\n      }\n      if (func == null) {\n        return identity;\n      }\n      // Handle \"_.property\" and \"_.matches\" style callback shorthands.\n      return type == 'object'\n        ? baseMatches(func)\n        : baseProperty(func + '');\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (typeof result != 'undefined') {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseCopy(value, result, keys(value));\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || context.Object();\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The `arguments` object to slice and provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args, fromIndex) {\n      if (!isFunction(func)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, baseSlice(args, fromIndex)); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = isCommon && values.length >= 200 && createCache(values),\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    function baseEach(collection, iteratee) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        return baseForOwn(collection, iteratee);\n      }\n      var index = -1,\n          iterable = toObject(collection);\n\n      while (++index < length) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    }\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    function baseEachRight(collection, iteratee) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        return baseForOwnRight(collection, iteratee);\n      }\n      var iterable = toObject(collection);\n      while (length--) {\n        if (iteratee(iterable[length], length, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    }\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iterator functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    function baseFor(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = toObject(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForRight(object, iteratee, keysFunc) {\n      var iterable = toObject(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[length];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invoke` which requires additional arguments\n     * to be provided as an array of arguments rather than individually.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {Array} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     */\n    function baseInvoke(collection, methodName, args) {\n      var index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? methodName : (value != null && value[methodName]);\n        result[++index] = func ? func.apply(value, args) : undefined;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isWhere, stackA, stackB) {\n      // Exit early for identical values.\n      if (value === other) {\n        // Treat `+0` vs. `-0` as not equal.\n        return value !== 0 || (1 / value == 1 / other);\n      }\n      var valType = typeof value,\n          othType = typeof other;\n\n      // Exit early for unlike primitive values.\n      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n          value == null || other == null) {\n        // Return `false` unless both values are `NaN`.\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isWhere, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (valWrapped || othWrapped) {\n        return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isWhere, stackA, stackB);\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isWhere, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Object} source The object to inspect.\n     * @param {Array} props The source property names to match.\n     * @param {Array} values The source values to match.\n     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      var index = -1,\n          noCustomizer = !customizer;\n\n      while (++index < length) {\n        if ((noCustomizer && strictCompareFlags[index])\n              ? values[index] !== object[props[index]]\n              : !hasOwnProperty.call(object, props[index])\n            ) {\n          return false;\n        }\n      }\n      index = -1;\n      while (++index < length) {\n        var key = props[index];\n        if (noCustomizer && strictCompareFlags[index]) {\n          var result = hasOwnProperty.call(object, key);\n        } else {\n          var objValue = object[key],\n              srcValue = values[index];\n\n          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (typeof result == 'undefined') {\n            result = baseIsEqual(srcValue, objValue, customizer, true);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var result = [];\n      baseEach(collection, function(value, key, collection) {\n        result.push(iteratee(value, key, collection));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which supports specifying whether\n     * `source` should be cloned.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var props = keys(source),\n          length = props.length;\n\n      if (length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return function(object) {\n            return object != null && value === object[key] && hasOwnProperty.call(object, key);\n          };\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = source[props[length]];\n        values[length] = value;\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return function(object) {\n        return baseIsMatch(object, props, values, strictCompareFlags);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns the destination object.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n\n      (isSrcArr ? arrayEach : baseForOwn)(source, function(srcValue, key, source) {\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        var value = object[key],\n            result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n            isCommon = typeof result == 'undefined';\n\n        if (isCommon) {\n          result = srcValue;\n        }\n        if ((isSrcArr || typeof result != 'undefined') &&\n            (isCommon || (result === result ? result !== value : value === value))) {\n          object[key] = result;\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = typeof result == 'undefined';\n\n      if (isCommon) {\n        result = srcValue;\n        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (value ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? result !== value : value === value) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` which does not coerce `key` to a string.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     */\n    function basePullAt(array, indexes) {\n      var length = indexes.length,\n          result = baseAt(array, indexes);\n\n      indexes.sort(baseCompareAscending);\n      while (length--) {\n        var index = parseFloat(indexes[length]);\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands or `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection)\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (typeof end == 'undefined' || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end - start) >>> 0;\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge && createCache(),\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * returned by `keysFunc`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved unwrapped value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest, instead\n     *  of the lowest, index at which a value should be inserted into `array`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (retHighest ? (computed <= value) : (computed < value)) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest, instead\n     *  of the lowest, index at which a value should be inserted into `array`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsUndef = typeof value == 'undefined';\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || typeof computed != 'undefined');\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (typeof thisArg == 'undefined') {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var pad = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[pad + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[pad + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee. The `setter` sets the keys and values of the accumulator\n     * object. If `initializer` is provided initializes the accumulator object.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return function() {\n        var length = arguments.length,\n            object = arguments[0];\n\n        if (length < 2 || object == null) {\n          return object;\n        }\n        if (length > 3 && isIterateeCall(arguments[1], arguments[2], arguments[3])) {\n          length = 2;\n        }\n        // Juggle arguments.\n        if (length > 3 && typeof arguments[length - 2] == 'function') {\n          var customizer = bindCallback(arguments[--length - 1], arguments[length--], 5);\n        } else if (length > 2 && typeof arguments[length - 1] == 'function') {\n          customizer = arguments[--length];\n        }\n        var index = 0;\n        while (++index < length) {\n          var source = arguments[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        return (this instanceof wrapper ? Ctor : func).apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, arguments);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that gets the extremum value of a collection.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to get the extremum value from an array.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n     *  extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(arrayFunc, isMin) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        var func = getCallback(),\n            noIteratee = iteratee == null;\n\n        if (!(func === baseCallback && noIteratee)) {\n          noIteratee = false;\n          iteratee = func(iteratee, thisArg, 3);\n        }\n        if (noIteratee) {\n          var isArr = isArray(collection);\n          if (!isArr && isString(collection)) {\n            iteratee = charAtCallback;\n          } else {\n            return arrayFunc(isArr ? collection : toIterable(collection));\n          }\n        }\n        return extremumBy(collection, iteratee, isMin);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\n      var Ctor = !isBindKey && createCtorWrapper(func),\n          key = func;\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var result = createHybridWrapper(func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity);\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this;\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        return (this instanceof wrapper ? (Ctor || createCtorWrapper(func)) : func).apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the pad required for `string` based on the given padding length.\n     * The `chars` string may be truncated if the number of padding characters\n     * exceeds the padding length.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPad(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return (this instanceof wrapper ? Ctor : func).apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = !isBindKey && getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data && data !== true) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(null, newData);\n      } else {\n        result = createHybridWrapper.apply(null, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length,\n          result = true;\n\n      if (arrLength != othLength && !(isWhere && othLength > arrLength)) {\n        return false;\n      }\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (result && ++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        result = undefined;\n        if (customizer) {\n          result = isWhere\n            ? customizer(othValue, arrValue, index)\n            : customizer(arrValue, othValue, index);\n        }\n        if (typeof result == 'undefined') {\n          // Recursively compare arrays (susceptible to call stack limits).\n          if (isWhere) {\n            var othIndex = othLength;\n            while (othIndex--) {\n              othValue = other[othIndex];\n              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n              if (result) {\n                break;\n              }\n            }\n          } else {\n            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n          }\n        }\n      }\n      return !!result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            // But, treat `-0` vs. `+0` as not equal.\n            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isWhere) {\n        return false;\n      }\n      var hasCtor,\n          index = -1;\n\n      while (++index < objLength) {\n        var key = objProps[index],\n            result = hasOwnProperty.call(other, key);\n\n        if (result) {\n          var objValue = object[key],\n              othValue = other[key];\n\n          result = undefined;\n          if (customizer) {\n            result = isWhere\n              ? customizer(othValue, objValue, key)\n              : customizer(objValue, othValue, key);\n          }\n          if (typeof result == 'undefined') {\n            // Recursively compare objects (susceptible to call stack limits).\n            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isWhere, stackA, stackB);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n        hasCtor || (hasCtor = key == 'constructor');\n      }\n      if (!hasCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor && ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments; (value, index, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n     *  maximum, extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function extremumBy(collection, iteratee, isMin) {\n      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n          computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = iteratee(value, index, collection);\n        if ((isMin ? current < computed : current > computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `func` is eligible for `this` binding.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is eligible, else `false`.\n     */\n    function isBindable(func) {\n      var support = lodash.support,\n          result = !(support.funcNames ? func.name : support.funcDecomp);\n\n      if (!result) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          result = !reFuncName.test(source);\n        }\n        if (!result) {\n          // Check if `func` references the `this` keyword and store the result.\n          result = reThis.test(source) || isNative(func);\n          baseSetData(func, result);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = +value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number') {\n        var length = object.length,\n            prereq = isLength(length) && isIndex(index, length);\n      } else {\n        prereq = type == 'string' && index in object;\n      }\n      return prereq && object[index] === value;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on ES `ToLength`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n     * for more details.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask;\n\n      var arityFlags = ARY_FLAG | REARG_FLAG,\n          bindFlags = BIND_FLAG | BIND_KEY_FLAG,\n          comboFlags = arityFlags | bindFlags | CURRY_BOUND_FLAG | CURRY_RIGHT_FLAG;\n\n      var isAry = bitmask & ARY_FLAG && !(srcBitmask & ARY_FLAG),\n          isRearg = bitmask & REARG_FLAG && !(srcBitmask & REARG_FLAG),\n          argPos = (isRearg ? data : source)[7],\n          ary = (isAry ? data : source)[8];\n\n      var isCommon = !(bitmask >= REARG_FLAG && srcBitmask > bindFlags) &&\n        !(bitmask > bindFlags && srcBitmask >= REARG_FLAG);\n\n      var isCombo = (newBitmask >= arityFlags && newBitmask <= comboFlags) &&\n        (bitmask < REARG_FLAG || ((isRearg || isAry) && argPos.length <= ary));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties specified\n     * by the `props` array.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length,\n          support = lodash.support;\n\n      var allowIndexes = length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isLength(value.length)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {numer} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [5, 2, 10]);\n     * // => [1, 3]\n     */\n    function difference() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var value = arguments[index];\n        if (isArray(value) || isArguments(value)) {\n          break;\n        }\n      }\n      return baseDifference(value, baseFlatten(arguments, false, true, ++index));\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per element.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) { return n > 1; });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'status': 'busy', 'active': false },\n     *   { 'user': 'fred',    'status': 'busy', 'active': true },\n     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'status': 'away' }), 'user');\n     * // => ['barney', 'fred']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length-- && predicate(array[length], length, array)) {}\n      return baseSlice(array, 0, length + 1);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per element.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) { return n < 3; });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'status': 'busy', 'active': true },\n     *   { 'user': 'fred',    'status': 'busy', 'active': false },\n     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.dropWhile(users, { 'status': 'busy' }), 'user');\n     * // => ['pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var index = -1;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length && predicate(array[index], index, array)) {}\n      return baseSlice(array, index);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for, instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.findIndex(users, function(chr) { return chr.age < 40; });\n     * // => 0\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.findIndex(users, { 'age': 1 });\n     * // => 2\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 1\n     */\n    function findIndex(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) { return chr.age < 40; });\n     * // => 2\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.findLastIndex(users, { 'age': 40 });\n     * // => 1\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length--) {\n        if (predicate(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, 4];\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n     * it is used as the offset from the end of `array`. If `array` is sorted\n     * providing `true` for `fromIndex` performs a faster binary search.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * // performing a binary search\n     * _.indexOf([4, 4, 5, 5, 6, 6], 5, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        return (value === value ? value === other : other !== other) ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values in all provided arrays using `SameValueZero`\n     * for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = [],\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf;\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(isCommon && value.length >= 120 && createCache(argsIndex && value));\n        }\n      }\n      argsLength = args.length;\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [],\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value)) < 0) {\n          argsIndex = argsLength;\n          while (--argsIndex) {\n            var cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([4, 4, 5, 5, 6, 6], 5, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        return (value === value ? value === other : other !== other) ? index : -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using `SameValueZero` for equality\n     * comparisons.\n     *\n     * **Notes:**\n     *  - Unlike `_.without`, this method mutates `array`.\n     *  - `SameValueZero` comparisons are like strict equality comparisons, e.g. `===`,\n     *    except that `NaN` matches `NaN`. See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     *    for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var array = arguments[0];\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = arguments.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = arguments[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    function pullAt(array) {\n      return basePullAt(array || [], baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) { return n % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This function is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5, 6, 6], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    function sortedIndex(array, value, iteratee, thisArg) {\n      var func = getCallback(iteratee);\n      return (func === baseCallback && iteratee == null)\n        ? binaryIndex(array, value)\n        : binaryIndexBy(array, value, func(iteratee, thisArg, 1));\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5, 6, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value, iteratee, thisArg) {\n      var func = getCallback(iteratee);\n      return (func === baseCallback && iteratee == null)\n        ? binaryIndex(array, value, true)\n        : binaryIndexBy(array, value, func(iteratee, thisArg, 1), true);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per element.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) { return n > 1; });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'status': 'busy', 'active': false },\n     *   { 'user': 'fred',    'status': 'busy', 'active': true },\n     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'status': 'away' }), 'user');\n     * // => ['pebbles']\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length-- && predicate(array[length], length, array)) {}\n      return baseSlice(array, length + 1);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per element.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) { return n < 3; });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'status': 'busy', 'active': true },\n     *   { 'user': 'fred',    'status': 'busy', 'active': false },\n     *   { 'user': 'pebbles', 'status': 'away', 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => ['barney']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.takeWhile(users, { 'status': 'busy' }), 'user');\n     * // => ['barney', 'fred']\n     */\n    function takeWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var index = -1;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length && predicate(array[index], index, array)) {}\n      return baseSlice(array, 0, index);\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, false, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using `SameValueZero`\n     * for equality comparisons. Providing `true` for `isSorted` performs a faster\n     * search algorithm for sorted arrays. If an iteratee function is provided it\n     * is invoked for each value in the array to generate the criterion by which\n     * uniqueness is computed. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     *  If a property name or object is provided it is used to create a \"_.property\"\n     *  or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1]);\n     * // => [1, 2]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) { return this.floor(n); }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      // Juggle arguments.\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var func = getCallback();\n      if (!(func === baseCallback && iteratee == null)) {\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-`_.zip`\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      var index = -1,\n          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all provided values using `SameValueZero` for\n     * equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, baseSlice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Symmetric_difference) for\n     * more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var length = arguments.length,\n          array = Array(length);\n\n      while (length--) {\n        array[length] = arguments[length];\n      }\n      return unzip(array);\n    }\n\n    /**\n     * Creates an object composed from arrays of property names and values. Provide\n     * either a single two dimensional array, e.g. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of property names and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` object.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) { return chr.user + ' is ' + chr.age; })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .last()\n     *  .thru(function(value) { return [value]; })\n     *  .value();\n     * // => [3]\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {*} Returns the `lodash` object.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` object.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse());\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var length = collection ? collection.length : 0;\n      if (isLength(length)) {\n        collection = toIterable(collection);\n      }\n      return baseAt(collection, baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Checks if `value` is in `collection` using `SameValueZero` for equality\n     * comparisons. If `fromIndex` is negative, it is used as the offset from\n     * the end of `collection`.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      } else {\n        fromIndex = 0;\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) { return Math.floor(n); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) { return this.floor(n); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.every(users, 'age');\n     * // => true\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.every(users, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4], function(n) { return n % 2 == 0; });\n     * // => [2, 4]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['fred']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36 }), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) { return chr.age < 40; }), 'user');\n     * // => 'barney'\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.result(_.find(users, { 'age': 1 }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'fred'\n     */\n    function find(collection, predicate, thisArg) {\n      if (isArray(collection)) {\n        var index = findIndex(collection, predicate, thisArg);\n        return index > -1 ? collection[index] : undefined;\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(collection, predicate, baseEach);\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) { return n % 2 == 1; });\n     * // => 3\n     */\n    function findLast(collection, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(collection, predicate, baseEachRight);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'status': 'busy' },\n     *   { 'user': 'fred',   'age': 40, 'status': 'busy' }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'status': 'busy' }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40 }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Iterator functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(n) { console.log(n); }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(n, key) { console.log(n, key); });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    function forEach(collection, iteratee, thisArg) {\n      return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n        ? arrayEach(collection, iteratee)\n        : baseEach(collection, bindCallback(iteratee, thisArg, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(n) { console.log(n); }).join(',');\n     * // => logs each value from right to left and returns the array\n     */\n    function forEachRight(collection, iteratee, thisArg) {\n      return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n        ? arrayEachRight(collection, iteratee)\n        : baseEachRight(collection, bindCallback(iteratee, thisArg, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) { return Math.floor(n); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) { return this.floor(n); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) { return String.fromCharCode(object.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) { return this.fromCharCode(object.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in `collection`,\n     * returning an array of the results of each invoked method. Any additional\n     * arguments are provided to each invoked method. If `methodName` is a function\n     * it is invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      return baseInvoke(collection, methodName, baseSlice(arguments, 2));\n    }\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * _.map([1, 2, 3], function(n) { return n * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(n) { return n * 3; });\n     * // => [3, 6, 9] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     *  If a property name or object is provided it is used to create a \"_.property\"\n     *  or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) { return chr.age; });\n     * // => { 'user': 'fred', 'age': 40 };\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 };\n     */\n    var max = createExtremum(arrayMax);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     *  If a property name or object is provided it is used to create a \"_.property\"\n     *  or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) { return chr.age; });\n     * // => { 'user': 'barney', 'age': 36 };\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 };\n     */\n    var min = createExtremum(arrayMin, true);\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) { return n % 2; });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) { return this.floor(n) % 2; }, Math);\n     * // => [[1, 3], [2]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.map(_.partition(users, { 'age': 1 }), function(array) { return _.pluck(array, 'user'); });\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.map(_.partition(users, 'active'), function(array) { return _.pluck(array, 'user'); });\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the value of `key` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} key The key of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, key) {\n      return map(collection, baseProperty(key + ''));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg`and invoked with four arguments;\n     * (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, n) { return sum + n; });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator, thisArg) {\n      var func = isArray(collection) ? arrayReduce : baseReduce;\n      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     * _.reduceRight(array, function(flattened, other) { return flattened.concat(other); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator, thisArg) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce;\n      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4], function(n) { return n % 2 == 0; });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.pluck(_.reject(users, { 'age': 36 }), 'user');\n     * // => ['fred']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See [Wikipedia](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      collection = toIterable(collection);\n\n      var index = -1,\n          length = collection.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var rand = baseRandom(0, index);\n        if (index != rand) {\n          result[index] = result[rand];\n        }\n        result[rand] = collection[index];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the size of `collection` by returning `collection.length` for\n     * array-like values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.some(users, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity] The function\n     *  invoked per iteration. If a property name or an object is provided it is\n     *  used to create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) { return Math.sin(n); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) { return this.sin(n); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = { 'criteria': iteratee(value, key, collection), 'index': index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it sorts by property names\n     * instead of an iteratee function.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(string|string[])} props The property names to sort by,\n     *  specified as individual property names or arrays of property names.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 26 },\n     *   { 'user': 'fred',   'age': 30 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortByAll(collection) {\n      var args = arguments;\n      if (args.length > 3 && isIterateeCall(args[1], args[2], args[3])) {\n        args = [collection, args[1]];\n      }\n      var index = -1,\n          length = collection ? collection.length : 0,\n          props = baseFlatten(args, false, false, 1),\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        var length = props.length,\n            criteria = Array(length);\n\n        while (length--) {\n          criteria[length] = value == null ? undefined : value[props[length]];\n        }\n        result[++index] = { 'criteria': criteria, 'index': index, 'value': value };\n      });\n      return baseSortBy(result, compareMultipleAscending);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'status': 'busy', 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'status': 'busy', 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36 }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     *\n     * _.pluck(_.where(users, { 'status': 'busy' }), 'user');\n     * // => ['barney', 'fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) { console.log(_.now() - stamp); }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        if (isFunction(n)) {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (!isFunction(func)) {\n        if (isFunction(n)) {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        } else {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the `length`\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    function bind(func, thisArg) {\n      var bitmask = BIND_FLAG;\n      if (arguments.length > 2) {\n        var partials = baseSlice(arguments, 2),\n            holders = replaceHolders(partials, bind.placeholder);\n\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the `length` property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    function bindAll(object) {\n      return baseBindAll(object,\n        arguments.length > 1\n          ? baseFlatten(arguments, false, false, 1)\n          : functions(object)\n      );\n    }\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (arguments.length > 2) {\n        var partials = baseSlice(arguments, 2),\n            holders = replaceHolders(partials, bindKey.placeholder);\n\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    }\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      if (guard && isIterateeCall(func, arity, guard)) {\n        arity = null;\n      }\n      var result = createWrapper(func, CURRY_FLAG, null, null, null, null, null, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      if (guard && isIterateeCall(func, arity, guard)) {\n        arity = null;\n      }\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, null, null, null, null, null, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function that delays invoking `func` until after `wait` milliseconds\n     * have elapsed since the last time it was invoked. The created function comes\n     * with a `cancel` method to cancel delayed invocations. Provide an options\n     * object to indicate that `func` should be invoked on the leading and/or\n     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n     * function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : wait;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      return baseDelay(func, 1, arguments, 1);\n    }\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      return baseDelay(func, wait, arguments, 2);\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function add(x, y) {\n     *   return x + y;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    function flow() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      if (!length) {\n        return function() {};\n      }\n      if (!arrayEvery(funcs, isFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var index = 0,\n            result = funcs[index].apply(this, arguments);\n\n        while (++index < length) {\n          result = funcs[index].call(this, result);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function add(x, y) {\n     *   return x + y;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    function flowRight() {\n      var funcs = arguments,\n          fromIndex = funcs.length - 1;\n\n      if (fromIndex < 0) {\n        return function() {};\n      }\n      if (!arrayEvery(funcs, isFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var index = fromIndex,\n            result = funcs[index].apply(this, arguments);\n\n        while (index--) {\n          result = funcs[index].call(this, result);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the ES `Map` method interface\n     * of `get`, `has`, and `set`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func) || (resolver && !isFunction(resolver))) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : arguments[0];\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, arguments);\n        cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (!isFunction(predicate)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(func, 2);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      var partials = baseSlice(arguments, 1),\n          holders = replaceHolders(partials, partial.placeholder);\n\n      return createWrapper(func, PARTIAL_FLAG, null, partials, holders);\n    }\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    function partialRight(func) {\n      var partials = baseSlice(arguments, 1),\n          holders = replaceHolders(partials, partialRight.placeholder);\n\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, null, partials, holders);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) { return n * 3; }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    function rearg(func) {\n      var indexes = baseFlatten(arguments, false, false, 1);\n      return createWrapper(func, REARG_FLAG, null, null, null, indexes);\n    }\n\n    /**\n     * Creates a function that only invokes `func` at most once per every `wait`\n     * milliseconds. The created function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the throttled function return the result of the last\n     * `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * var throttled =  _.throttle(renewToken, 300000, { 'trailing': false })\n     * jQuery('.interactive').on('click', throttled);\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the structured clone algorithm.\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var body = _.clone(document.body, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(false) : undefined;\n     * });\n     *\n     * body === document.body\n     * // => false\n     * body.nodeName\n     * // => BODY\n     * body.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      // Juggle arguments.\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = customizer;\n        customizer = isIterateeCall(value, isDeep, thisArg) ? null : isDeep;\n        isDeep = false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, isDeep, customizer);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the structured clone algorithm.\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * body === document.body\n     * // => false\n     * body.nodeName\n     * // => BODY\n     * body.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, true, customizer);\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })();\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      var length = isObjectLike(value) ? value.length : undefined;\n      return (isLength(length) && objToString.call(value) == argsTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return (isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag) || false;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return (value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return (isObjectLike(value) && objToString.call(value) == dateTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return (value && value.nodeType === 1 && isObjectLike(value) &&\n        objToString.call(value).indexOf('Element') > -1) || false;\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return (value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value)) || false;\n      };\n    }\n\n    /**\n     * Checks if a value is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      var length = value.length;\n      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments; (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n        return value === other;\n      }\n      var result = customizer ? customizer(value, other) : undefined;\n      return typeof result == 'undefined' ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return (isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on ES `Number.isFinite`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n      // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n      return typeof value == 'function' || false;\n    }\n    // Fallback for environments that return incorrect `typeof` operator results.\n    if (isFunction(/x/) || (Uint8Array && !isFunction(Uint8Array))) {\n      isFunction = function(value) {\n        // The use of `Object#toString` avoids issues with the `typeof` operator\n        // in older versions of Chrome and Safari which return 'function' for regexes\n        // and Safari 8 equivalents which return 'object' for typed array constructors.\n        return objToString.call(value) == funcTag;\n      };\n    }\n\n    /**\n     * Checks if `value` is the language type of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * **Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return type == 'function' || (value && type == 'object') || false;\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments; (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} source The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      var props = keys(source),\n          length = props.length;\n\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return object != null && value === object[key] && hasOwnProperty.call(object, key);\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = values[length] = source[props[length]];\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as native `isNaN` which returns `true`\n     * for `undefined` and other non-numeric values. See the [ES5 spec](https://es5.github.io/#x15.1.2.4)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reNative.test(fnToString.call(value));\n      }\n      return (isObjectLike(value) && reHostCtor.test(value)) || false;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return (isObjectLike(value) && objToString.call(value) == regexpTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return (isObjectLike(value) && isLength(value.length) && typedArrayTags[objToString.call(value)]) || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3);\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? value.length : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments;\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return typeof value == 'undefined' ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(baseAssign);\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseCopy(properties, result, keys(properties)) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property are ignored.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    function defaults(object) {\n      if (object == null) {\n        return object;\n      }\n      var args = arrayCopy(arguments);\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element `predicate` returns truthy for, instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) { return chr.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.findKey(users, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(object, predicate, baseForOwn, true);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `predicate` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) { return chr.age < 40; });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the \"_.matches\" callback shorthand\n     * _.findLastKey(users, { 'age': 36 });\n     * // => 'barney'\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(object, predicate, baseForOwnRight, true);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments; (value, key, object). Iterator functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    function forIn(object, iteratee, thisArg) {\n      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n        iteratee = bindCallback(iteratee, thisArg, 3);\n      }\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    function forInRight(object, iteratee, thisArg) {\n      iteratee = bindCallback(iteratee, thisArg, 3);\n      return baseForRight(object, iteratee, keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments; (value, key, object). Iterator functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(n, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (iteration order is not guaranteed)\n     */\n    function forOwn(object, iteratee, thisArg) {\n      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n        iteratee = bindCallback(iteratee, thisArg, 3);\n      }\n      return baseForOwn(object, iteratee);\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(n, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, iteratee, thisArg) {\n      iteratee = bindCallback(iteratee, thisArg, 3);\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Checks if `key` exists as a direct property of `object` instead of an\n     * inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     *\n     * // without `multiValue`\n     * _.invert({ 'first': 'fred', 'second': 'barney', 'third': 'fred' });\n     * // => { 'fred': 'third', 'barney': 'second' }\n     *\n     * // with `multiValue`\n     * _.invert({ 'first': 'fred', 'second': 'barney', 'third': 'fred' }, true);\n     * // => { 'fred': ['first', 'third'], 'barney': ['second'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (object) {\n        var Ctor = object.constructor,\n            length = object.length;\n      }\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n         (typeof object != 'function' && (length && isLength(length)))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype == object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created \"_.property\"\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for `iteratee` the created \"_.matches\" style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration. If a property name or object is provided it is used to\n     *  create a \"_.property\" or \"_.matches\" style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(n) { return n * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the \"_.property\" callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee, thisArg) {\n      var result = {};\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments; (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If `predicate` is provided it is invoked for each property\n     * of `object` omitting the properties `predicate` returns truthy for. The\n     * predicate is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    function omit(object, predicate, thisArg) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof predicate != 'function') {\n        var props = arrayMap(baseFlatten(arguments, false, false, 1), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      predicate = bindCallback(predicate, thisArg, 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    }\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    function pick(object, predicate, thisArg) {\n      if (object == null) {\n        return {};\n      }\n      return typeof predicate == 'function'\n        ? pickByCallback(object, bindCallback(predicate, thisArg, 3))\n        : pickByArray(object, baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If the value of `key` is\n     * a function it is invoked with the `this` binding of `object` and its result\n     * is returned, else the property value is returned. If the property value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the property value\n     *  resolves to `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': _.constant(40) };\n     *\n     * _.result(object, 'user');\n     * // => 'fred'\n     *\n     * _.result(object, 'age');\n     * // => 40\n     *\n     * _.result(object, 'status', 'busy');\n     * // => 'busy'\n     *\n     * _.result(object, 'status', _.constant('busy'));\n     * // => 'busy'\n     */\n    function result(object, key, defaultValue) {\n      var value = object == null ? undefined : object[key];\n      if (typeof value == 'undefined') {\n        value = defaultValue;\n      }\n      return isFunction(value) ? value.call(object) : value;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments; (accumulator, value, key, object). Iterator functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6], function(result, n) {\n     *   n *= n;\n     *   if (n % 2) {\n     *     return result.push(n) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(typeof Ctor == 'function' && Ctor.prototype);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to camel case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/CamelCase) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting latin-1 supplementary letters to basic latin letters.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter);\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = (typeof position == 'undefined' ? length : nativeMin(position < 0 ? 0 : (+position || 0), length)) - target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and '`', in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#102](https://html5sec.org/#102),\n     * [#108](https://html5sec.org/#108), and [#133](https://html5sec.org/#133) of\n     * the [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always quote attribute values to reduce\n     * XSS vectors. See [Ryan Grove's article](http://wonko.com/post/html-escaping)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"^\", \"$\", \".\", \"|\", \"?\", \"*\",\n     * \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to kebab case (a.k.a. spinal case).\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles) for\n     * more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it is shorter then the given\n     * padding length. The `chars` string may be truncated if the number of padding\n     * characters can't be evenly divided by the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPad('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it is shorter then the given padding\n     * length. The `chars` string may be truncated if the number of padding\n     * characters exceeds the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    function padLeft(string, length, chars) {\n      string = baseToString(string);\n      return string && (createPad(string, length, chars) + string);\n    }\n\n    /**\n     * Pads `string` on the right side if it is shorter then the given padding\n     * length. The `chars` string may be truncated if the number of padding\n     * characters exceeds the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    function padRight(string, length, chars) {\n      string = baseToString(string);\n      return string && (string + createPad(string, length, chars));\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the ES5 implementation of `parseInt`.\n     * See the [ES5 spec](https://es5.github.io/#E) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to snake case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Snake_case) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to start case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null ? 0 : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes sourceURLs for easier debugging.\n     * See the [HTML5 Rocks article on sourcemaps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for more details.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '';\n     *   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = baseAssign(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = baseAssign(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar]\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string))\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1)\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it is longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', { 'length': 24, 'separator': ' ' });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', { 'length': 24, 'separator': /,? +/ });\n     * //=> 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', { 'omission': ' [...]' });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? +options.length || 0 : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught\n     * error object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function() {\n     *   return document.querySelectorAll(selector);\n     * });\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    function attempt(func) {\n      try {\n        return func();\n      } catch(e) {\n        return isError(e) ? e : Error(e);\n      }\n    }\n\n    /**\n     * Creates a function bound to an optional `thisArg`. If `func` is a property\n     * name the created callback returns the property value for a given element.\n     * If `func` is an object the created callback returns `true` for elements\n     * that contain the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function which performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * var matchesAge = _.matches({ 'age': 36 });\n     *\n     * _.filter(users, matchesAge);\n     * // => [{ 'user': 'barney', 'age': 36 }]\n     *\n     * _.find(users, matchesAge);\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=this] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj && keys(source),\n            methodNames = props && props.length && baseFunctions(source, props);\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__);\n                (result.__actions__ = arrayCopy(this.__actions__)).push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function which returns the property value of `key` on a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * var getName = _.property('user');\n     *\n     * _.map(users, getName);\n     * // => ['fred', barney']\n     *\n     * _.pluck(_.sortBy(users, getName), 'user');\n     * // => ['barney', 'fred']\n     */\n    function property(key) {\n      return baseProperty(key + '');\n    }\n\n    /**\n     * The inverse of `_.property`; this method creates a function which returns\n     * the property value of a given key on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to inspect.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40, 'active': true };\n     * _.map(['active', 'user'], _.propertyOf(object));\n     * // => [true, 'fred']\n     *\n     * var object = { 'a': 3, 'b': 1, 'c': 2 };\n     * _.sortBy(['a', 'b', 'c'], _.propertyOf(object));\n     * // => ['b', 'c', 'a']\n     */\n    function propertyOf(object) {\n      return function(key) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `start` is less than `end` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = +n;\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure `new LodashWrapper` is an instance of `lodash`.\n    LodashWrapper.prototype = lodash.prototype;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var isFilter = index == LAZY_FILTER_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone(),\n            filtered = result.filtered,\n            iteratees = result.iteratees || (result.iteratees = []);\n\n        result.filtered = filtered || isFilter || (index == LAZY_WHILE_FLAG && result.dir < 0);\n        iteratees.push({ 'iteratee': getCallback(iteratee, thisArg, 3), 'type': index });\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var countName = methodName + 'Count',\n          whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n == null ? 1 : nativeMax(+n || 0, 0);\n\n        var result = this.clone();\n        if (result.filtered) {\n          var value = result[countName];\n          result[countName] = index ? nativeMin(value, n) : (value + n);\n        } else {\n          var views = result.views || (result.views = []);\n          views.push({ 'size': n, 'type': methodName + (result.dir < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right': '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : baseProperty;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(index ? value : (value + '')));\n      };\n    });\n\n    LazyWrapper.prototype.dropWhile = function(iteratee, thisArg) {\n      var done,\n          lastIndex,\n          isRight = this.dir < 0;\n\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return this.filter(function(value, index, array) {\n        done = done && (isRight ? index < lastIndex : index > lastIndex);\n        lastIndex = index;\n        return done || (done = !iteratee(value, index, array));\n      });\n    };\n\n    LazyWrapper.prototype.reject = function(iteratee, thisArg) {\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return this.filter(function(value, index, array) {\n        return !iteratee(value, index, array);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n      if (typeof end != 'undefined') {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName],\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = arguments,\n            chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (isLazy || isArray(value)) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.actions)) {\n            var actions = result.actions || (result.actions = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array.prototype` functions to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the lodash wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the lodash wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Narwhal or Rhino -require.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n"]},"metadata":{},"sourceType":"script"}