{"ast":null,"code":"\"use strict\";\n\nvar ClientBase = require('./ClientBase'),\n    request = require(\"request\"),\n    handleError = require('./errorHandler').handleError,\n    Account = require(\"./model/Account\"),\n    Checkout = require(\"./model/Checkout\"),\n    Notification = require(\"./model/Notification\"),\n    Order = require(\"./model/Order\"),\n    PaymentMethod = require(\"./model/PaymentMethod\"),\n    User = require(\"./model/User\"),\n    Merchant = require(\"./model/Merchant\"),\n    crypto = require(\"crypto\"),\n    _ = require(\"lodash\"),\n    qs = require(\"querystring\"),\n    assign = require(\"object-assign\"),\n    callback_key = require('./CallbackKey.js');\n\nfunction Client(opts) {\n  if (!(this instanceof Client)) {\n    return new Client(opts);\n  }\n\n  ClientBase.call(this, opts);\n}\n\nClient.prototype = Object.create(ClientBase.prototype);\n\nClient.prototype.refresh = function (callback) {\n  var self = this;\n  var params = {\n    'grant_type': 'refresh_token',\n    'refresh_token': this.refreshToken\n  };\n  var path = this.tokenUri;\n\n  this._postHttp(path, params, function myPost(err, result) {\n    if (err) {\n      err.type = etypes.TokenRefreshError;\n      callback(err, result);\n      return;\n    }\n\n    self.accessToken = result.access_token;\n    self.refreshToken = result.refresh_token;\n    callback(null, result);\n  });\n};\n\nClient.prototype.getAccounts = function (args, callback) {\n  var opts = {\n    'colName': 'accounts',\n    'ObjFunc': Account\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback);\n};\n\nClient.prototype.getAccount = function (account_id, callback) {\n  var opts = {\n    'path': 'accounts/' + account_id,\n    'ObjFunc': Account\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.createAccount = function (args, callback) {\n  var opts = {\n    'colName': 'accounts',\n    'ObjFunc': Account,\n    'params': args\n  };\n\n  this._postOneHttp(opts, callback);\n};\n\nClient.prototype.getCurrentUser = function (callback) {\n  var opts = {\n    'path': 'user',\n    'ObjFunc': User\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.getUser = function (userId, callback) {\n  var opts = {\n    'path': 'users/' + userId,\n    'ObjFunc': User\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.getNotifications = function (args, callback) {\n  var opts = {\n    'colName': 'notifications',\n    'ObjFunc': Notification\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback);\n};\n\nClient.prototype.getNotification = function (notificationId, callback) {\n  var opts = {\n    'path': 'notifications/' + notificationId,\n    'ObjFunc': Notification\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.getBuyPrice = function (params, callback) {\n  var currencyPair;\n\n  if (params.currencyPair) {\n    currencyPair = params.currencyPair;\n  } else if (params.currency) {\n    currencyPair = 'BTC-' + params.currency;\n  } else {\n    currencyPair = 'BTC-USD';\n  }\n\n  this._getOneHttp({\n    'path': 'prices/' + currencyPair + '/buy'\n  }, callback);\n};\n\nClient.prototype.getSellPrice = function (params, callback) {\n  var currencyPair;\n\n  if (params.currencyPair) {\n    currencyPair = params.currencyPair;\n  } else if (params.currency) {\n    currencyPair = 'BTC-' + params.currency;\n  } else {\n    currencyPair = 'BTC-USD';\n  }\n\n  this._getOneHttp({\n    'path': 'prices/' + currencyPair + '/sell'\n  }, callback);\n};\n\nClient.prototype.getSpotPrice = function (params, callback) {\n  var opts, currencyPair;\n\n  if (params.currencyPair) {\n    currencyPair = params.currencyPair;\n    delete params.currencyPair;\n  } else if (params.currency) {\n    currencyPair = 'BTC-' + params.currency;\n    delete params.currency;\n  } else {\n    currencyPair = 'BTC-USD';\n  }\n\n  opts = {\n    'path': 'prices/' + currencyPair + '/spot',\n    'params': params\n  };\n\n  this._getOneHttp(opts, callback);\n}; // deprecated. use getSpotPrice with ?date=YYYY-MM-DD\n\n\nClient.prototype.getHistoricPrices = function (params, callback) {\n  this._getOneHttp({\n    'path': 'prices/historic',\n    'params': params\n  }, callback);\n};\n\nClient.prototype.getCurrencies = function (callback) {\n  this._getOneHttp({\n    'path': 'currencies'\n  }, callback);\n};\n\nClient.prototype.getExchangeRates = function (params, callback) {\n  this._getOneHttp({\n    'path': 'exchange-rates',\n    'params': params\n  }, callback);\n};\n\nClient.prototype.getTime = function (callback) {\n  this._getOneHttp({\n    'path': 'time'\n  }, callback);\n};\n\nClient.prototype.getPaymentMethods = function (args, callback) {\n  var opts = {\n    'colName': 'payment-methods',\n    'ObjFunc': PaymentMethod\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback);\n};\n\nClient.prototype.getPaymentMethod = function (methodId, callback) {\n  var opts = {\n    'path': 'payment-methods/' + methodId,\n    'ObjFunc': PaymentMethod\n  };\n\n  this._getOneHttp(opts, callback);\n}; // Merchant Endpoints\n\n\nClient.prototype.getOrders = function (args, callback) {\n  var opts = {\n    'colName': 'orders',\n    'ObjFunc': Order\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback);\n};\n\nClient.prototype.getOrder = function (orderId, callback) {\n  var opts = {\n    'path': 'orders/' + orderId,\n    'ObjFunc': Order\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.createOrder = function (args, callback) {\n  var opts = {\n    'colName': 'orders',\n    'ObjFunc': Order,\n    'params': args\n  };\n\n  this._postOneHttp(opts, callback);\n};\n\nClient.prototype.getCheckouts = function (args, callback) {\n  var opts = {\n    'colName': 'checkouts',\n    'ObjFunc': Checkout\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback);\n};\n\nClient.prototype.getCheckout = function (checkoutId, callback) {\n  var opts = {\n    'path': 'checkouts/' + checkoutId,\n    'ObjFunc': Checkout\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.createCheckout = function (args, callback) {\n  var opts = {\n    'colName': 'checkouts',\n    'ObjFunc': Checkout,\n    'params': args\n  };\n\n  this._postOneHttp(opts, callback);\n};\n\nClient.prototype.getMerchant = function (merchantId, callback) {\n  var opts = {\n    'path': 'merchants/' + merchantId,\n    'ObjFunc': Merchant\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.verifyCallback = function (body, signature) {\n  var verifier = crypto.createVerify('RSA-SHA256');\n  verifier.update(body);\n  return verifier.verify(callback_key, signature, 'base64');\n};\n\nClient.prototype.toString = function () {\n  return \"Coinbase API Client for \" + this.baseApiUri;\n};\n\nmodule.exports = Client;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/Client.js"],"names":["ClientBase","require","request","handleError","Account","Checkout","Notification","Order","PaymentMethod","User","Merchant","crypto","_","qs","assign","callback_key","Client","opts","call","prototype","Object","create","refresh","callback","self","params","refreshToken","path","tokenUri","_postHttp","myPost","err","result","type","etypes","TokenRefreshError","accessToken","access_token","refresh_token","getAccounts","args","_getAllHttp","getAccount","account_id","_getOneHttp","createAccount","_postOneHttp","getCurrentUser","getUser","userId","getNotifications","getNotification","notificationId","getBuyPrice","currencyPair","currency","getSellPrice","getSpotPrice","getHistoricPrices","getCurrencies","getExchangeRates","getTime","getPaymentMethods","getPaymentMethod","methodId","getOrders","getOrder","orderId","createOrder","getCheckouts","getCheckout","checkoutId","createCheckout","getMerchant","merchantId","verifyCallback","body","signature","verifier","createVerify","update","verify","toString","baseApiUri","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar ClientBase    = require('./ClientBase'),\n    request       = require(\"request\"),\n    handleError   = require('./errorHandler').handleError,\n    Account       = require(\"./model/Account\"),\n    Checkout      = require(\"./model/Checkout\"),\n    Notification  = require(\"./model/Notification\"),\n    Order         = require(\"./model/Order\"),\n    PaymentMethod = require(\"./model/PaymentMethod\"),\n    User          = require(\"./model/User\"),\n    Merchant      = require(\"./model/Merchant\"),\n    crypto        = require(\"crypto\"),\n    _             = require(\"lodash\"),\n    qs            = require(\"querystring\"),\n    assign        = require(\"object-assign\"),\n    callback_key  = require('./CallbackKey.js');\n\n\nfunction Client(opts) {\n\n  if (!(this instanceof Client)) {\n    return new Client(opts);\n  }\n  ClientBase.call(this, opts);\n}\n\nClient.prototype = Object.create(ClientBase.prototype);\n\nClient.prototype.refresh = function(callback) {\n  var self = this;\n  var params = {\n                 'grant_type'    : 'refresh_token',\n                 'refresh_token' : this.refreshToken\n               };\n  var path = this.tokenUri;\n  this._postHttp(path, params, function myPost(err, result) {\n\n    if (err) {\n      err.type = etypes.TokenRefreshError;\n      callback(err, result);\n      return;\n    }\n    self.accessToken = result.access_token;\n    self.refreshToken = result.refresh_token;\n    callback(null, result);\n  });\n};\n\nClient.prototype.getAccounts = function(args, callback) {\n\n  var opts = {\n    'colName'  : 'accounts',\n    'ObjFunc'  : Account\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback)\n};\n\nClient.prototype.getAccount = function(account_id, callback) {\n\n  var opts = {\n    'path'     : 'accounts/' + account_id,\n    'ObjFunc'  : Account\n  };\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.createAccount = function(args, callback) {\n\n  var opts = {\n    'colName'  : 'accounts',\n    'ObjFunc'  : Account,\n    'params'   : args\n  };\n\n  this._postOneHttp(opts, callback);\n};\n\nClient.prototype.getCurrentUser = function(callback) {\n\n  var opts = {\n    'path'     : 'user',\n    'ObjFunc'  : User\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.getUser = function(userId, callback) {\n\n  var opts = {\n    'path'     : 'users/' + userId,\n    'ObjFunc'  : User\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.getNotifications = function(args, callback) {\n\n  var opts = {\n    'colName'  : 'notifications',\n    'ObjFunc'  : Notification\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback)\n};\n\nClient.prototype.getNotification = function(notificationId, callback) {\n\n  var opts = {\n    'path'     : 'notifications/' + notificationId,\n    'ObjFunc'  : Notification\n  };\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.getBuyPrice = function(params, callback) {\n\n  var currencyPair;\n  if (params.currencyPair) {\n    currencyPair = params.currencyPair;\n  } else if (params.currency) {\n    currencyPair = 'BTC-' + params.currency;\n  } else {\n    currencyPair = 'BTC-USD';\n  }\n  this._getOneHttp({'path': 'prices/' + currencyPair + '/buy'}, callback);\n};\n\nClient.prototype.getSellPrice = function(params, callback) {\n\n  var currencyPair;\n  if (params.currencyPair) {\n    currencyPair = params.currencyPair;\n  } else if (params.currency) {\n    currencyPair = 'BTC-' + params.currency;\n  } else {\n    currencyPair = 'BTC-USD';\n  }\n  this._getOneHttp({'path': 'prices/' + currencyPair + '/sell'}, callback);\n};\n\nClient.prototype.getSpotPrice = function(params, callback) {\n\n  var opts, currencyPair;\n  if (params.currencyPair) {\n    currencyPair = params.currencyPair;\n    delete params.currencyPair;\n  } else if (params.currency) {\n    currencyPair = 'BTC-' + params.currency;\n    delete params.currency;\n  } else {\n    currencyPair = 'BTC-USD';\n  }\n  opts = {'path': 'prices/' + currencyPair + '/spot', 'params': params};\n\n  this._getOneHttp(opts, callback);\n};\n\n// deprecated. use getSpotPrice with ?date=YYYY-MM-DD\nClient.prototype.getHistoricPrices = function(params, callback) {\n\n  this._getOneHttp({'path': 'prices/historic', 'params': params} , callback);\n};\n\nClient.prototype.getCurrencies = function(callback) {\n\n  this._getOneHttp({'path': 'currencies'}, callback);\n};\n\nClient.prototype.getExchangeRates = function(params, callback) {\n\n  this._getOneHttp({'path': 'exchange-rates', 'params': params}, callback);\n};\n\nClient.prototype.getTime = function(callback) {\n\n  this._getOneHttp({'path': 'time'}, callback);\n};\n\nClient.prototype.getPaymentMethods = function(args, callback) {\n\n  var opts = {\n    'colName'  : 'payment-methods',\n    'ObjFunc'  : PaymentMethod\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback)\n};\n\nClient.prototype.getPaymentMethod = function(methodId, callback) {\n\n  var opts = {\n    'path'     : 'payment-methods/' + methodId,\n    'ObjFunc'  : PaymentMethod\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\n// Merchant Endpoints\nClient.prototype.getOrders = function(args, callback) {\n\n  var opts = {\n    'colName'  : 'orders',\n    'ObjFunc'  : Order\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback)\n};\n\nClient.prototype.getOrder = function(orderId, callback) {\n\n  var opts = {\n    'path'     : 'orders/' + orderId,\n    'ObjFunc'  : Order\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.createOrder = function(args, callback) {\n\n  var opts = {\n    'colName'  : 'orders',\n    'ObjFunc' : Order,\n    'params' : args\n  };\n\n  this._postOneHttp(opts, callback);\n};\n\nClient.prototype.getCheckouts = function(args, callback) {\n\n  var opts = {\n    'colName'  : 'checkouts',\n    'ObjFunc'  : Checkout\n  };\n\n  this._getAllHttp(_.assign(args || {}, opts), callback)\n\n};\n\nClient.prototype.getCheckout = function(checkoutId, callback) {\n\n  var opts = {\n    'path'     : 'checkouts/' + checkoutId,\n    'ObjFunc'  : Checkout\n  };\n\n  this._getOneHttp(opts, callback);\n};\n\nClient.prototype.createCheckout = function(args, callback) {\n\n  var opts = {\n    'colName'  : 'checkouts',\n    'ObjFunc' : Checkout,\n    'params' : args\n  };\n\n  this._postOneHttp(opts, callback);\n};\n\nClient.prototype.getMerchant = function(merchantId, callback) {\n\n  var opts = {\n    'path'    : 'merchants/' + merchantId,\n    'ObjFunc' : Merchant\n  };\n\n  this._getOneHttp(opts, callback);\n}\n\nClient.prototype.verifyCallback = function(body, signature) {\n  var verifier = crypto.createVerify('RSA-SHA256');\n  verifier.update(body);\n  return verifier.verify(callback_key, signature, 'base64');\n};\n\nClient.prototype.toString = function() {\n  return \"Coinbase API Client for \" + this.baseApiUri;\n};\n\nmodule.exports = Client;\n\n"]},"metadata":{},"sourceType":"script"}