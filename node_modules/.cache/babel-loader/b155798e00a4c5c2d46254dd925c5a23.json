{"ast":null,"code":"\"use strict\";\n\nvar Transfer = require('./Transfer'),\n    handleError = require('../errorHandler').handleError; //##CONSTRUCTOR\n//\n// _args `client`, `data`, and `account` required_\n//\n//```\n// var Deposit = require('coinbase').model.Deposit;\n// var myDeposit = new Deposit(client, data, account);\n//```\n// - - -\n\n\nfunction Deposit(client, data, account) {\n  if (!(this instanceof Deposit)) {\n    return new Deposit(client, data, account);\n  }\n\n  Transfer.call(this, client, data, account);\n}\n\nDeposit.prototype = Object.create(Transfer.prototype);\n\nDeposit.prototype.commit = function (callback) {\n  var opts = {\n    'colName': 'deposits',\n    'ObjFunc': Deposit\n  };\n\n  this._commit(opts, callback);\n};\n\nmodule.exports = Deposit;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/model/Deposit.js"],"names":["Transfer","require","handleError","Deposit","client","data","account","call","prototype","Object","create","commit","callback","opts","_commit","module","exports"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAMC,OAAO,CAAC,YAAD,CAAzB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,WAD7C,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AACtC,MAAI,EAAE,gBAAgBH,OAAlB,CAAJ,EAAgC;AAC9B,WAAO,IAAIA,OAAJ,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,CAAP;AACD;;AACDN,EAAAA,QAAQ,CAACO,IAAT,CAAc,IAAd,EAAoBH,MAApB,EAA4BC,IAA5B,EAAkCC,OAAlC;AACD;;AAEDH,OAAO,CAACK,SAAR,GAAoBC,MAAM,CAACC,MAAP,CAAcV,QAAQ,CAACQ,SAAvB,CAApB;;AAEAL,OAAO,CAACK,SAAR,CAAkBG,MAAlB,GAA2B,UAASC,QAAT,EAAmB;AAE5C,MAAIC,IAAI,GAAG;AACT,eAAY,UADH;AAET,eAAYV;AAFH,GAAX;;AAKA,OAAKW,OAAL,CAAaD,IAAb,EAAmBD,QAAnB;AACD,CARD;;AAUAG,MAAM,CAACC,OAAP,GAAiBb,OAAjB","sourcesContent":["\"use strict\";\nvar Transfer    = require('./Transfer'),\n    handleError = require('../errorHandler').handleError;\n\n//##CONSTRUCTOR\n//\n// _args `client`, `data`, and `account` required_\n//\n//```\n// var Deposit = require('coinbase').model.Deposit;\n// var myDeposit = new Deposit(client, data, account);\n//```\n// - - -\nfunction Deposit(client, data, account) {\n  if (!(this instanceof Deposit)) {\n    return new Deposit(client, data, account);\n  }\n  Transfer.call(this, client, data, account);\n}\n\nDeposit.prototype = Object.create(Transfer.prototype);\n\nDeposit.prototype.commit = function(callback) {\n\n  var opts = {\n    'colName' : 'deposits',\n    'ObjFunc' : Deposit\n  };\n\n  this._commit(opts, callback);\n};\n\nmodule.exports = Deposit;\n"]},"metadata":{},"sourceType":"script"}