{"ast":null,"code":"\"use strict\";\n\nvar BaseModel = require('./BaseModel'),\n    handleError = require('../errorHandler').handleError;\n\nfunction Transfer(client, data, account) {\n  if (!(this instanceof Transfer)) {\n    return new Transfer(client, data, account);\n  }\n\n  BaseModel.call(this, client, data);\n\n  if (!account) {\n    throw new Error(\"no account arg\");\n  }\n\n  if (!account.id) {\n    throw new Error(\"account has no id\");\n  }\n\n  this.account = account;\n}\n\nTransfer.prototype = Object.create(BaseModel.prototype);\n\nTransfer.prototype._commit = function (opts, callback) {\n  var self = this;\n  var path = 'accounts/' + self.account.id + '/' + opts.colName + '/' + self.id + '/commit';\n\n  self.client._postHttp(path, null, function onPut(err, result) {\n    if (!handleError(err, result, callback)) {\n      callback(null, new opts.ObjFunc(self.client, result.data, self.account));\n    }\n  });\n};\n\nmodule.exports = Transfer;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/model/Transfer.js"],"names":["BaseModel","require","handleError","Transfer","client","data","account","call","Error","id","prototype","Object","create","_commit","opts","callback","self","path","colName","_postHttp","onPut","err","result","ObjFunc","module","exports"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAKC,OAAO,CAAC,aAAD,CAAzB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,WAD7C;;AAGA,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;AACvC,MAAI,EAAE,gBAAgBH,QAAlB,CAAJ,EAAiC;AAC/B,WAAO,IAAIA,QAAJ,CAAaC,MAAb,EAAqBC,IAArB,EAA2BC,OAA3B,CAAP;AACD;;AACDN,EAAAA,SAAS,CAACO,IAAV,CAAe,IAAf,EAAqBH,MAArB,EAA6BC,IAA7B;;AACA,MAAI,CAACC,OAAL,EAAc;AAAE,UAAM,IAAIE,KAAJ,CAAU,gBAAV,CAAN;AAAoC;;AACpD,MAAI,CAACF,OAAO,CAACG,EAAb,EAAiB;AAAE,UAAM,IAAID,KAAJ,CAAU,mBAAV,CAAN;AAAuC;;AAC1D,OAAKF,OAAL,GAAeA,OAAf;AACD;;AAEDH,QAAQ,CAACO,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcZ,SAAS,CAACU,SAAxB,CAArB;;AAEAP,QAAQ,CAACO,SAAT,CAAmBG,OAAnB,GAA6B,UAASC,IAAT,EAAeC,QAAf,EAAyB;AACpD,MAAIC,IAAI,GAAG,IAAX;AAEA,MAAIC,IAAI,GAAG,cAAcD,IAAI,CAACV,OAAL,CAAaG,EAA3B,GAAgC,GAAhC,GAAsCK,IAAI,CAACI,OAA3C,GAAqD,GAArD,GAA2DF,IAAI,CAACP,EAAhE,GAAqE,SAAhF;;AAEAO,EAAAA,IAAI,CAACZ,MAAL,CAAYe,SAAZ,CAAsBF,IAAtB,EAA4B,IAA5B,EAAkC,SAASG,KAAT,CAAeC,GAAf,EAAoBC,MAApB,EAA4B;AAC5D,QAAI,CAACpB,WAAW,CAACmB,GAAD,EAAMC,MAAN,EAAcP,QAAd,CAAhB,EAAyC;AACvCA,MAAAA,QAAQ,CAAC,IAAD,EAAO,IAAID,IAAI,CAACS,OAAT,CAAiBP,IAAI,CAACZ,MAAtB,EAA8BkB,MAAM,CAACjB,IAArC,EAA2CW,IAAI,CAACV,OAAhD,CAAP,CAAR;AACD;AACF,GAJD;AAKD,CAVD;;AAYAkB,MAAM,CAACC,OAAP,GAAiBtB,QAAjB","sourcesContent":["\"use strict\";\nvar BaseModel   = require('./BaseModel'),\n    handleError = require('../errorHandler').handleError;\n\nfunction Transfer(client, data, account) {\n  if (!(this instanceof Transfer)) {\n    return new Transfer(client, data, account);\n  }\n  BaseModel.call(this, client, data);\n  if (!account) { throw new Error(\"no account arg\"); }\n  if (!account.id) { throw new Error(\"account has no id\"); }\n  this.account = account;\n}\n\nTransfer.prototype = Object.create(BaseModel.prototype);\n\nTransfer.prototype._commit = function(opts, callback) {\n  var self = this;\n\n  var path = 'accounts/' + self.account.id + '/' + opts.colName + '/' + self.id + '/commit';\n\n  self.client._postHttp(path, null, function onPut(err, result) {\n    if (!handleError(err, result, callback)) {\n      callback(null, new opts.ObjFunc(self.client, result.data, self.account));\n    }\n  });\n};\n\nmodule.exports = Transfer;\n\n"]},"metadata":{},"sourceType":"script"}