{"ast":null,"code":"\"use strict\";\n\nvar BaseModel = require('./BaseModel'),\n    handleError = require('../errorHandler').handleError; // ##CONSTRUCTOR\n//\n// _args `client` and `data` required_\n//\n//```\n// var Order = require('coinbase').model.Order;\n// var button = new Order(client, data);\n//```\n\n\nfunction Order(client, data) {\n  if (!(this instanceof Order)) {\n    return new Order(client, data);\n  }\n\n  BaseModel.call(this, client, data);\n}\n\nOrder.prototype = Object.create(BaseModel.prototype); //```\n// args = {\n//   'currency'        : currency,\n//   'mispayment'      : mispayment,\n//   'refund_address'  : refund_address,\n// };\n\nOrder.prototype.refund = function (args, callback) {\n  var self = this;\n\n  if (!self.client) {\n    throw \"no client\";\n  }\n\n  if (!self.id) {\n    callback(new Error(\"no order id\"), null);\n    return;\n  }\n\n  var path = 'orders/' + self.id + '/refund';\n\n  self.client._postHttp(path, args, function onPost(err, result) {\n    if (!handleError(err, result, callback)) {\n      var order = new Order(self.client, result.data);\n      callback(null, order);\n    }\n  });\n};\n\nmodule.exports = Order;","map":{"version":3,"sources":["/Users/jaewoochung/Documents/github_repositories/dashboard/node_modules/coinbase/lib/model/Order.js"],"names":["BaseModel","require","handleError","Order","client","data","call","prototype","Object","create","refund","args","callback","self","id","Error","path","_postHttp","onPost","err","result","order","module","exports"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAKC,OAAO,CAAC,aAAD,CAAzB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,WAD7C,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAeC,MAAf,EAAuBC,IAAvB,EAA6B;AAC3B,MAAI,EAAE,gBAAgBF,KAAlB,CAAJ,EAA8B;AAC5B,WAAO,IAAIA,KAAJ,CAAUC,MAAV,EAAkBC,IAAlB,CAAP;AACD;;AACDL,EAAAA,SAAS,CAACM,IAAV,CAAe,IAAf,EAAqBF,MAArB,EAA6BC,IAA7B;AACD;;AAEDF,KAAK,CAACI,SAAN,GAAkBC,MAAM,CAACC,MAAP,CAAcT,SAAS,CAACO,SAAxB,CAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACAJ,KAAK,CAACI,SAAN,CAAgBG,MAAhB,GAAyB,UAASC,IAAT,EAAeC,QAAf,EAAyB;AAChD,MAAIC,IAAI,GAAG,IAAX;;AACA,MAAI,CAACA,IAAI,CAACT,MAAV,EAAkB;AAAC,UAAM,WAAN;AAAmB;;AACtC,MAAI,CAACS,IAAI,CAACC,EAAV,EAAc;AACZF,IAAAA,QAAQ,CAAC,IAAIG,KAAJ,CAAU,aAAV,CAAD,EAA2B,IAA3B,CAAR;AACA;AACD;;AAED,MAAIC,IAAI,GAAG,YAAYH,IAAI,CAACC,EAAjB,GAAsB,SAAjC;;AAEAD,EAAAA,IAAI,CAACT,MAAL,CAAYa,SAAZ,CAAsBD,IAAtB,EAA4BL,IAA5B,EAAkC,SAASO,MAAT,CAAgBC,GAAhB,EAAqBC,MAArB,EAA6B;AAC7D,QAAI,CAAClB,WAAW,CAACiB,GAAD,EAAMC,MAAN,EAAcR,QAAd,CAAhB,EAAyC;AACvC,UAAIS,KAAK,GAAG,IAAIlB,KAAJ,CAAUU,IAAI,CAACT,MAAf,EAAuBgB,MAAM,CAACf,IAA9B,CAAZ;AACAO,MAAAA,QAAQ,CAAC,IAAD,EAAOS,KAAP,CAAR;AACD;AACF,GALD;AAMD,CAhBD;;AAkBAC,MAAM,CAACC,OAAP,GAAiBpB,KAAjB","sourcesContent":["\"use strict\";\nvar BaseModel   = require('./BaseModel'),\n    handleError = require('../errorHandler').handleError;\n\n// ##CONSTRUCTOR\n//\n// _args `client` and `data` required_\n//\n//```\n// var Order = require('coinbase').model.Order;\n// var button = new Order(client, data);\n//```\nfunction Order(client, data) {\n  if (!(this instanceof Order)) {\n    return new Order(client, data);\n  }\n  BaseModel.call(this, client, data);\n}\n\nOrder.prototype = Object.create(BaseModel.prototype);\n\n//```\n// args = {\n//   'currency'        : currency,\n//   'mispayment'      : mispayment,\n//   'refund_address'  : refund_address,\n// };\nOrder.prototype.refund = function(args, callback) {\n  var self = this;\n  if (!self.client) {throw \"no client\";}\n  if (!self.id) {\n    callback(new Error(\"no order id\"), null);\n    return;\n  }\n\n  var path = 'orders/' + self.id + '/refund';\n\n  self.client._postHttp(path, args, function onPost(err, result) {\n    if (!handleError(err, result, callback)) {\n      var order = new Order(self.client, result.data);\n      callback(null, order);\n    }\n  });\n};\n\nmodule.exports = Order;\n\n"]},"metadata":{},"sourceType":"script"}